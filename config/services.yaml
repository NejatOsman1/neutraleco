# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
    
    Symfony\Component\DependencyInjection\ContainerInterface: '@service_container'



    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude:
            - '../src/{AppBundle,DependencyInjection,CmsBundle/Resources,Tests,Kernel.php}'
            - '../src/CmsBundle/EventListener/LocaleListener.php'
            

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.locale_listener:
        class: App\CmsBundle\EventListener\LocaleListener
        arguments:
            $defaultLocale: '%kernel.default_locale%'
            $em: '@doctrine.orm.entity_manager'
        tags:
            - { name: kernel.event_subscriber }

    app.user_locale_listener:
        class: App\CmsBundle\EventListener\UserLocaleListener
        arguments: ['@session', '@doctrine.orm.entity_manager']
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onInteractiveLogin }

    app.exception_listener:
        class: App\CmsBundle\EventListener\ExceptionListener
        arguments: ['@doctrine.orm.entity_manager','@service_container']
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    TrinityApiBundle_show:
        class: App\Trinity\ApiBundle\Controller\AdminController
        calls:
            - [setContainer, ["@service_container"]]

    TrinityApiBundle_inflector:
        class: App\Trinity\ApiBundle\Controller\InflectController

