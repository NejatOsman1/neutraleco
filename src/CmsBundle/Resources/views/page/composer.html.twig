{% trans_default_domain 'cms' %}
<!-- Trinity framework class -->
<script>
var ckeditorlanguage = '{{ app.request.get('locale') }}';
</script>
{# <script src="/bundles/cms/ckeditor5/trinity.js"></script> #}
<script src="/bundles/cms/ckeditor/trinity.js"></script>

<script src="/bundles/cms/codemirror-5.60.0/lib/codemirror.js"></script>
<link rel="stylesheet" href="/bundles/cms/codemirror-5.60.0/lib/codemirror.css">
<link rel="stylesheet" type="text/css" href="/bundles/cms/select2/dist/css/select2.min.css">
<script src="/bundles/cms/codemirror-5.60.0/mode/css/css.js"></script>
<script src="/bundles/cms/codemirror-5.60.0/mode/javascript/javascript.js"></script>
<script src="/bundles/cms/codemirror-5.60.0/mode/xml/xml.js"></script>
<script src="/bundles/cms/codemirror-5.60.0/mode/htmlmixed/htmlmixed.js"></script>
<script src="/bundles/cms/select2/dist/js/select2.min.js"></script>
<script src="/bundles/cms/select2/dist/js/select2.ext.js"></script>

<script>
Trinity.adminBundleLink = '{{path('admin_page_link')}}';
Trinity.adminPageLink = '{{path('admin_page_selector')}}';
Trinity.adminMediaLink = '{{path('admin_media', {parentid: pageMediaDirId, type: 'image', inline: true})|raw}}';
var composerMediaLink = '{{path('admin_media', {parentid: pageMediaDirId, type: 'image', inline: true, composer: true})|raw}}';
var composerMediaEdit = '{{path('admin_media_edit')|raw}}';
</script>

<script type="text/javascript">
var activeEditor = null;
var fileDrop = [];
var inlineDropzones = [];
var active_blocks = {{all_block_sections|json_encode()|raw}};
var admin_page_link = '{{path('admin_page_link')}}';
var admin_media_popup = '{{path('admin_media_popup', {'parentid': mediaParent.id})}}';
var admin_page_composer_uploadhandler = '{{path('admin_page_composer_uploadhandler', {pageid: Page.id})}}';
var ext_icon = '{{asset('bundles/cms/ck_ext.png')}}';
var maxFileSize = {{maxFileSize}};

</script>

<style>
	.sortable-placeholder{
		float: left;
	}

	/* Center video */
	.embed-container{
		margin-bottom: 20px;
	}

	.embed-container iframe {
	    margin: 0 auto;
	    display: block;
	}

	.option-tiles{
		/**/
	}

	.option-tiles .tile{
		display: block;
		padding: 30px 0;
		border: solid 3px #00000008;
		border-radius: 6px;
		transition: .1s all;
		opacity: .5;
	}

	.option-tiles .tile i{
		font-size: 50px;
		display: block;
		margin-bottom: 10px;
	}

	.option-tiles .tile:hover{
		border-color: #34adea;
		background: #34adea11;
		opacity: 1;
	}

	.option-tiles .tile.active{
		border-color: #34adea;
		background: #34adea11;
		opacity: 1;
	}

	.CodeMirror {
	    border: solid 1px #ccc;
	}
	.select2-container{ width:100% !important; }
</style>

<div id="new-section-notifier" style="{% if Page.blocks and Page.blocks.count %}display:none;{% endif %}">
	{{ 'Klik op een blok hiernaast of sleep een blok hierheen om te beginnen.' | trans }}
</div>

<div id="block-container">
	{% if Page.blocks and Page.blocks.count %}
		{% for pi,pageBlock in Page.blocks %}

			{% if  pageBlock.blocks.count %}

				{% set wrapperTitle = [] %}
				{% for b in pageBlock.blocks %}
					{% if b.contentType == 'bundle' %}
                        {% set bundlelabel = (b.bundleLabel|trans) %}
						{% if bundlelabel not in wrapperTitle %} {% set wrapperTitle = wrapperTitle|merge([bundlelabel]) %} {% endif %}
					{% elseif b.media %}
                        {% set bundlelabel = ('Media'|trans) %}
						{% if bundlelabel not in wrapperTitle %} {% set wrapperTitle = wrapperTitle|merge([bundlelabel]) %} {% endif %}
					{% else %}
                        {% set textlabel = ('Tekst'|trans) %}
						{% if textlabel not in wrapperTitle %} {% set wrapperTitle = wrapperTitle|merge([textlabel]) %} {% endif %}
					{% endif %}
				{% endfor %}

				{% set section = null %}
				{% if pageBlock.templateKey and pageBlock.templateKey in all_block_sections|keys %}
					{% set section = all_block_sections[pageBlock.templateKey] %}
				{% endif %}

				{% set allowMove = false %}
				{% if section %}
					<div class="root-block {{pageBlock.enabled ? 'visible' : 'invisible'}} block card" data-divider="{{section and section.divider is defined ? '1' : '0'}}" data-id="{{pageBlock.id}}" data-key="{{section.key}}">

						<div class="add-section-between">
							<button type="button" class="btn-flat wrap-paste tooltipped" data-position="top"  data-tooltip="{{'Blok plakken'|trans}}" style="display:none;" onclick="pasteBlock(this);"><i class="far fa-clipboard"></i></button>
						</div>

						<div class="card-title">
							<input type="hidden" name="block_wrappers_attr[{{pageBlock.id}}][key]" value="{{pageBlock.templateKey}}" />
							{% set allowMove = (section.allowMove and section.allowMove == true) %}
							<div class="wrapper-actions">
								<a class="left wrapper-retract"><i class="fa fa-angle-up"></i></a>
								<a class="left wrapper-expand"><i class="fa fa-angle-down"></i></a>
								<span class="title left">
									{{section.label|trans({}, 'blocks')|raw}}
									{% if section.key == 'framework_empty' %}
										<span style="color:#2093e8;">{{(wrapperTitle is not empty ? (' - ' ~ wrapperTitle|join(' + ')) : '')}}</span>
									{% endif %}
								</span>

								<div class="actions">
									<div class="actions-inner">
										<a onclick="cpop.fixed(false).confirm('{{'Wilt u dit blok verwijderen?'| trans}}', function(){ deleteWrapper(this); cpop.close(); }.bind(this), '{{ 'Verwijderen'|trans}}');" class="right wrapper-delete" data-bs-placement="top" data-bs-toggle="tooltip" title="{{'Sectie verwijderen'|trans}}">
											<i class="far fa-trash-alt"></i>
										</a>
										<a onclick="cloneWrapper(this);return false;" class="right wrapper-clone" data-bs-placement="top" data-bs-toggle="tooltip" title="{{'Sectie kopiÃ«ren'|trans}}">
											<i class="far fa-clone"></i>
										</a>
										<a class="right" data-bs-placement="top" data-bs-toggle="tooltip" title="{{'Zichtbaarheid'|trans}}" onclick="toggleVisibility(this);return false;"><input type="checkbox" name="block_wrappers_enabled[{{pageBlock.id}}]" value="1" {{pageBlock.enabled ? 'checked' : ''}}>
											<i class="fa fa-eye visibility fa-fw" style="display:{{pageBlock.enabled ? '' : 'none'}};"></i>
											<i class="far fa-eye-slash visibility_off fa-fw" style="display:{{pageBlock.enabled ? 'none' : ''}};"></i>
										</a>
										<a class="right" data-modifier="heading" data-bs-placement="top" data-bs-toggle="tooltip" title="{{'Sectie introtekst'|trans}}" onclick="toggleWrapperTextFields(this);return false;">
											<i class="fa fa-heading"></i>
											{# <span class="notify-dot"></span> #}
										</a>
										<a class="right" data-bs-placement="top" data-bs-toggle="tooltip" title="{{'Verdeling van blokken'|trans}}" onclick="setGrid(this);return false;">
											<i class="fa fa-th-large"></i>
										</a>

										{#
										<a class="right" data-position="top"  data-tooltip="{{'Sectie IDs en classes'|trans}}" onclick="toggleWrapperConfig(this);return false;">
											<i class="fa fa-fill-drip"></i>
										</a>
										<a class="right tooltipped " data-position="top"  data-tooltip="{{'Link doel (anchor)'|trans}}" onclick="toggleWrapperLinkConfig(this);return false;">
											<i class="fa fa-anchor"></i>
										</a>
										#}

										<input type="hidden" class="wrapper-grid" name="wrapper-grid[{{pageBlock.id}}]" value="{{pageBlock.gridSize}}" />

										<a class="right tooltipped" data-modifier="settings" data-bs-placement="top" data-bs-toggle="tooltip" title="{{'Sectie instellingen'|trans}}" onclick="toggleWrapperConfig(this);return false;">
											<i class="fa fa-fw fa-cog"></i>
											{# <span class="notify-dot"></span> #}
										</a>
									</div>
								</div>
							</div>
						</div>

						<div class="card-content" id="{{pageBlock.cssId}}">
							<input type="hidden" name="block_wrappers[]" value="{{pageBlock.id}}" />

							{% set selectClass = (pageBlock.selectClass is defined and pageBlock.selectClass is not empty ? pageBlock.selectClass : '') %}
							{% set selectTextColor = (pageBlock.selectTextColor is defined and pageBlock.selectTextColor is not empty ? pageBlock.selectTextColor : '') %}

							<div class="wrapper-config" style="display: none;">
								<div class="row">
									<div class="col-12 col-md-4">
										<h6>{{ 'Sectie classes' | trans }}</h6>
										<div class="input-group">
											<div data-bs-placement="top" data-bs-toggle="tooltip" title="{{'Sectie ID'|trans}}" class="input-group-text"><i class="fa fa-fw fa-hashtag"></i></div>
											<input class="form-control" id="section-config-id" type="text" name="wrapper-config[{{pageBlock.id}}][cssId]" value="{{pageBlock.cssId is not empty ? pageBlock.cssId : ''}}" placeholder="{{ 'Sectie ID' | trans }}" />
										</div>

										<div class="select2-container w-100 input-group">
											{% set items = [] %}
											{% set dbItems = pageBlock.cssClass|split(' ') %}
											<div data-bs-placement="top" data-bs-toggle="tooltip" title="{{'Sectie class'|trans}}" class="input-group-text"><i class="fa fa-fw fa-code"></i></div>
											<select multiple class="tag-selector multiple form-select" name="wrapper-config[{{pageBlock.id}}][cssClass][]" placeholder="Anchor link class"  tabindex="-1" aria-hidden="true">
												{% if allBlockCssClasses is not empty %}
													{% for item in allBlockCssClasses %}
														{% set arrItems = item['css_class']|split(' ') %}
														{% for cssClass in arrItems %}
															{% if cssClass is not empty and cssClass not in items %}
																{% set items = items|merge([cssClass]) %}
																<option value="{{cssClass}}"{% if cssClass in dbItems %} selected{% endif %}>{{cssClass}}</option>
															{% endif %}
														{% endfor %}
													{% endfor %}
												{% endif %}
											</select>
											<!--
											<input class="form-control" id="section-config-class" type="text" name="wrapper-config[{{pageBlock.id}}][cssClass]" value="{{pageBlock.cssClass is not empty ? pageBlock.cssClass : ''}}" placeholder="{{ 'Sectie Class' | trans }}" />-->
										</div>

										<div class="input-group">
											<div data-bs-placement="top" data-bs-toggle="tooltip" title="{{'Sectie anchor link class'|trans}}" class="input-group-text"><i class="fa fa-fw fa-anchor"></i></div>
											<input class="form-control" id="section-config-anchor" type="text" name="wrapper-config[{{pageBlock.id}}][anchor]" value="{{pageBlock.anchor is defined and pageBlock.anchor is not empty ? pageBlock.anchor : ''}}" placeholder="{{ 'Anchor link class' | trans }}" />
										</div>
									</div>
									

									<div class="col-12 col-md-4">
										<h6>{{ 'Sectie opties' | trans }}</h6>
										<div class="input-group">
											<div data-bs-placement="top" data-bs-toggle="tooltip" title="{{'Sectie achtergrondkleur'|trans}}" class="input-group-text"><i class="fa fa-fw fa-fill-drip"></i></div>
											<select class="form-select" name="wrapper-config[{{pageBlock.id}}][selectClass]" id="">
												{% for key,label in wrapperClasses %}
													<option {{selectClass == key ? 'selected' : ''}} value="{{key}}">{{label}}</option>
												{% endfor %}
											</select>
										</div>

										<div class="input-group">
											<div data-bs-placement="top" data-bs-toggle="tooltip" title="{{'Sectie tekstkleur'|trans}}" class="input-group-text"><i class="fa fa-fw fa-font"></i></div>
											<select class="form-select" name="wrapper-config[{{pageBlock.id}}][selectTextColor]" id="">
												{% for key,label in wrapperTextColor %}
													<option {{selectTextColor == key ? 'selected' : ''}} value="{{key}}">{{label}}</option>
												{% endfor %}
											</select>
										</div>
									</div>

									<div class="col">
										<h6>{{ 'Sectie padding' | trans }}</h6>

										<div class="row">
											<div class="col-4"></div>
											<div class="col-4"><input class="padding-field form-control centered" type="text" placeholder="Boven" name="wrapper-config[{{pageBlock.id}}][paddingTop]" value="{{pageBlock.paddingTop is defined and pageBlock.paddingTop is not null ? pageBlock.paddingTop : ''}}"></div>
											<div class="col-4"></div>
										</div>

										<div class="row">
											<div class="col-4"><input disabled class="padding-field form-control centered" type="text" placeholder="Links" name="wrapper-config[{{pageBlock.id}}][paddingLeft]" value="{{pageBlock.paddingLeft is defined and pageBlock.paddingLeft is not null ? pageBlock.paddingLeft : ''}}"></div>
											<div class="col-4"><a onclick="resetPaddingFields();" style="cursor:pointer;" class="btn btn-flat centered"><i class="fa fa-undo-alt"></i> Reset</a></div>
											<div class="col-4"><input disabled class="padding-field form-control centered" type="text" placeholder="Rechts" name="wrapper-config[{{pageBlock.id}}][paddingRight]" value="{{pageBlock.paddingRight is defined and pageBlock.paddingRight is not null ? pageBlock.paddingRight : ''}}"></div>
										</div>

										<div class="row">
											<div class="col-4"></div>
											<div class="col-4"><input class="padding-field form-control centered" type="text" placeholder="Onder" name="wrapper-config[{{pageBlock.id}}][paddingBottom]" value="{{pageBlock.paddingBottom is defined and pageBlock.paddingBottom is not null ? pageBlock.paddingBottom : ''}}"></div>
											<div class="col-4"></div>
										</div>
									</div>
									{#<input type="text" name="wrapper-config[{{pageBlock.id}}][bgColor]" value="{{pageBlock.bgColor is defined and pageBlock.bgColor is not empty ? pageBlock.bgColor : ''}}" class="colorpicker" style="padding-left: 30px;width: calc(100% - 30px);" placeholder="{{ 'Achtergrond kleur' | trans }}" />#}
								</div>
							</div>

							{#
							<div class="wrapper-text-link row" style="display:none;">
								<div class="col s12">
									<div class="card" style="margin:0;">
										<div class="card-content">
											<input style="margin:0;" type="text" name="wrapper-config[{{pageBlock.id}}][anchor]" value="{{pageBlock.anchor is defined and pageBlock.anchor is not empty ? pageBlock.anchor : ''}}" placeholder="{{ 'Link naar dit blok' | trans }}" />
										</div>
									</div>
								</div>
							</div>
							#}

							<div class="wrapper-text-fields" style="display:{{pageBlock.label is not empty or pageBlock.intro is not empty ? 'block' : 'none'}};">
								<h2 data-editor="{{pageBlock.id}}_wrp_fld_label" class="ckeditor4-inline ck-limited" contenteditable="true">{{pageBlock.label is not empty ? pageBlock.label|raw : ('Titel' | trans) }}</h2>
								<input id="{{pageBlock.id}}_wrp_fld_label" class="inline-editor main-label" type="hidden" name="wrapper_fields[{{pageBlock.id}}][label]" value="{{pageBlock.label|raw}}" /><br />

								<div></div>

								<div data-editor="{{pageBlock.id}}_wrp_fld_intro" class="ckeditor4-inline ck-limited" contenteditable="true">{{pageBlock.intro is not empty ? pageBlock.intro|raw : ('Introductie tekst' | trans)}}</div>
								<input id="{{pageBlock.id}}_wrp_fld_intro" class="inline-editor sub-label ck-limited" type="hidden" name="wrapper_fields[{{pageBlock.id}}][intro]" value="{{pageBlock.intro|raw}}" /><br />
							</div>

							{% set leftOver = 12 %}

							{% set containmentLabelsFound = [] %}
							{% set containmentBlocks = [] %}

							<ul class="content-container {{allowMove ? 'sortables connectedSortable' : ''}}">

								{% set w = (pageBlock.blocks.count ? (100 / pageBlock.blocks.count) : '100') %}

								{% set break = false %}
								{% for childBlock in pageBlock.blocks %}
									{% if childBlock.contained %}
										{% if childBlock.contained not in containmentLabelsFound %}
											{% set containmentLabelsFound = containmentLabelsFound|merge([childBlock.contained]) %}
										{% else %}
											{% set containmentBlocks = containmentBlocks|merge([childBlock]) %}
										{% endif %}
									{% endif %}
								{% endfor %}

								{% set break = false %}
								{% for childBlock in pageBlock.blocks %}
									{% if not break %}
									{% set section_block = null %}
									{% for tmp in section.blocks %}
										{% if tmp.key == childBlock.templateKey %}
											{% set section_block = tmp %}

											{% set size = section_block.size %}

											{% if size < leftOver %}
												{% set leftOver = (leftOver - size) %}
											{% else %}
												{% set size = leftOver %}
											{% endif %}

											{% set w = ((size / 12) * 100) %}
										{% endif %}
									{% endfor %}

									{% if pageBlock.gridSize > 0 %}
										{% set w = (100 / pageBlock.gridSize) %}
									{% endif %}

									{% if childBlock.config.width is defined and childBlock.config.width is not empty %}
										{% set size = childBlock.config.width %}
										{% set w = ((size / 12) * 100) %}
									{% endif %}

									{% set off = 0 %}
									{% if childBlock.config.offset is defined and childBlock.config.offset is not empty %}
										{% set size = childBlock.config.offset %}
										{% set off = ((size / 12) * 100) %}
									{% endif %}

									{% set contained = false %}
									{% if section_block.contained is defined %}
										{% set contained = section_block.contained %}
									{% endif %}

									{% set bundleRequired = false %}
									{% set dataRequired = false %}

									{% if section_block and section_block.required is defined and 'Bundle' in section_block.required %}
										{% set bundleRequired = section_block.required %}
									{% elseif childBlock.data is defined and childBlock.data.type is defined and childBlock.data.type is not empty %}
										{% set dataRequired = childBlock.data.type %}
									{% elseif section_block and section_block.required is defined %}
										{% set dataRequired = section_block.required %}
									{% endif %}

									{% set blockDividerSupport = (section and section.divider is defined) %}

									{% set mediaDrop = section_block.mediaDrop is defined %}

									{% if section_block is null %}
										{# {{dump(section_block)}} #}
									{% else %}
										<li id="{{childBlock.id}}" class="col content-block ui-state-default {% if contained %}contained{% endif %} {% if mediaDrop %}media-drop{% endif %}" style="float: left;margin-left:{{off}}%;width:{{w}}%;" data-gridsize="{{((12 / 100) * w)|round}}" data-width="{{w}}%" data-blockid="{{childBlock.id}}" data-key="{{section_block.key}}">
											{% if blockDividerSupport %}
												<span class="divider" style="overflow:visible;"></span>
											{% endif %}
											<div class="card">
												<div class="card-content content-block-wrapper {% if (dataRequired == 'media' and dataRequired == 'medias') and childBlock.content is not empty %}float-actions{% endif %}">

													<div  class="block-actions right-align">
														{% if allowMove %}<span class="left btn-handle"><i class="fa fa-arrows-alt"></i></span>{% endif %}

														<input type="hidden" value="{{childBlock.config.class is defined ? childBlock.config.class : ''}}" class="hidden-field cfg_class" name="block_config[{{childBlock.id}}][class]" placeholder="class" />
														<input type="hidden" value="{{childBlock.config.style is defined ? childBlock.config.style : ''}}" class="hidden-field cfg_style" name="block_config[{{childBlock.id}}][style]" placeholder="style" />
														<input type="hidden" value="{{childBlock.config.link is defined ? childBlock.config.link : ''}}" class="hidden-field cfg_link" name="block_config[{{childBlock.id}}][link]" placeholder="link" />
														<input type="hidden" value="{{childBlock.config.target is defined ? childBlock.config.target : ''}}" class="hidden-field cfg_target" name="block_config[{{childBlock.id}}][target]" placeholder="target" />
														<input type="hidden" value="{{childBlock.config.width is defined ? childBlock.config.width : ''}}" class="hidden-field cfg_width" name="block_config[{{childBlock.id}}][width]" placeholder="width" />
														<input type="hidden" value="{{childBlock.config.offset is defined ? childBlock.config.offset : ''}}" class="hidden-field cfg_offset" name="block_config[{{childBlock.id}}][offset]" placeholder="offset" />
														<input type="hidden" value="{{childBlock.config.id is defined ? childBlock.config.id : ''}}" class="hidden-field cfg_id" name="block_config[{{childBlock.id}}][id]" placeholder="id" />

				                    					<div class="right-actions">
					  										<a onclick="blockSettings(this);" class=" tooltipped" data-position="top"  data-tooltip="{{ 'Blok instellingen' | trans }}"><i class="fa fa-fw fa-cog"></i></a>

															{% set showBlockEdit = true %}
															{% if childBlock.media is not null or childBlock.contentType is empty or childBlock.contentType == 'bundle' %}
																{% set showBlockEdit = false %}
															{% endif %}

															{% if section_block.fields is not empty %}
																{# Custom fields, need to be editable #}
																{% set showBlockEdit = true %}
															{% endif %}

					  										{# <a onclick="editBlock(this);" style="{{showBlockEdit ? '' : 'display:none;'}}"><i class="fa fa-edit"></i></a> #}
					  										{% if section_block.multiple is defined and section_block.multiple == true %}
					  											<a onclick="addStaticBlock(this);" class="tooltipped" data-position="top"  data-tooltip="{{ 'Blok toevoegen' | trans }}"><i class="fa fa-plus"></i></a>
					  											<a onclick="delStaticBlock(this);" class="static-block-delete"><i class="far fa-trash-alt"></i></a>
					  										{% else %}
					  											{% if '_empty' in section.key %}
					  												<a onclick="delContent(this);" class="btn-clear"><i class="fa fa-eraser"></i></a>
					  												<a onclick="delBlock(this);"><i class="far fa-trash-alt"></i></a>
					  											{% endif %}
					  										{% endif %}
				                    					</div>
													</div>

													<input type="hidden" class="hidden-field" name="block[{{pageBlock.id}}][]" value="{{childBlock.id}}" />
													<input type="hidden" class="hidden-field" name="block_attr[{{childBlock.id}}][key]" value="{{childBlock.templateKey}}" />
													<input type="hidden" class="hidden-field" name="block_req[{{childBlock.id}}]" value="{{dataRequired}}" />
													<textarea style="display:none;" class="block_data" name="block_data[{{childBlock.id}}]">{{childBlock.data is defined ? childBlock.data|json_encode|raw : '[]'}}</textarea>

													{% if contained %}
														<input type="hidden" class="hidden-field" name="block_contained[{{childBlock.id}}]" value="{{contained}}" />
													{% endif %}

													{% if dataRequired == 'medias' %}
														{% if childBlock.content is not empty and childBlock.media is not empty %}
															{% set ct = childBlock.content|split(',') %}
															{% set cnt = (childBlock.altMedia.count + 1) %}
															{% if cnt > 1 %}
																{% set wdt = (100 / cnt) %}
																{% if wdt < 50 %}
																	{% set wdt = 50 %}
																{% endif %}
															{% endif %}
															<div class="card-image block-ct clearfix">
																<div class="mm-wrap" style="{{wdt is defined ? 'float:left;width:' ~ wdt ~ '%;' : ''}}">
																	<div class="mm-actions">
																		<a href="#" onclick="removeMM(this);return false;"><i class="far fa-trash-alt"></i></a>
																	</div>
																	<img style="max-width:{{childBlock.media.width}}px;margin:0 auto;" src="/{{childBlock.media.getWebPath}}" alt="{{childBlock.media.label}}" data-mediaid="{{childBlock.media.id}}" data-filepath="/{{childBlock.media.getWebPath}}" data-label="{{childBlock.media.label}}" />
																</div>
																{% if childBlock.altMedia is not empty %}
																	{% for m in childBlock.altMedia %}
																		<div class="mm-wrap" style="{{wdt is defined ? 'float:left;width:' ~ wdt ~ '%;' : ''}}">
																			<div class="mm-actions">
																				<a href="#" onclick="removeMM(this);return false;"><i class="far fa-trash-alt"></i></a>
																			</div>
																			<img style="max-width:{{m.media.width}}px;margin:0 auto;" src="/{{m.media.getWebPath}}" alt="{{m.media.label}}" data-mediaid="{{m.media.id}}" data-filepath="/{{m.media.getWebPath}}" data-label="{{m.media.label}}" />
																		</div>
																	{% endfor %}
																{% endif %}
															</div>
															<input type="hidden" class="hidden-field media-id block-ct" placeholder="media data" name="block_content[{{childBlock.id}}][]" value="{{childBlock.content}}" />

															<div class="center-align media-selector" style="margin: 10px 0;">
																<a onclick="addMedia(this, true);" class="btn"><i class="left fa fa-image"></i>{{ 'Afbeelding(en) toevoegen' | trans }}</a>
															</div>
														{% endif %}
													{% elseif dataRequired == 'media' or childBlock.media is not null %}
														{% if childBlock.content is not empty and childBlock.media is not empty %}
															{% set ct = childBlock.content|split(',') %}
				                      						<div class="card-image-wrapper">
					  											<div class="card-image block-ct"><img style="max-width:{{childBlock.media.width}}px;margin:0 auto;" src="/{{childBlock.media.getWebPath}}" alt="{{childBlock.media.label}}" data-mediaid="{{childBlock.media.id}}" data-filepath="/{{childBlock.media.getWebPath}}" data-label="{{childBlock.media.label}}" /></div>
					  											<input type="hidden" class="hidden-field media-id block-ct" placeholder="media data" name="block_content[{{childBlock.id}}][]" value="{{childBlock.content}}" />

					  											<div class="media-selector">
					  												<a onclick="addMedia(this);"><i class="left fa fa-edit"></i></a>
					  											</div>
				                      						</div>
														{% endif %}
													{% else %}
														{% if childBlock.contentType == 'text' %}
															<div data-editor="editor-{{childBlock.id}}" class="ckeditor4 form-control" contenteditable="true">{{childBlock.content|raw}}</div>
															<textarea name="block_content[{{childBlock.id}}][]" class="inline-editor" id="editor-{{childBlock.id}}">{{childBlock.content|raw}}</textarea>
														{% elseif childBlock.contentType == 'source' %}
															<textarea name="block_content[{{childBlock.id}}][]" class="source-editor" id="editor-{{childBlock.id}}">{{childBlock.content|raw}}</textarea>
															<input type="hidden" name="block_type[{{childBlock.id}}][]" value="source" />
														{% elseif childBlock.contentType == 'bundle' %}
															<div class="block-ct">
																<input type="hidden" name="block_bundle[{{childBlock.id}}][bundle]" class="hidden-field bundle-bundle" value="{{childBlock.bundle}}" />
																<input type="hidden" name="block_bundle[{{childBlock.id}}][label]" class="hidden-field bundle-label" value="{{childBlock.bundleLabel}}" />
																<input type="hidden" name="block_bundle[{{childBlock.id}}][data]" class="hidden-field bundle-data" value="{{childBlock.bundleData}}" id="{{childBlock.id}}_data" />

																<h3>{{'Extensie:' |trans }} {{(childBlock.bundleLabel | trans)}}</h3>

																<div class="linked-bundle-config">
																	{% set templateList = ['Trinity' ~ childBlock.bundleLabel ~ 'Bundle::link_preview.html.twig'] %}																	
																	{% if childBlock.bundle is defined and childBlock.bundle is not empty %}
																		{% set testValue = childBlock.bundle ~ '::link_preview.html.twig' %}
																		{% if testValue not in templateList %}
																			{% set templateList = templateList| merge(templateList) %}
																		{% endif %}
																	{% endif %}
																	{% include templateList ignore missing with {config: json_decode(childBlock.bundleData)} %}
																</div>
															</div>
														{% elseif dataRequired == 'medias' %}
															<input type="hidden" name="block_content[{{childBlock.id}}][]" class="media-data hidden-field" />
														{% elseif dataRequired == 'media' %}
															<input type="hidden" name="block_content[{{childBlock.id}}][]" class="media-data hidden-field" />
														{% elseif dataRequired == 'video' %}
															<input type="hidden" name="block_content[{{childBlock.id}}][]" class="video-data hidden-field" />
														{% endif %}
													{% endif %}

													{% if childBlock.data is defined and childBlock.data is not empty and childBlock.data.type is defined and childBlock.data.type == 'video' %}
														{{childBlock.video(true, true)|raw}}
													{% endif %}
													{% if section_block and section_block.fields %}
														{% for fi,field in section_block.fields %}
															<div class="fields-row {{fi == 0 ? 'first' : ''}}">
																<div class="form-label">{{(field.label)|trans({},'blocks')}}</div>
																<div class="blocks-display-form" id="view_{{childBlock.id ~ '_' ~ field.key}}">
																	{% if field.type == 'page' %}
																		{{childBlock.config[field.key] is defined and childBlock.config[field.key] is not empty ? childBlock.config[field.key]|raw : '<span class="grey-text">n.v.t.</span>'}}
																	{% elseif field.type == 'checkbox' %}
																		{{childBlock.config[field.key] is defined and childBlock.config[field.key] ? ('Ja'|trans({})|raw) : ('Nee'|trans({})|raw)}}
																	{% else %}
																		{{childBlock.config[field.key] is defined and childBlock.config[field.key] is not empty ? childBlock.config[field.key]|raw : '<span class="grey-text">n.v.t.</span>'}}
																	{% endif %}
																</div>
																<div class="blocks-edit-form">
																	{% if field.type == 'text' %}
																		<input class="form-control" data-type="{{field.type}}" id="{{childBlock.id ~ '_' ~ field.key}}" data-linkkey="{{childBlock.id ~ '_' ~ field.key}}" data-key="{{field.key}}" data-label="{{field.label|trans({},'blocks')}}" type="text" value="{{childBlock.config[field.key] is defined ? childBlock.config[field.key] : ''}}" class="template-fields" name="block_config[{{childBlock.id}}][{{field.key}}]" />
																	{% elseif field.type == 'page' %}
																		<div>
																			<button type="button" onclick="linkSelector(this);" class="btn">Selecteer een pagina</button>
																			<div class="pagelabel"></div>
																			<input data-type="{{field.type}}" id="{{childBlock.id ~ '_' ~ field.key}}" data-linkkey="{{childBlock.id ~ '_' ~ field.key}}" data-key="{{field.key}}" data-label="{{field.label|trans({},'blocks')}}" type="hidden" value="{{childBlock.config[field.key] is defined ? childBlock.config[field.key] : ''}}" class="template-fields pageid" name="block_config[{{childBlock.id}}][{{field.key}}]" />
																		</div>
																	{% elseif field.type == 'textarea' %}
																		<div data-editor="{{childBlock.id ~ '_' ~ field.key}}" id="inline-editor-{{childBlock.id ~ '_' ~ field.key}}" class="ckeditor4 form-control" contenteditable="true">{{childBlock.config[field.key] is defined ? childBlock.config[field.key]|raw : ''}}</div>
																		<textarea class="form-control" data-type="{{field.type}}" id="{{childBlock.id ~ '_' ~ field.key}}" data-linkkey="{{childBlock.id ~ '_' ~ field.key}}" data-key="{{field.key}}" data-label="{{field.label|trans({},'blocks')}}" class="inline-editor template-fields" name="block_config[{{childBlock.id}}][{{field.key}}]">{{childBlock.config[field.key] is defined ? childBlock.config[field.key]|raw : ''}}</textarea>
																	{% elseif field.type == 'checkbox' %}
																		<div class="checkbox">
																			<input class="form-check-input" id="{{childBlock.id ~ '_' ~ field.key}}" type="checkbox" name="block_config[{{childBlock.id}}][{{field.key}}]" {{childBlock.config[field.key] is defined ? 'checked="checked"' : ''}} />
																			<label for="{{childBlock.id ~ '_' ~ field.key}}">&nbsp;</label>
																		</div>
																	{% elseif field.type == 'select' %}
																		<div class="select">
																			{% if field.choices is defined and field.choices is not empty %}
																				<select name="block_config[{{childBlock.id}}][{{field.key}}]" id="{{childBlock.id ~ '_' ~ field.key}}">
																					{% for key,val in field.choices|cast_to_array %}
																						<option {{childBlock.config[field.key] is defined and childBlock.config[field.key] == key ? 'selected="selected"' : ''}} value="{{key}}">{{val|raw}}</option>
																					{% endfor %}
																				</select>
																			{% else %}
																				<span class="error">{{ 'GEEN KEUZES BESCHIKBAAR IN BLOCK CONFIG' | trans }}</span>
																			{% endif %}
																		</div>
																	{% endif %}
																</div>
															</div>
														{% endfor %}
													{% endif %}

													<div class="inline-actionss center-align">
														<button type="button" style="{% if childBlock.contentType != 'bundle' %}display:none;{% endif %}" class="btn btn-edit tooltipped" onclick="editBundle(this);" data-tooltip="{{ 'Extensie configureren' | trans }}"><i class="far fa-check-square"></i></button>
														<button type="button" style="{% if childBlock.contentType != 'bundle' %}display:none;{% endif %}" class="btn btn-clear red tooltipped" onclick="delContent(this);" data-tooltip="{{ 'Blok leegmaken' | trans }}"><i class="far fa-trash-alt"></i></button>
														{% if bundleRequired %}
															<button type="button" {% if childBlock.contentType == 'bundle' %}style="display:none;"{% endif %} class="btn btn-bundle" onclick="addSpecificBundle(this, '{{bundleRequired}}');"><i class="left fa fa-paperclip"></i>{{bundleRequired}} {{ 'Koppelen' | trans | lower }}</button>
														{% else %}
															{% if dataRequired %}
																{% if dataRequired == 'medias' %}
																	<button type="button" style="{{childBlock.contentType == '' or childBlock.content == '' ? '' : 'display:none;'}}" class="btn btn-image" onclick="addMedia(this, true);"><i class="fa fa-image fa-fw"></i></button>
																{% elseif dataRequired == 'media' %}
																	<button type="button" style="{{childBlock.contentType == '' or childBlock.content == '' or childBlock.media is empty ? '' : 'display:none;'}}" class="btn btn-image tooltipped" onclick="addMedia(this);" data-tooltip="{{ 'Media koppelen' | trans}}"><i class="fa fa-image fa-fw"></i></button>
																{% elseif dataRequired == 'video' %}
																	<button type="button" style="{{childBlock.contentType == '' or childBlock.content == '' ? '' : 'display:none;'}}" class="btn btn-video tooltipped" onclick="addVideo(this);" data-tooltip="{{ 'Video koppelen' | trans}}"><i class="far fa-play-circle fa-fw"></i></button>
																{% elseif dataRequired == 'text' %}
																	<button type="button" style="{{childBlock.contentType == '' or childBlock.content == '' ? '' : 'display:none;'}}" class="btn btn-text tooltipped" onclick="addText(this);" data-bs-toggle="tooltip" title="{{ 'Tekst koppelen' | trans}}"><i class="fa fa-align-left fa-fw"></i></button>
																{% endif %}
															{% else %}
																{% if childBlock.contentType == '' and (childBlock.data is defined and childBlock.data is empty or childBlock.data.type is not defined) %}
																	<button type="button" class="btn btn-text tooltipped" onclick="addText(this);" data-bs-toggle="tooltip" title="{{ 'Tekst koppelen' | trans}}"><i class="fa fa-align-left fa-fw"></i></button>
																	<button type="button" class="btn btn-image tooltipped" onclick="addMedia(this);" data-tooltip="{{ 'Media koppelen' | trans({}) | raw }}"><i class="fa fa-image fa-fw"></i></button>
																	<button type="button" class="btn btn-video tooltipped" onclick="addVideo(this);" data-tooltip="{{ 'Video koppelen' | trans({}) | raw }}"><i class="far fa-play-circle fa-fw"></i></button>
																	<button type="button" class="btn btn-bundle tooltipped" onclick="addBundle(this);" data-tooltip="{{ 'Extensie koppelen' | trans({}) | raw }}"><i class="fa fa-cube fa-fw"></i></button>
																	<button type="button" class="btn btn-source tooltipped" onclick="addSource(this);" data-tooltip="{{ 'HTML koppelen' | trans({}) | raw }}"><i class="fa fa-code fa-fw"></i></button>
																{% else %}
																	<button type="button" style="display:none;" class="btn btn-text tooltipped" onclick="addText(this);" data-bs-toggle="tooltip" title="{{ 'Tekst koppelen' | trans}}"><i class="fa fa-align-left fa-fw"></i></button>
																	<button type="button" style="display:none;" class="btn btn-image tooltipped" onclick="addMedia(this);" data-tooltip="{{ 'Media koppelen' | trans}}"><i class="fa fa-image fa-fw"></i></button>
																	<button type="button" style="display:none;" class="btn btn-video tooltipped" onclick="addVideo(this);" data-tooltip="{{ 'Video koppelen' | trans}}"><i class="far fa-play-circle fa-fw"></i></button>
																	<button type="button" style="display:none;" class="btn btn-bundle tooltipped" onclick="addBundle(this);" data-tooltip="{{ 'Extensie koppelen' | trans}}"><i class="fa fa-cube fa-fw"></i></button>
																	<button type="button" style="display:none;" class="btn btn-source tooltipped" onclick="addSource(this);" data-tooltip="{{ 'HTML koppelen' | trans}}"><i class="fa fa-code fa-fw"></i></button>
																{% endif %}
															{% endif %}
														{% endif %}
													</div>

													{# BUTTONS #}
													{% if section_block.buttons is defined %}
														<div class="block-buttons">
															<div class="button-wrapper">
																{# Buttons are added here #}
																{% if childBlock.config.buttons is defined %}
																	{% for index,btn in childBlock.config.buttons %}
																		<a onclick="editButton(this, '{{childBlock.id}}');" data-url="{{btn.url is defined ? btn.url : ''}}" data-class="{{btn.class is defined ? btn.class : ''}}" data-label="{{btn.label is defined ? btn.label : ''}}" data-target="{{btn.target is defined ? btn.target : ''}}" class="btn custom-block-btn">
																			{{btn.label|raw}}
																			<input type="hidden" class="hidden-field" name="block_config[{{childBlock.id}}][buttons][{{index}}][label]" value="{{btn.label}}" />
																			<input type="hidden" class="hidden-field" name="block_config[{{childBlock.id}}][buttons][{{index}}][url]" value="{{btn.url}}" />
																			<input type="hidden" class="hidden-field" name="block_config[{{childBlock.id}}][buttons][{{index}}][class]" value="{{btn.class}}" />
																			<input type="hidden" class="hidden-field" name="block_config[{{childBlock.id}}][buttons][{{index}}][target]" value="{{btn.target}}" />
																		</a>
																	{% endfor %}
																{% endif %}
															</div>
															<button class="add-new-block-btn btn-flat" type="button" onclick="addButton(this, {{childBlock.id}});"><i class="left fa fa-plus"></i> {{'Knop toevoegen' | trans }}</button>
														</div>
													{% endif %}

												</div>
											</div>

											{% if childBlock.contained %}
												{% for cBlock in containmentBlocks %}
													<div class="card" data-blockid="{{cBlock.id}}">
														<div class="card-content content-block-wrapper {% if (dataRequired == 'medias' or dataRequired == 'media') and cBlock.content is not empty %}float-actions{% endif %}">

															<div  class="block-actions right-align">
																{% if allowMove %}<span class="left btn-handle"><i class="fa fa-arrows-alt"></i></span>{% endif %}

																<input type="hidden" value="{{cBlock.config.class is defined ? cBlock.config.class : ''}}" class="hidden-field cfg_class" name="block_config[{{cBlock.id}}][class]" placeholder="class" />
																<input type="hidden" value="{{cBlock.config.style is defined ? cBlock.config.style : ''}}" class="hidden-field cfg_style" name="block_config[{{cBlock.id}}][style]" placeholder="style" />
																<input type="hidden" value="{{cBlock.config.link is defined ? cBlock.config.link : ''}}" class="hidden-field cfg_link" name="block_config[{{cBlock.id}}][link]" placeholder="link" />
																<input type="hidden" value="{{cBlock.config.target is defined ? cBlock.config.target : ''}}" class="hidden-field cfg_target" name="block_config[{{cBlock.id}}][target]" placeholder="target" />
																<input type="hidden" value="{{cBlock.config.width is defined ? cBlock.config.width : ''}}" class="hidden-field cfg_width" name="block_config[{{cBlock.id}}][width]" placeholder="width" />
																<input type="hidden" value="{{cBlock.config.offset is defined ? cBlock.config.offset : ''}}" class="hidden-field cfg_offset" name="block_config[{{cBlock.id}}][offset]" placeholder="offset" />
																<input type="hidden" value="{{cBlock.config.id is defined ? cBlock.config.id : ''}}" class="hidden-field cfg_id" name="block_config[{{cBlock.id}}][id]" placeholder="id" />

						                    					<div class="right-actions">
							  										<a onclick="blockSettings(this);" class=" tooltipped" data-position="top"  data-tooltip="{{ 'Blok instellingen' | trans }}"><i class="fa fa-fw fa-cog"></i></a>

																	{% set showBlockEdit = true %}
																	{% if cBlock.media is not null or cBlock.contentType is empty or cBlock.contentType == 'bundle' %}
																		{% set showBlockEdit = false %}
																	{% endif %}

																	{% if section_block.fields is not empty %}
																		{# Custom fields, need to be editable #}
																		{% set showBlockEdit = true %}
																	{% endif %}

							  										{# <a onclick="editBlock(this);" style="{{showBlockEdit ? '' : 'display:none;'}}"><i class="fa fa-edit"></i></a> #}
							  										{% if section_block.multiple is defined and section_block.multiple == true %}
							  											<a onclick="addStaticBlock(this);" class="tooltipped" data-position="top"  data-tooltip="{{ 'Blok toevoegen' | trans }}"><i class="fa fa-plus"></i></a>
							  											<a onclick="delStaticBlock(this);" class="static-block-delete"><i class="far fa-trash-alt"></i></a>
							  										{% else %}
							  											{% if '_empty' in section.key %}
							  												<a onclick="delContent(this);" class="btn-clear"><i class="fa fa-eraser"></i></a>
							  												<a onclick="delBlock(this);"><i class="far fa-trash-alt"></i></a>
							  											{% endif %}
							  										{% endif %}
						                    					</div>
															</div>

															<input type="hidden" class="hidden-field" name="block[{{pageBlock.id}}][]" value="{{cBlock.id}}" />
															<input type="hidden" class="hidden-field" name="block_attr[{{cBlock.id}}][key]" value="{{cBlock.templateKey}}" />
															<input type="hidden" class="hidden-field" name="block_req[{{cBlock.id}}]" value="{{dataRequired}}" />
															<textarea style="display:none;" class="block_data" name="block_data[{{cBlock.id}}]">{{cBlock.data|json_encode|raw}}</textarea>

															{% if contained %}
																<input type="hidden" class="hidden-field" name="block_contained[{{cBlock.id}}]" value="{{contained}}" />
															{% endif %}

															{% if dataRequired == 'medias' %}
																{% if cBlock.content is not empty and cBlock.media is not empty %}
																	{% set ct = cBlock.content|split(',') %}
																	<div class="card-image block-ct"><img style="max-width:{{cBlock.media.width}}px;margin:0 auto;" src="/{{cBlock.media.getWebPath}}" alt="{{cBlock.media.label}}" data-mediaid="{{cBlock.media.id}}" data-filepath="/{{cBlock.media.getWebPath}}" data-label="{{cBlock.media.label}}" /></div>
																	<input type="hidden" class="hidden-field media-id block-ct" placeholder="{{'media data' | trans}}" name="block_content[{{cBlock.id}}][]" value="{{cBlock.content}}" />

																	<div class="center-align media-selector" style="margin: 10px 0;">
																		<a onclick="addMedia(this);" class="btn btn-small"><i class="left fa fa-edit"></i></a>
																	</div>
																{% endif %}
															{% elseif dataRequired == 'media' %}
																{% if cBlock.content is not empty and cBlock.media is not empty %}
																	{% set ct = cBlock.content|split(',') %}
																	<div class="card-image block-ct"><img style="max-width:{{cBlock.media.width}}px;margin:0 auto;" src="/{{cBlock.media.getWebPath}}" alt="{{cBlock.media.label}}" data-mediaid="{{cBlock.media.id}}" data-filepath="/{{cBlock.media.getWebPath}}" data-label="{{cBlock.media.label}}" /></div>
																	<input type="hidden" class="hidden-field media-id block-ct" placeholder="{{ 'media data' | trans}}" name="block_content[{{cBlock.id}}][]" value="{{cBlock.content}}" />

																	<div class="center-align media-selector" style="margin: 10px 0;">
																		<a onclick="addMedia(this);" class="btn btn-small"><i class="left fa fa-edit"></i></a>
																	</div>
																{% endif %}
															{% else %}
																{% if cBlock.contentType == 'text' %}
																	<div data-editor="editor-{{cBlock.id}}" class="ckeditor4 form-control" contenteditable="true">{{cBlock.content|raw}}</div>
																	<textarea name="block_content[{{cBlock.id}}][]" class="inline-editor" id="editor-{{cBlock.id}}">{{cBlock.content|raw}}</textarea>
																{% elseif cBlock.contentType == 'bundle' %}
																	<div class="block-ct">
																		<input type="hidden" name="block_bundle[{{cBlock.id}}][bundle]" class="hidden-field bundle-bundle" value="{{cBlock.bundle}}" />
																		<input type="hidden" name="block_bundle[{{cBlock.id}}][label]" class="hidden-field bundle-label" value="{{cBlock.bundleLabel}}" />
																		<input type="hidden" name="block_bundle[{{cBlock.id}}][data]" class="hidden-field bundle-data" value="{{cBlock.bundleData}}" id="{{cBlock.id}}_data" />

																		<h3>Extensie: {{cBlock.bundleLabel}}</h3>

																		<div class="linked-bundle-config">
																			{% set templateList = ['Trinity' ~ childBlock.bundleLabel ~ 'Bundle::link_preview.html.twig'] %}
																			{% if childBlock.bundle is defined and childBlock.bundle is not empty %}
																				{% set testValue = childBlock.bundle ~ '::link_preview.html.twig' %}
																				{% if testValue not in templateList %}
																					{% set templateList = templateList| merge(templateList) %}
																				{% endif %}
																			{% endif %}
																			{% include templateList ignore missing with {config: json_decode(childBlock.bundleData)} %}
																		</div>
																	</div>
																{% elseif dataRequired == 'medias' %}
																	<input type="hidden" name="block_content[{{cBlock.id}}][]" class="media-data hidden-field" />
																{% elseif dataRequired == 'media' %}
																	<input type="hidden" name="block_content[{{cBlock.id}}][]" class="media-data hidden-field" />
																{% elseif dataRequired == 'video' %}
																	<input type="hidden" name="block_content[{{cBlock.id}}][]" class="video-data hidden-field" />
																{% endif %}
															{% endif %}
															{% if section_block and section_block.fields %}
																{% for fi,field in section_block.fields %}
																	<div class="fields-row {{fi == 0 ? 'first' : ''}}">
																		<div class="field-label">{{field.label|trans({},'blocks')}}</div>
																		<div class="blocks-display-form" id="view_{{cBlock.id ~ '_' ~ field.key}}">
																			{% if field.type == 'page' %}
																				{{cBlock.config[field.key] is defined and cBlock.config[field.key] is not empty ? cBlock.config[field.key]|raw : '<span class="grey-text">' ~ ('n.v.t.' | trans)  ~ '</span>'}}
																			{% elseif field.type == 'checkbox' %}
																				{{cBlock.config[field.key] is defined and cBlock.config[field.key] ? 'Ja' : 'Nee'}}
																			{% else %}
																				{{cBlock.config[field.key] is defined and cBlock.config[field.key] is not empty ? cBlock.config[field.key]|raw : '<span class="grey-text">' ~ ('n.v.t.' | trans) ~'</span>'}}
																			{% endif %}
																		</div>
																		<div class="blocks-edit-form">
																			{% if field.type == 'text' %}
																				<input data-type="{{field.type}}" id="{{cBlock.id ~ '_' ~ field.key}}" data-linkkey="{{cBlock.id ~ '_' ~ field.key}}" data-key="{{field.key}}" data-label="{{field.label|trans({},'blocks')}}" type="text" value="{{cBlock.config[field.key] is defined ? cBlock.config[field.key] : ''}}" class="hidden-field template-fields" name="block_config[{{cBlock.id}}][{{field.key}}]" />
																			{% elseif field.type == 'page' %}
																				<div>
																					<button type="button" onclick="linkSelector(this);" class="btn">{{ 'Selecteer een pagina' | trans}}</button>
																					<div class="pagelabel"></div>
																					<input data-type="{{field.type}}" id="{{cBlock.id ~ '_' ~ field.key}}" data-linkkey="{{cBlock.id ~ '_' ~ field.key}}" data-key="{{field.key}}" data-label="{{field.label|trans({},'blocks')}}" type="hidden" value="{{cBlock.config[field.key] is defined ? cBlock.config[field.key] : ''}}" class="hidden-field template-fields pageid" name="block_config[{{cBlock.id}}][{{field.key}}]" />
																				</div>
																			{% elseif field.type == 'textarea' %}
																				<div data-editor="{{cBlock.id ~ '_' ~ field.key}}" id="inline-editor-{{cBlock.id ~ '_' ~ field.key}}" class="ckeditor4 form-control" contenteditable="true">{{cBlock.config[field.key] is defined ? cBlock.config[field.key]|raw : ''}}</div>
																				<textarea data-type="{{field.type}}" id="{{cBlock.id ~ '_' ~ field.key}}" data-linkkey="{{cBlock.id ~ '_' ~ field.key}}" data-key="{{field.key}}" data-label="{{field.label|trans({},'blocks')}}" class="inline-editor template-fields" name="block_config[{{cBlock.id}}][{{field.key}}]">{{cBlock.config[field.key] is defined ? cBlock.config[field.key]|raw : ''}}</textarea>
																			{% elseif field.type == 'checkbox' %}
																				<div class="checkbox">
																					<input id="{{cBlock.id ~ '_' ~ field.key}}" type="checkbox" name="block_config[{{cBlock.id}}][{{field.key}}]" {{cBlock.config[field.key] is defined ? 'checked="checked"' : ''}} />
																					<label for="{{cBlock.id ~ '_' ~ field.key}}">&nbsp;</label>
																				</div>
																			{% elseif field.type == 'select' %}
																				<div class="select">
																					{% if field.choices is defined and field.choices is not empty %}
																						<select name="block_config[{{cBlock.id}}][{{field.key}}]" id="{{cBlock.id ~ '_' ~ field.key}}">
																							{% for key,val in field.choices|cast_to_array %}
																								<option {{cBlock.config[field.key] is defined and cBlock.config[field.key] == key ? 'selected="selected"' : ''}} value="{{key}}">{{val|raw}}</option>
																							{% endfor %}
																						</select>
																					{% else %}
																						<span class="error">{{ 'NO CHOICES AVAILABLE IN BLOCK CONFIG' | trans }}</span>
																					{% endif %}
																				</div>
																			{% endif %}
																		</div>
																	</div>
																{% endfor %}
															{% endif %}

															<div class="inline-actionss center-align">
																{% if cBlock.contentType == 'bundle' %}
																	<button type="button" style="" class="btn btn-edit tooltipped" onclick="editBundle(this);" data-position="top"  data-tooltip="{{ 'Extensie configureren' | trans }}"><i class="far fa-check-square"></i></button>
																{% endif %}
																{% if bundleRequired %}
																	<button type="button" class="btn btn-bundle" onclick="addSpecificBundle(this, '{{bundleRequired}}');"><i class="left fa fa-paperclip"></i>{{bundleRequired}} {{ 'Koppelen' | trans | lower }}</button>
																{% else %}
																	{% if dataRequired %}
																		{% if dataRequired == 'medias' %}
																			<button type="button" style="{{cBlock.contentType == '' ? '' : 'display:none;'}}" class="btn btn-image tooltipped" onclick="addMedia(this);" data-position="top"  data-tooltip="{{ 'Media koppelen' | trans}}"><i class="fa fa-image fa-fw"></i></button>
																		{% elseif dataRequired == 'media' %}
																			<button type="button" style="{{cBlock.contentType == '' or cBlock.media is empty ? '' : 'display:none;'}}" class="btn btn-image tooltipped" onclick="addMedia(this);" data-position="top"  data-tooltip="{{ 'Media koppelen' | trans}}"><i class="fa fa-image fa-fw"></i></button>
																		{% elseif dataRequired == 'video' %}
																			<button type="button" style="{{cBlock.contentType == '' ? '' : 'display:none;'}}" class="btn btn-video tooltipped" onclick="addVideo(this);" data-position="top"  data-tooltip="{{ 'Video koppelen' | trans}}"><i class="fa fa-play-circle fa-fw"></i></button>
																		{% elseif dataRequired == 'text' %}
																			<button type="button" style="{{cBlock.contentType == '' ? '' : 'display:none;'}}" class="btn btn-text tooltipped" onclick="addText(this);" data-position="top"  data-bs-toggle="tooltip" title="{{ 'Tekst koppelen' | trans}}"><i class="fa fa-align-left fa-fw"></i></button>
																		{% endif %}r
																	{% else %}
																		{% if cBlock.contentType == '' %}
																			<button type="button" class="btn btn-text tooltipped" onclick="addText(this);" data-position="top"  data-bs-toggle="tooltip" title="{{ 'Tekst koppelen' | trans}}"><i class="fa fa-align-left fa-fw"></i></button>
																			<button type="button" class="btn btn-bundle tooltipped" onclick="addBundle(this);" data-position="top"  data-tooltip="{{ 'Extensie koppelen' | trans}}"><i class="fa fa-cube fa-fw"></i></button>
																			<button type="button" class="btn btn-image tooltipped" onclick="addMedia(this);" data-position="top"  data-tooltip="{{ 'Media koppelen' | trans}}"><i class="fa fa-image fa-fw"></i></button>
																			<button type="button" class="btn btn-video tooltipped" onclick="addVideo(this);" data-position="top"  data-tooltip="{{ 'Video koppelen' | trans}}"><i class="far fa-play-circle fa-fw"></i></button>
																			<button type="button" class="btn btn-source tooltipped" onclick="addSource(this);" data-position="top"  data-tooltip="{{ 'HTML koppelen' | trans}}"><i class="far fa-code fa-fw"></i></button>
																		{% else %}
																			<button type="button" style="display:none;" class="btn btn-text tooltipped" onclick="addText(this);" data-position="top"  data-bs-toggle="tooltip" title="{{ 'Tekst koppelen' | trans}}"><i class="fa fa-align-left fa-fw"></i></button>
																			<button type="button" style="display:none;" class="btn btn-bundle tooltipped" onclick="addBundle(this);" data-position="top"  data-tooltip="{{ 'Extensie koppelen' | trans}}"><i class="fa fa-cube fa-fw"></i></button>
																			<button type="button" style="display:none;" class="btn btn-image tooltipped" onclick="addMedia(this);" data-position="top"  data-tooltip="{{ 'Media koppelen' | trans}}"><i class="fa fa-image fa-fw"></i></button>
																			<button type="button" style="display:none;" class="btn btn-video tooltipped" onclick="addVideo(this);" data-position="top"  data-tooltip="{{ 'Video koppelen' | trans}}"><i class="far fa-play-circle fa-fw"></i></button>
																			<button type="button" style="display:none;" class="btn btn-source tooltipped" onclick="addSource(this);" data-position="top"  data-tooltip="{{ 'HTML koppelen' | trans}}"><i class="far fa-code fa-fw"></i></button>
																		{% endif %}
																	{% endif %}
																{% endif %}
															</div>

															{# BUTTONS #}
															{% if section_block.buttons is defined %}
																<div class="block-buttons center-align">
																	<div class="button-wrapper">
																		{# Buttons are added here #}
																		{% if cBlock.config.buttons is defined %}
																			{% for index,btn in cBlock.config.buttons %}
																				<a onclick="editButton(this, '{{cBlock.id}}');" data-url="{{btn.url is defined ? btn.url : ''}}" data-class="{{btn.class is defined ? btn.class : ''}}" data-label="{{btn.label is defined ? btn.label : ''}}" data-target="{{btn.target is defined ? btn.target : ''}}" class="btn custom-block-btn">
																					{{btn.label|raw}}
																					<input type="hidden" class="hidden-field" name="block_config[{{cBlock.id}}][buttons][{{index}}][label]" value="{{btn.label}}" />
																					<input type="hidden" class="hidden-field" name="block_config[{{cBlock.id}}][buttons][{{index}}][url]" value="{{btn.url}}" />
																					<input type="hidden" class="hidden-field" name="block_config[{{cBlock.id}}][buttons][{{index}}][class]" value="{{btn.class}}" />
																					<input type="hidden" class="hidden-field" name="block_config[{{cBlock.id}}][buttons][{{index}}][target]" value="{{btn.target}}" />
																				</a>
																			{% endfor %}
																		{% endif %}
																	</div>
																	<button class="add-new-block-btn btn-flat" type="button" onclick="addButton(this, {{cBlock.id}});"><i class="left fa fa-plus"></i>{{ 'Knop toevoegen' | trans }}</button>
																</div>
															{% endif %}

														</div>
													</div>

												{% endfor %}
											{% endif %}

											{% if contained %}
												<div class="containment-actions center-align"><button type="button" class="btn-flat" onclick="addContainmentBlock(this);"><i class="left fa fa-plus"></i> {{ 'Blok toevoegen' | trans }}</button></div>
											{% endif %}
										</li>
										{% if childBlock.contained %}{% set break = true %}{% endif %}
									{% endif %}
									{% endif %}
								{% endfor %}

							</ul>
						</div>
					</div>
				{% endif %}
			{% endif %}
		{% endfor %}
	{% endif %}
</div>

<div id="block-settings" class="modal">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<div class="modal-title">
					<h5>{{'Blok instellingen'|trans}}</h5>
				</div>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body row">
				<div class="input-field col-4">
					<label for="cfg_class">{{ 'CSS class' | trans }}</label>
					<input id="cfg_class" type="text" />
				</div>
				<div class="input-field col-4">
					<label for="cfg_style">{{ 'CSS style (inline)' | trans }}</label>
					<input id="cfg_style" type="text" />
				</div>
				<div class="input-field col-4">
					<label for="cfg_id">{{ 'ID' | trans }}</label>
					<input id="cfg_id" type="text" />
				</div>
				<div class="input-field col-8">
					<label for="cfg_link">{{ 'Link / URL' | trans }}</label>
					<input id="cfg_link" type="text" />
				</div>
				<div class="input-field col-4">
					<label>{{'Link doel'|trans({})|raw}}</label>
					<select class="form-select" id="cfg_target">
						<option value="" selected>{{ 'Zelfde pagina' | trans }}</option>
						<option value="_blank">{{ 'Nieuwe pagina' | trans }}</option>
					</select>
				</div>
				<div class="input-field col-6">
					<label for="cfg_width">{{ 'Breedte (1 - 12)' | trans }}</label>
					<input id="cfg_width" type="text" />
				</div>
				<div class="input-field col-6">
					<label for="cfg_offset">{{ 'Afstand (1 - 12)' | trans }}</label>
					<input id="cfg_offset" type="text" />
				</div>
				<div id="custom-fields"></div>
			</div>
			<div class="modal-footer d-flex justify-content-between">
				<button type="button" class="btn-flat" data-bs-dismiss="modal" aria-label="Close">Sluiten</button>
				<a href="#!"onclick="return blockSettings_close()" class="waves-effect waves-green btn">{{'Toepassen'|trans({})|raw}}</a>
			</div>
		</div>
	</div>
</div>
<script>

	var togglevisibility = "{{'Zichtbaarheid'|trans({})|raw}}";
	var heading = "{{'Sectie introtekst'|trans({})|raw}}";
	var wrapperconfig = "{{'Sectie IDs en classes'|trans({})|raw}}";
	var wrapperclone = "{{'Sectie kopiÃ«ren'|trans({})|raw}}";
	var wrapperdelete = "{{'Sectie verwijderen'|trans({})|raw}}";

    var composervideourl = "{{ 'Video URL' | trans | raw }}";
    var composerextensionconfig = "{{ 'Extensie configureren' | trans | raw }}";
    var composerblockempty = "{{ 'Blok leegmaken' | trans | raw }}";
    var composertextconnect = "{{ 'Tekst koppelen' | trans | raw }}";
    var composermediaconnect = "{{ 'Media koppelen' | trans | raw }}";
    var composervideoconnect = "{{ 'Video koppelen' | trans | raw }}";
    var composerextensionconnect = "{{ 'Extensie koppelen' | trans | raw }}";
    var composersourceconnect = "{{ 'HTML koppelen' | trans | raw }}";
    var composerconnect = "{{ 'Koppelen' | trans | raw | lower }}";
    var composeraddbutton = "{{ 'Knop toevoegen' | trans | raw }}";
    var composeraddblock = "{{ 'Blok toevoegen' | trans | raw }}";
    var composerblocksettings = "{{ 'Blok instellingen' | trans | raw }}";
    var composerblockpaste = "{{ 'Blok plakken' | trans | raw }}";
    var composersectionpaste = "{{ 'Sectie plakken' | trans | raw }}";
    var composerdelete = "{{ 'Verwijderen' | trans | raw }}";
    var composerspacing = "{{ 'Ruimte verdeling' | trans | raw }}";
    var composerconnecttarget = "{{ 'Link doel (anchor)' | trans | raw }}";
    var composercssid = "{{ 'CSS ID' | trans | raw }}";
    var composercssclass = "{{ 'CSS class' | trans | raw }}";
    var composerbackgroundcolor = "{{ 'Achtergrond kleur' | trans | raw }}";
    var composerconnectblock = "{{ 'Link naar dit blok' | trans | raw }}";
    var composertitle = "{{ 'Titel' | trans | raw }}";
    var composerintroductiontext = "{{ 'Introductie tekst' | trans | raw }}";
    var composeraddimages = "{{ 'Afbeelding(en) toevoegen' | trans | raw }}";
    var composerdropzonenotsupported = "{{ 'browser does not support HTML5 drag and drop' | trans | raw }}";
    var composerdropzonetoolarge = "{{ 'Bestand is te groot. Maximaal toegestaan:' | trans | raw }}";
    var composerdropzonenotallowedfirst = "{{ 'Bestandstype' | trans | raw }}";
    var composerdropzonenotallowedlast = "{{ 'is niet toegestaan.<br/><br/><strong>Toegestane bestanden:</strong>' | trans | raw }}";
    var composerdeleteblock = "{{ 'Wilt u dit blok verwijderen?' | trans | raw }}";
var composeryoutube = "{{ 'Plak in het onderstaande veld de volledige URL naar de YouTube-video. Dit is de URL die in de browser URL balk getoond wordt met de video code erachter.' | trans | raw }}";
var composeryoutube_example = "{{ 'Voorbeelden:' | trans | raw }}";
var composervimeo = "{{ 'Plak in het onderstaande veld de volledige URL naar de Vimeo-video. Dit is de URL die in de browser URL balk getoond wordt met de video code erachter.' | trans | raw }}";
var composervimeo_example = "{{ 'Voorbeeld:' | trans | raw }}";
var composerselectvideo = "{{ 'Selecteren uit bibliotheek' | trans | raw }}";
var selectWhatNeedTobeLinked = "{{ 'Selecteer wat er gekoppeld moet worden' | trans | raw }}";
</script>

{# Field titles #}
{% if blockTranslationList is defined and blockTranslationList is not empty %}
<script>
	var block_trans = {{blockTranslationList|json_encode|raw}};
</script>
{% else %}
<script>
	var block_trans = [];
</script>
{% endif %}

<script type="text/javascript" src="{{asset('bundles/cms/js/composer.js')}}"></script>
