<?php

namespace Proxies\__CG__\App\CmsBundle\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Media extends \App\CmsBundle\Entity\Media implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
  'label' => NULL,
  'label_alt' => NULL,
  'description' => NULL,
  'description_alt' => NULL,
  'path' => NULL,
  'size' => NULL,
  'width' => NULL,
  'height' => NULL,
  'type' => NULL,
  'mime' => NULL,
  'remote_url' => NULL,
  'original_path' => NULL,
  'original_size' => NULL,
  'original_width' => NULL,
  'original_height' => NULL,
  'original_mime' => NULL,
  'deleted' => NULL,
  'dateAdd' => NULL,
  'dateEdit' => NULL,
  'position' => NULL,
  'crop_source' => NULL,
  'crop_box' => NULL,
  'crop_ratio' => NULL,
  'crop_flip_x' => NULL,
  'crop_flip_y' => NULL,
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
  'label' => NULL,
  'label_alt' => NULL,
  'description' => NULL,
  'description_alt' => NULL,
  'path' => NULL,
  'size' => NULL,
  'width' => NULL,
  'height' => NULL,
  'type' => NULL,
  'mime' => NULL,
  'remote_url' => NULL,
  'original_path' => NULL,
  'original_size' => NULL,
  'original_width' => NULL,
  'original_height' => NULL,
  'original_mime' => NULL,
  'deleted' => false,
  'dateAdd' => NULL,
  'dateEdit' => NULL,
  'position' => NULL,
  'crop_source' => NULL,
  'crop_box' => NULL,
  'crop_ratio' => NULL,
  'crop_flip_x' => NULL,
  'crop_flip_y' => NULL,
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {
        unset($this->label, $this->label_alt, $this->description, $this->description_alt, $this->path, $this->size, $this->width, $this->height, $this->type, $this->mime, $this->remote_url, $this->original_path, $this->original_size, $this->original_width, $this->original_height, $this->original_mime, $this->deleted, $this->dateAdd, $this->dateEdit, $this->position, $this->crop_source, $this->crop_box, $this->crop_ratio, $this->crop_flip_x, $this->crop_flip_y);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (\array_key_exists($name, self::$lazyPropertiesNames)) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);
            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);

    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (\array_key_exists($name, self::$lazyPropertiesNames)) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (\array_key_exists($name, self::$lazyPropertiesNames)) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', '' . "\0" . 'App\\CmsBundle\\Entity\\Media' . "\0" . 'old_id', 'label', 'label_alt', 'description', 'description_alt', 'path', 'file', 'size', 'width', 'height', 'type', 'mime', 'remote_url', 'original_path', 'original_size', 'original_width', 'original_height', 'original_mime', 'deleted', 'dateAdd', 'dateEdit', 'temp', 'parent', 'tags', '' . "\0" . 'App\\CmsBundle\\Entity\\Media' . "\0" . 'used', '' . "\0" . 'App\\CmsBundle\\Entity\\Media' . "\0" . 'secure', '' . "\0" . 'App\\CmsBundle\\Entity\\Media' . "\0" . 'used_in', 'webpath', 'filepath', 'block', 'position', 'crop_source', 'crop_box', 'crop_ratio', 'crop_flip_x', 'crop_flip_y', '' . "\0" . 'App\\CmsBundle\\Entity\\Media' . "\0" . 'replaceFile', '' . "\0" . 'App\\CmsBundle\\Entity\\Media' . "\0" . 'generate_webp'];
        }

        return ['__isInitialized__', 'id', '' . "\0" . 'App\\CmsBundle\\Entity\\Media' . "\0" . 'old_id', 'file', 'temp', 'parent', 'tags', '' . "\0" . 'App\\CmsBundle\\Entity\\Media' . "\0" . 'used', '' . "\0" . 'App\\CmsBundle\\Entity\\Media' . "\0" . 'secure', '' . "\0" . 'App\\CmsBundle\\Entity\\Media' . "\0" . 'used_in', 'webpath', 'filepath', 'block', '' . "\0" . 'App\\CmsBundle\\Entity\\Media' . "\0" . 'replaceFile', '' . "\0" . 'App\\CmsBundle\\Entity\\Media' . "\0" . 'generate_webp'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Media $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->label, $this->label_alt, $this->description, $this->description_alt, $this->path, $this->size, $this->width, $this->height, $this->type, $this->mime, $this->remote_url, $this->original_path, $this->original_size, $this->original_width, $this->original_height, $this->original_mime, $this->deleted, $this->dateAdd, $this->dateEdit, $this->position, $this->crop_source, $this->crop_box, $this->crop_ratio, $this->crop_flip_x, $this->crop_flip_y);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile(\Symfony\Component\HttpFoundation\File\UploadedFile $file = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', [$file]);

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', []);

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpload($keepFilename = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpload', [$keepFilename]);

        return parent::preUpload($keepFilename);
    }

    /**
     * {@inheritDoc}
     */
    public function upload($Settings = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', [$Settings]);

        return parent::upload($Settings);
    }

    /**
     * {@inheritDoc}
     */
    public function createWebP($Settings, $previousFile, $createNew = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createWebP', [$Settings, $previousFile, $createNew]);

        return parent::createWebP($Settings, $previousFile, $createNew);
    }

    /**
     * {@inheritDoc}
     */
    public function createRemoteWebP($Settings, $previousFile, $createNew = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createRemoteWebP', [$Settings, $previousFile, $createNew]);

        return parent::createRemoteWebP($Settings, $previousFile, $createNew);
    }

    /**
     * {@inheritDoc}
     */
    public function createLowRes($Settings, $previousFile, $createNew = false, $includeWebp = false): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createLowRes', [$Settings, $previousFile, $createNew, $includeWebp]);

        return parent::createLowRes($Settings, $previousFile, $createNew, $includeWebp);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUpload', []);

        return parent::removeUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function removePhysicalFiles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePhysicalFiles', []);

        return parent::removePhysicalFiles();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsolutePath($scale = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsolutePath', [$scale]);

        return parent::getAbsolutePath($scale);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebPath($scale = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebPath', [$scale]);

        return parent::getWebPath($scale);
    }

    /**
     * {@inheritDoc}
     */
    public function getUploadTempDir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUploadTempDir', []);

        return parent::getUploadTempDir();
    }

    /**
     * {@inheritDoc}
     */
    public function getUploadRootDir()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUploadRootDir', []);

        return parent::getUploadRootDir();
    }

    /**
     * {@inheritDoc}
     */
    public function getUploadDir($temp = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUploadDir', [$temp]);

        return parent::getUploadDir($temp);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileImage', []);

        return parent::getFileImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabel', [$label]);

        return parent::setLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', []);

        return parent::getLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function getExtension()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtension', []);

        return parent::getExtension();
    }

    /**
     * {@inheritDoc}
     */
    public function hasWebp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasWebp', []);

        return parent::hasWebp();
    }

    /**
     * {@inheritDoc}
     */
    public function hasRemoteWebp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRemoteWebp', []);

        return parent::hasRemoteWebp();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsoluteWebpPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsoluteWebpPath', []);

        return parent::getAbsoluteWebpPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getWebpPath($scale = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebpPath', [$scale]);

        return parent::getWebpPath($scale);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemoteWebpPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemoteWebpPath', []);

        return parent::getRemoteWebpPath();
    }

    /**
     * {@inheritDoc}
     */
    public function hasBlurred()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasBlurred', []);

        return parent::hasBlurred();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsoluteBlurredPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsoluteBlurredPath', []);

        return parent::getAbsoluteBlurredPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getBlurredWebPath($scale = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlurredWebPath', [$scale]);

        return parent::getBlurredWebPath($scale);
    }

    /**
     * {@inheritDoc}
     */
    public function hasBlurredWebp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasBlurredWebp', []);

        return parent::hasBlurredWebp();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsoluteBlurredWebpPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsoluteBlurredWebpPath', []);

        return parent::getAbsoluteBlurredWebpPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getBlurredWebpPath($scale = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlurredWebpPath', [$scale]);

        return parent::getBlurredWebpPath($scale);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabelWithoutExtension()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabelWithoutExtension', []);

        return parent::getLabelWithoutExtension();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabelAlt($labelAlt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabelAlt', [$labelAlt]);

        return parent::setLabelAlt($labelAlt);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabelAlt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabelAlt', []);

        return parent::getLabelAlt();
    }

    /**
     * {@inheritDoc}
     */
    public function setSize($size)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSize', [$size]);

        return parent::setSize($size);
    }

    /**
     * {@inheritDoc}
     */
    public function getSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSize', []);

        return parent::getSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setMime($mime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMime', [$mime]);

        return parent::setMime($mime);
    }

    /**
     * {@inheritDoc}
     */
    public function getMime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMime', []);

        return parent::getMime();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilepath($filepath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilepath', [$filepath]);

        return parent::setFilepath($filepath);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilepath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilepath', []);

        return parent::getFilepath();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($deleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', [$deleted]);

        return parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', []);

        return parent::getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdd', []);

        return parent::setDateAdd();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdd', []);

        return parent::getDateAdd();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEdit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEdit', []);

        return parent::setDateEdit();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEdit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEdit', []);

        return parent::getDateEdit();
    }

    /**
     * {@inheritDoc}
     */
    public function setPath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPath', [$path]);

        return parent::setPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', []);

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\App\CmsBundle\Entity\Mediadir $parent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function hasTag(\App\CmsBundle\Entity\Tag $tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasTag', [$tag]);

        return parent::hasTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function addTag(\App\CmsBundle\Entity\Tag $tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTag', [$tag]);

        return parent::addTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTag(\App\CmsBundle\Entity\Tag $tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTag', [$tag]);

        return parent::removeTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', []);

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeLabel', []);

        return parent::getTypeLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setWidth($width)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWidth', [$width]);

        return parent::setWidth($width);
    }

    /**
     * {@inheritDoc}
     */
    public function getWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidth', []);

        return parent::getWidth();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeight($height)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeight', [$height]);

        return parent::setHeight($height);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeight', []);

        return parent::getHeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginalPath($originalPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginalPath', [$originalPath]);

        return parent::setOriginalPath($originalPath);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginalPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginalPath', []);

        return parent::getOriginalPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginalSize($originalSize)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginalSize', [$originalSize]);

        return parent::setOriginalSize($originalSize);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginalSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginalSize', []);

        return parent::getOriginalSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginalWidth($originalWidth)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginalWidth', [$originalWidth]);

        return parent::setOriginalWidth($originalWidth);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginalWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginalWidth', []);

        return parent::getOriginalWidth();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginalHeight($originalHeight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginalHeight', [$originalHeight]);

        return parent::setOriginalHeight($originalHeight);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginalHeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginalHeight', []);

        return parent::getOriginalHeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginalMime($originalMime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginalMime', [$originalMime]);

        return parent::setOriginalMime($originalMime);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginalMime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginalMime', []);

        return parent::getOriginalMime();
    }

    /**
     * {@inheritDoc}
     */
    public function alter($base64_string)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'alter', [$base64_string]);

        return parent::alter($base64_string);
    }

    /**
     * {@inheritDoc}
     */
    public function restore()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'restore', []);

        return parent::restore();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescriptionAlt($descriptionAlt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescriptionAlt', [$descriptionAlt]);

        return parent::setDescriptionAlt($descriptionAlt);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptionAlt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptionAlt', []);

        return parent::getDescriptionAlt();
    }

    /**
     * {@inheritDoc}
     */
    public function getFolderPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFolderPath', []);

        return parent::getFolderPath();
    }

    /**
     * {@inheritDoc}
     */
    public function resize($key, $maxWidth, $previousFile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resize', [$key, $maxWidth, $previousFile]);

        return parent::resize($key, $maxWidth, $previousFile);
    }

    /**
     * {@inheritDoc}
     */
    public function resizeWebp($key, $maxWidth, $previousFile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resizeWebp', [$key, $maxWidth, $previousFile]);

        return parent::resizeWebp($key, $maxWidth, $previousFile);
    }

    /**
     * {@inheritDoc}
     */
    public function addBlock(\App\CmsBundle\Entity\PageBlock $block)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBlock', [$block]);

        return parent::addBlock($block);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBlock(\App\CmsBundle\Entity\PageBlock $block)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBlock', [$block]);

        return parent::removeBlock($block);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlock()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlock', []);

        return parent::getBlock();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsed($used = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsed', [$used]);

        return parent::setUsed($used);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsed', []);

        return parent::getUsed();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsedIn($usedIn = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsedIn', [$usedIn]);

        return parent::setUsedIn($usedIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsedIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsedIn', []);

        return parent::getUsedIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function source()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'source', []);

        return parent::source();
    }

    /**
     * {@inheritDoc}
     */
    public function setCropSource($cropSource = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCropSource', [$cropSource]);

        return parent::setCropSource($cropSource);
    }

    /**
     * {@inheritDoc}
     */
    public function getCropSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCropSource', []);

        return parent::getCropSource();
    }

    /**
     * {@inheritDoc}
     */
    public function getRealCropSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRealCropSource', []);

        return parent::getRealCropSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setCropBox($cropBox = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCropBox', [$cropBox]);

        return parent::setCropBox($cropBox);
    }

    /**
     * {@inheritDoc}
     */
    public function getCropBox()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCropBox', []);

        return parent::getCropBox();
    }

    /**
     * {@inheritDoc}
     */
    public function setCropRatio($cropRatio = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCropRatio', [$cropRatio]);

        return parent::setCropRatio($cropRatio);
    }

    /**
     * {@inheritDoc}
     */
    public function getCropRatio()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCropRatio', []);

        return parent::getCropRatio();
    }

    /**
     * {@inheritDoc}
     */
    public function setCropFlipX($cropFlipX = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCropFlipX', [$cropFlipX]);

        return parent::setCropFlipX($cropFlipX);
    }

    /**
     * {@inheritDoc}
     */
    public function getCropFlipX()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCropFlipX', []);

        return parent::getCropFlipX();
    }

    /**
     * {@inheritDoc}
     */
    public function setCropFlipY($cropFlipY = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCropFlipY', [$cropFlipY]);

        return parent::setCropFlipY($cropFlipY);
    }

    /**
     * {@inheritDoc}
     */
    public function getCropFlipY()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCropFlipY', []);

        return parent::getCropFlipY();
    }

    /**
     * {@inheritDoc}
     */
    public function setOldId($oldId = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOldId', [$oldId]);

        return parent::setOldId($oldId);
    }

    /**
     * {@inheritDoc}
     */
    public function getOldId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOldId', []);

        return parent::getOldId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSecure($secure = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSecure', [$secure]);

        return parent::setSecure($secure);
    }

    /**
     * {@inheritDoc}
     */
    public function getSecure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSecure', []);

        return parent::getSecure();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemoteUrl($remoteUrl = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemoteUrl', [$remoteUrl]);

        return parent::setRemoteUrl($remoteUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemoteUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemoteUrl', []);

        return parent::getRemoteUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function hasRemoteUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRemoteUrl', []);

        return parent::hasRemoteUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getGenerateWebp(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGenerateWebp', []);

        return parent::getGenerateWebp();
    }

    /**
     * {@inheritDoc}
     */
    public function setGenerateWebp(?bool $generate_webp): \App\CmsBundle\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGenerateWebp', [$generate_webp]);

        return parent::setGenerateWebp($generate_webp);
    }

}
