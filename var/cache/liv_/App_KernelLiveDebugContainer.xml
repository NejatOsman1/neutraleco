<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">/var/www/vhosts/neutral.eco/httpdocs</parameter>
    <parameter key="kernel.environment">live</parameter>
    <parameter key="kernel.runtime_environment">%env(default:kernel.environment:APP_RUNTIME_ENV)%</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.build_dir">/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_</parameter>
    <parameter key="kernel.cache_dir">/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_</parameter>
    <parameter key="kernel.logs_dir">/var/www/vhosts/neutral.eco/httpdocs/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="QipsiusTCPDFBundle">Qipsius\TCPDFBundle\QipsiusTCPDFBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="FOSOAuthServerBundle">FOS\OAuthServerBundle\FOSOAuthServerBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="NelmioApiDocBundle">Nelmio\ApiDocBundle\NelmioApiDocBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="WhiteOctoberBreadcrumbsBundle">WhiteOctober\BreadcrumbsBundle\WhiteOctoberBreadcrumbsBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="CocurSlugifyBundle">Cocur\Slugify\Bridge\Symfony\CocurSlugifyBundle</parameter>
      <parameter key="CmsBundle">App\CmsBundle\CmsBundle</parameter>
      <parameter key="TrinityApiBundle">App\Trinity\ApiBundle\TrinityApiBundle</parameter>
      <parameter key="SentryBundle">Sentry\SentryBundle\SentryBundle</parameter>
      <parameter key="TrinityBlogBundle">App\Trinity\BlogBundle\TrinityBlogBundle</parameter>
      <parameter key="TrinityFormsBundle">App\Trinity\FormsBundle\TrinityFormsBundle</parameter>
      <parameter key="TrinitySearchBundle">App\Trinity\SearchBundle\TrinitySearchBundle</parameter>
      <parameter key="TrinitySliderBundle">App\Trinity\SliderBundle\TrinitySliderBundle</parameter>
      <parameter key="TwigExtraBundle">Twig\Extra\TwigExtraBundle\TwigExtraBundle</parameter>
      <parameter key="SchebTwoFactorBundle">Scheb\TwoFactorBundle\SchebTwoFactorBundle</parameter>
      <parameter key="TrinityNeutralBundle">App\Trinity\NeutralBundle\TrinityNeutralBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="QipsiusTCPDFBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/qipsius/tcpdf-bundle</parameter>
        <parameter key="namespace">Qipsius\TCPDFBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="FOSOAuthServerBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/oauth-server-bundle</parameter>
        <parameter key="namespace">FOS\OAuthServerBundle</parameter>
      </parameter>
      <parameter key="FOSRestBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/rest-bundle</parameter>
        <parameter key="namespace">FOS\RestBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/sensio/framework-extra-bundle/src</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="NelmioApiDocBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/nelmio/api-doc-bundle</parameter>
        <parameter key="namespace">Nelmio\ApiDocBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="WhiteOctoberBreadcrumbsBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/mhujer/breadcrumbs-bundle</parameter>
        <parameter key="namespace">WhiteOctober\BreadcrumbsBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="CocurSlugifyBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/cocur/slugify/src/Bridge/Symfony</parameter>
        <parameter key="namespace">Cocur\Slugify\Bridge\Symfony</parameter>
      </parameter>
      <parameter key="CmsBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/src/CmsBundle</parameter>
        <parameter key="namespace">App\CmsBundle</parameter>
      </parameter>
      <parameter key="TrinityApiBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/ApiBundle</parameter>
        <parameter key="namespace">App\Trinity\ApiBundle</parameter>
      </parameter>
      <parameter key="SentryBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/sentry/sentry-symfony/src</parameter>
        <parameter key="namespace">Sentry\SentryBundle</parameter>
      </parameter>
      <parameter key="TrinityBlogBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/BlogBundle</parameter>
        <parameter key="namespace">App\Trinity\BlogBundle</parameter>
      </parameter>
      <parameter key="TrinityFormsBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/FormsBundle</parameter>
        <parameter key="namespace">App\Trinity\FormsBundle</parameter>
      </parameter>
      <parameter key="TrinitySearchBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/SearchBundle</parameter>
        <parameter key="namespace">App\Trinity\SearchBundle</parameter>
      </parameter>
      <parameter key="TrinitySliderBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/SliderBundle</parameter>
        <parameter key="namespace">App\Trinity\SliderBundle</parameter>
      </parameter>
      <parameter key="TwigExtraBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/twig/extra-bundle</parameter>
        <parameter key="namespace">Twig\Extra\TwigExtraBundle</parameter>
      </parameter>
      <parameter key="SchebTwoFactorBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle</parameter>
        <parameter key="namespace">Scheb\TwoFactorBundle</parameter>
      </parameter>
      <parameter key="TrinityNeutralBundle" type="collection">
        <parameter key="path">/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/NeutralBundle</parameter>
        <parameter key="namespace">App\Trinity\NeutralBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">App_KernelLiveDebugContainer</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="container.dumper.inline_factories">true</parameter>
    <parameter key="env(DATABASE_URL)">mysql://neutraleco_web01:3_5Xlc1y1@localhost/neutraleco_web01</parameter>
    <parameter key="locale">nl</parameter>
    <parameter key="database_host">localhost</parameter>
    <parameter key="database_port">null</parameter>
    <parameter key="database_name">neutraleco_web01</parameter>
    <parameter key="database_user">neutraleco_web01</parameter>
    <parameter key="database_password">3_5Xlc1y1</parameter>
    <parameter key="database_socket">null</parameter>
    <parameter key="trinity_title">Easify</parameter>
    <parameter key="trinity_url">https://www.beyonit.nl</parameter>
    <parameter key="trinity_support_email">info@beyonit.nl</parameter>
    <parameter key="trinity_support_phone">058 289 68 27</parameter>
    <parameter key="trinity_company">Béyonit B.V.</parameter>
    <parameter key="trinity_company_url">https://www.beyonit.nl</parameter>
    <parameter key="trinity_cc_server">https://trinitycms.nl</parameter>
    <parameter key="trinity_disable_antibot">false</parameter>
    <parameter key="trinity_useragent_log">false</parameter>
    <parameter key="trinity_cache">true</parameter>
    <parameter key="trinity_webp">true</parameter>
    <parameter key="mailer_transport">sendmail</parameter>
    <parameter key="mailer_host">127.0.0.1</parameter>
    <parameter key="mailer_user">null</parameter>
    <parameter key="mailer_password">null</parameter>
    <parameter key="cache_max_age">3600</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleSignalEvent">console.signal</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationFailureEvent">security.authentication.failure</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">nl</parameter>
    <parameter key="kernel.enabled_locales" type="collection"/>
    <parameter key="kernel.error_controller">App\CmsBundle\Controller\ErrorController::show</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="asset.request_context.base_path">null</parameter>
    <parameter key="asset.request_context.secure">null</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/var/www/vhosts/neutral.eco/httpdocs/translations</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/App_KernelLiveDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/serialization.php</parameter>
    <parameter key="cache.prefix.seed">_/var/www/vhosts/neutral.eco/httpdocs.App_KernelLiveDebugContainer</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_lifetime">3600</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/var/www/vhosts/neutral.eco/httpdocs/var/sessions/live</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="validator.mapping.cache.file">/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="qipsius_tcpdf.file">/var/www/vhosts/neutral.eco/httpdocs/vendor/tecnickcom/tcpdf/tcpdf.php</parameter>
    <parameter key="qipsius_tcpdf.class">TCPDF</parameter>
    <parameter key="qipsius_tcpdf.tcpdf" type="collection">
      <parameter key="k_path_url">/var/www/vhosts/neutral.eco/httpdocs/vendor/tecnickcom/tcpdf/</parameter>
      <parameter key="k_path_main">/var/www/vhosts/neutral.eco/httpdocs/vendor/tecnickcom/tcpdf/</parameter>
      <parameter key="k_path_fonts">/var/www/vhosts/neutral.eco/httpdocs/vendor/tecnickcom/tcpdf/fonts/</parameter>
      <parameter key="k_path_cache">/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/tcpdf</parameter>
      <parameter key="k_path_url_cache">/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/tcpdf</parameter>
      <parameter key="k_path_images">/var/www/vhosts/neutral.eco/httpdocs/vendor/tecnickcom/tcpdf/examples/images/</parameter>
      <parameter key="k_blank_image">/var/www/vhosts/neutral.eco/httpdocs/vendor/tecnickcom/tcpdf/examples/images/_blank.png</parameter>
      <parameter key="k_cell_height_ratio">1.25</parameter>
      <parameter key="k_title_magnification">1.3</parameter>
      <parameter key="k_small_ratio">0.66666666666667</parameter>
      <parameter key="k_thai_topchars">true</parameter>
      <parameter key="k_tcpdf_calls_in_html">false</parameter>
      <parameter key="k_tcpdf_external_config">true</parameter>
      <parameter key="k_tcpdf_throw_exception_error">true</parameter>
      <parameter key="head_magnification">1.1</parameter>
      <parameter key="pdf_page_format">A4</parameter>
      <parameter key="pdf_page_orientation">P</parameter>
      <parameter key="pdf_creator">TCPDF</parameter>
      <parameter key="pdf_author">TCPDF</parameter>
      <parameter key="pdf_header_title"></parameter>
      <parameter key="pdf_header_string"></parameter>
      <parameter key="pdf_header_logo"></parameter>
      <parameter key="pdf_header_logo_width"></parameter>
      <parameter key="pdf_unit">mm</parameter>
      <parameter key="pdf_margin_header">5</parameter>
      <parameter key="pdf_margin_footer">10</parameter>
      <parameter key="pdf_margin_top">27</parameter>
      <parameter key="pdf_margin_bottom">25</parameter>
      <parameter key="pdf_margin_left">15</parameter>
      <parameter key="pdf_margin_right">15</parameter>
      <parameter key="pdf_font_name_main">helvetica</parameter>
      <parameter key="pdf_font_size_main">10</parameter>
      <parameter key="pdf_font_name_data">helvetica</parameter>
      <parameter key="pdf_font_size_data">8</parameter>
      <parameter key="pdf_font_monospaced">courier</parameter>
      <parameter key="pdf_image_scale_ratio">1.25</parameter>
    </parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_USER" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">/</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.firewalls" type="collection">
      <parameter>oauth_token</parameter>
      <parameter>api</parameter>
      <parameter>admin_secured_area</parameter>
      <parameter>user_secured_area</parameter>
      <parameter>dev</parameter>
      <parameter>main</parameter>
    </parameter>
    <parameter key="security.api._indexed_authenticators" type="collection"/>
    <parameter key="security.admin_secured_area._indexed_authenticators" type="collection"/>
    <parameter key="security.user_secured_area._indexed_authenticators" type="collection"/>
    <parameter key="security.main._indexed_authenticators" type="collection"/>
    <parameter key="fos_oauth_server.server.class">OAuth2\OAuth2</parameter>
    <parameter key="fos_oauth_server.security.authentication.provider.class">FOS\OAuthServerBundle\Security\Authentication\Provider\OAuthProvider</parameter>
    <parameter key="fos_oauth_server.security.authentication.listener.class">FOS\OAuthServerBundle\Security\Firewall\OAuthListener</parameter>
    <parameter key="fos_oauth_server.security.entry_point.class">FOS\OAuthServerBundle\Security\EntryPoint\OAuthEntryPoint</parameter>
    <parameter key="fos_oauth_server.server.options" type="collection">
      <parameter key="access_token_lifetime">1209600</parameter>
      <parameter key="refresh_token_lifetime">1209600</parameter>
      <parameter key="auth_code_lifetime">30</parameter>
    </parameter>
    <parameter key="fos_oauth_server.model_manager_name">null</parameter>
    <parameter key="fos_oauth_server.model.client.class">App\Trinity\ApiBundle\Entity\Client</parameter>
    <parameter key="fos_oauth_server.model.access_token.class">App\Trinity\ApiBundle\Entity\AccessToken</parameter>
    <parameter key="fos_oauth_server.model.refresh_token.class">App\Trinity\ApiBundle\Entity\RefreshToken</parameter>
    <parameter key="fos_oauth_server.model.auth_code.class">App\Trinity\ApiBundle\Entity\AuthCode</parameter>
    <parameter key="fos_oauth_server.authorize.form.type">FOS\OAuthServerBundle\Form\Type\AuthorizeFormType</parameter>
    <parameter key="fos_oauth_server.authorize.form.name">fos_oauth_server_authorize_form</parameter>
    <parameter key="fos_oauth_server.authorize.form.validation_groups" type="collection">
      <parameter>Authorize</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_rest.format_listener.rules">null</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>@Cms/form.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/var/www/vhosts/neutral.eco/httpdocs/templates</parameter>
    <parameter key="nelmio_api_doc.areas" type="collection">
      <parameter>default</parameter>
    </parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.attribute.class">Doctrine\ORM\Mapping\Driver\AttributeDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine.migrations.preferred_em">null</parameter>
    <parameter key="doctrine.migrations.preferred_connection">null</parameter>
    <parameter key="white_october_breadcrumbs.options" type="collection">
      <parameter key="viewTemplate">elements/breadcrumbs.html.twig</parameter>
      <parameter key="separator">/</parameter>
      <parameter key="separatorClass">separator</parameter>
      <parameter key="listId">wo-breadcrumbs</parameter>
      <parameter key="listClass">breadcrumb</parameter>
      <parameter key="itemClass"></parameter>
      <parameter key="linkRel"></parameter>
      <parameter key="locale">null</parameter>
      <parameter key="translation_domain">null</parameter>
    </parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection"/>
    <parameter key="sentry.listener_priorities.request">1</parameter>
    <parameter key="sentry.listener_priorities.sub_request">1</parameter>
    <parameter key="sentry.listener_priorities.console">1</parameter>
    <parameter key="sentry.listener_priorities.request_error">128</parameter>
    <parameter key="sentry.listener_priorities.console_error">128</parameter>
    <parameter key="sentry.listener_priorities.worker_error">99</parameter>
    <parameter key="scheb_two_factor.model_manager_name">null</parameter>
    <parameter key="scheb_two_factor.security_tokens" type="collection">
      <parameter>Symfony\Component\Security\Guard\Token\PostAuthenticationGuardToken</parameter>
      <parameter>Symfony\Component\Security\Core\Authentication\Token\UsernamePasswordToken</parameter>
      <parameter>Symfony\Component\Security\Http\Authenticator\Token\PostAuthenticationToken</parameter>
    </parameter>
    <parameter key="scheb_two_factor.ip_whitelist" type="collection"/>
    <parameter key="scheb_two_factor.totp.issuer">Easify TOTP</parameter>
    <parameter key="scheb_two_factor.totp.server_name">Easify</parameter>
    <parameter key="scheb_two_factor.totp.window">1</parameter>
    <parameter key="scheb_two_factor.totp.parameters" type="collection"/>
    <parameter key="scheb_two_factor.totp.template">@Cms/login/2fa.html.twig</parameter>
    <parameter key="scheb_two_factor.trusted_device.enabled">true</parameter>
    <parameter key="scheb_two_factor.trusted_device.cookie_name">trusted_device</parameter>
    <parameter key="scheb_two_factor.trusted_device.lifetime">5184000</parameter>
    <parameter key="scheb_two_factor.trusted_device.extend_lifetime">true</parameter>
    <parameter key="scheb_two_factor.trusted_device.cookie_secure">false</parameter>
    <parameter key="scheb_two_factor.trusted_device.cookie_same_site">lax</parameter>
    <parameter key="scheb_two_factor.trusted_device.cookie_domain">null</parameter>
    <parameter key="scheb_two_factor.trusted_device.cookie_path">/</parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.App\CmsBundle\Command\ActivateBundleCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\BackupCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\BundleListCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\CacheCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\ControlCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\CreateBundleCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\CronTasksRunCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\FixTranslationsCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\InstallBundleCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\LanguageCacheCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\LanguageResetCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\MailtestCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\MediaCreateFullCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\MediaRegenThumbnailsCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\MediaUsageCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\MediadirCleanUpCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\MigrateCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\MissingmediaCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\MonitorCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\OptimizeCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\ReportCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\RestoreCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\ScheduleTask\CronTasksDefaultCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\ServerupdateCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\StatsCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\UpdateCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\UserCommand</parameter>
      <parameter>console.command.public_alias.App\CmsBundle\Command\WebpCommand</parameter>
      <parameter>console.command.public_alias.App\Trinity\BlogBundle\Command\BlogMediaMigrationCommand</parameter>
      <parameter>console.command.public_alias.App\Trinity\BlogBundle\Command\WpCommand</parameter>
      <parameter>console.command.public_alias.App\Trinity\SearchBundle\Command\IndexerCommand</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="routing.route_loader"/>
    </service>
    <service id="App\CmsBundle\Classes\Cron\CronExpression" class="App\CmsBundle\Classes\Cron\CronExpression" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Cron\CronSchedule" class="App\CmsBundle\Classes\Cron\CronSchedule" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Cron\DayOfMonthField" class="App\CmsBundle\Classes\Cron\DayOfMonthField" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Cron\DayOfWeekField" class="App\CmsBundle\Classes\Cron\DayOfWeekField" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Cron\FieldFactory" class="App\CmsBundle\Classes\Cron\FieldFactory" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Cron\HoursField" class="App\CmsBundle\Classes\Cron\HoursField" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Cron\MinutesField" class="App\CmsBundle\Classes\Cron\MinutesField" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Cron\MonthField" class="App\CmsBundle\Classes\Cron\MonthField" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Hummessenger" class="App\CmsBundle\Classes\Hummessenger" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Indexer" class="App\CmsBundle\Classes\Indexer" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Lef" class="App\CmsBundle\Classes\Lef" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Matomo" class="App\CmsBundle\Classes\Matomo" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Meta" class="App\CmsBundle\Classes\Meta" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Entity\Settings"/>
    </service>
    <service id="App\CmsBundle\Classes\Openai" class="App\CmsBundle\Classes\Openai" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Parsedown" class="App\CmsBundle\Classes\Parsedown" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\ParsedownBootstrap" class="App\CmsBundle\Classes\ParsedownBootstrap" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Pay" class="App\CmsBundle\Classes\Pay" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Payment\Buckaroo" class="App\CmsBundle\Classes\Payment\Buckaroo" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Payment\Mollie" class="App\CmsBundle\Classes\Payment\Mollie" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Payment\Multisafepay" class="App\CmsBundle\Classes\Payment\Multisafepay" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Payment\Omnikassa" class="App\CmsBundle\Classes\Payment\Omnikassa" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Payment\Pay" class="App\CmsBundle\Classes\Payment\Pay" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Payment\Paypro" class="App\CmsBundle\Classes\Payment\Paypro" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Payment\Sisow" class="App\CmsBundle\Classes\Payment\Sisow" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Pdf" class="App\CmsBundle\Classes\Pdf" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\Common\Adapter\Zip\PclZipAdapter" class="App\CmsBundle\Classes\PhpOffice\Common\Adapter\Zip\PclZipAdapter" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\Common\Adapter\Zip\ZipArchiveAdapter" class="App\CmsBundle\Classes\PhpOffice\Common\Adapter\Zip\ZipArchiveAdapter" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\Common\Autoloader" class="App\CmsBundle\Classes\PhpOffice\Common\Autoloader" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\Common\Drawing" class="App\CmsBundle\Classes\PhpOffice\Common\Drawing" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\Common\File" class="App\CmsBundle\Classes\PhpOffice\Common\File" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\Common\Font" class="App\CmsBundle\Classes\PhpOffice\Common\Font" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\Common\Microsoft\OLERead" class="App\CmsBundle\Classes\PhpOffice\Common\Microsoft\OLERead" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\Common\Microsoft\PasswordEncoder" class="App\CmsBundle\Classes\PhpOffice\Common\Microsoft\PasswordEncoder" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\Common\Text" class="App\CmsBundle\Classes\PhpOffice\Common\Text" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\Common\XMLReader" class="App\CmsBundle\Classes\PhpOffice\Common\XMLReader" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter" class="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Collection\Bookmarks" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Collection\Bookmarks" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Collection\Charts" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Collection\Charts" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Collection\Comments" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Collection\Comments" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Collection\Endnotes" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Collection\Endnotes" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Collection\Footnotes" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Collection\Footnotes" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Collection\Titles" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Collection\Titles" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\ComplexType\FootnoteProperties" class="App\CmsBundle\Classes\PhpOffice\PhpWord\ComplexType\FootnoteProperties" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\ComplexType\ProofState" class="App\CmsBundle\Classes\PhpOffice\PhpWord\ComplexType\ProofState" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\ComplexType\TblWidth" class="App\CmsBundle\Classes\PhpOffice\PhpWord\ComplexType\TblWidth" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\ComplexType\TrackChangesView" class="App\CmsBundle\Classes\PhpOffice\PhpWord\ComplexType\TrackChangesView" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Bookmark" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Bookmark" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Cell" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Cell" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Chart" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Chart" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\CheckBox" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\CheckBox" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Comment" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Comment" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Endnote" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Endnote" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Field" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Field" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Footer" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Footer" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Footnote" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Footnote" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\FormField" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\FormField" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Header" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Header" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Image" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Image" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Line" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Line" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Link" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Link" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\ListItem" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\ListItem" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\ListItemRun" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\ListItemRun" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\OLEObject" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\OLEObject" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\PageBreak" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\PageBreak" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\PreserveText" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\PreserveText" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Row" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Row" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\SDT" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\SDT" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Section" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Section" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Shape" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Shape" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\TOC" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\TOC" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Table" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Table" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Text" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Text" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\TextBox" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\TextBox" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\TextBreak" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\TextBreak" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\TextRun" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\TextRun" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Title" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\Title" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\TrackChange" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Element\TrackChange" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Escaper\RegExp" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Escaper\RegExp" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Escaper\Rtf" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Escaper\Rtf" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Escaper\Xml" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Escaper\Xml" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\CopyFileException" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\CopyFileException" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\CreateTemporaryFileException" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\CreateTemporaryFileException" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\Exception" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\Exception" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\InvalidImageException" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\InvalidImageException" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\InvalidObjectException" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\InvalidObjectException" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\InvalidStyleException" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\InvalidStyleException" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\UnsupportedImageTypeException" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Exception\UnsupportedImageTypeException" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Media" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Media" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Metadata\Compatibility" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Metadata\Compatibility" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Metadata\DocInfo" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Metadata\DocInfo" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Metadata\Protection" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Metadata\Protection" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Metadata\Settings" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Metadata\Settings" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\PhpWord" class="App\CmsBundle\Classes\PhpOffice\PhpWord\PhpWord" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\HTML" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\HTML" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\MsDoc" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\MsDoc" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\ODText" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\ODText" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\ODText\Content" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\ODText\Content" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\ODText\Meta" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\ODText\Meta" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\RTF" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\RTF" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\RTF\Document" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\RTF\Document" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\DocPropsApp" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\DocPropsApp" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\DocPropsCore" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\DocPropsCore" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\DocPropsCustom" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\DocPropsCustom" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\Document" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\Document" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\Endnotes" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\Endnotes" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\Footnotes" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\Footnotes" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\Numbering" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\Numbering" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\Settings" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\Settings" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\Styles" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Reader\Word2007\Styles" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Settings" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Settings" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Shared\Converter" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Shared\Converter" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Shared\Html" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Shared\Html" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Shared\OLERead" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Shared\OLERead" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Shared\ZipArchive" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Shared\ZipArchive" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\DocProtect" class="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\DocProtect" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\Jc" class="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\Jc" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\JcTable" class="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\JcTable" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\LineSpacingRule" class="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\LineSpacingRule" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\NumberFormat" class="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\NumberFormat" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\TblWidth" class="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\TblWidth" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\TextAlignment" class="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\TextAlignment" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\VerticalJc" class="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\VerticalJc" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\Zoom" class="App\CmsBundle\Classes\PhpOffice\PhpWord\SimpleType\Zoom" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Border" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Border" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Cell" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Cell" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Chart" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Chart" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Extrusion" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Extrusion" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Fill" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Fill" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Font" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Font" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Frame" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Frame" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Image" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Image" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Indentation" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Indentation" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Language" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Language" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Line" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Line" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\LineNumbering" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\LineNumbering" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\ListItem" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\ListItem" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Numbering" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Numbering" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\NumberingLevel" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\NumberingLevel" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Outline" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Outline" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Paper" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Paper" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Paragraph" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Paragraph" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Row" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Row" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Section" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Section" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Shading" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Shading" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Shadow" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Shadow" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Shape" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Shape" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Spacing" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Spacing" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\TOC" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\TOC" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Tab" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Tab" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Table" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\Table" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\TablePosition" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\TablePosition" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\TextBox" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Style\TextBox" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Template" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Template" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\TemplateProcessor" class="App\CmsBundle\Classes\PhpOffice\PhpWord\TemplateProcessor" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\PhpWord\PhpWord"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Bookmark" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Bookmark" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Container" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Container" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Endnote" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Endnote" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Footnote" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Footnote" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Image" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Image" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Link" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Link" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\ListItem" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\ListItem" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\PageBreak" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\PageBreak" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Table" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Table" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Text" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Text" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\TextBreak" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\TextBreak" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\TextRun" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\TextRun" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Title" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Element\Title" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Part\Body" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Part\Body" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Part\Head" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Part\Head" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Style\Font" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Style\Font" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Style\Generic" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Style\Generic" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Style\Image" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Style\Image" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Style\Paragraph" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\HTML\Style\Paragraph" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\PhpWord\PhpWord"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\Container" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\Container" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\Image" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\Image" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\Link" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\Link" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\PageBreak" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\PageBreak" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\Table" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\Table" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\Text" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\Text" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\TextBreak" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\TextBreak" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\TextRun" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\TextRun" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\Title" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Element\Title" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Part\Content" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Part\Content" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Part\Manifest" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Part\Manifest" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Part\Meta" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Part\Meta" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Part\Mimetype" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Part\Mimetype" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Part\Styles" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Part\Styles" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Style\Font" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Style\Font" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Style\Image" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Style\Image" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Style\Paragraph" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Style\Paragraph" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Style\Section" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Style\Section" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Style\Table" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\ODText\Style\Table" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\PDF" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\PDF" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\PhpWord\PhpWord"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\PDF\DomPDF" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\PDF\DomPDF" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\PhpWord\PhpWord"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\PDF\MPDF" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\PDF\MPDF" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\PhpWord\PhpWord"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\PDF\TCPDF" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\PDF\TCPDF" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\PhpWord\PhpWord"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\PhpWord\PhpWord"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Container" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Container" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Field" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Field" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Image" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Image" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Link" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Link" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\ListItem" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\ListItem" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\PageBreak" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\PageBreak" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Table" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Table" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Text" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Text" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\TextBreak" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\TextBreak" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\TextRun" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\TextRun" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Title" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Element\Title" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Part\Document" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Part\Document" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Part\Header" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Part\Header" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Style\Border" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Style\Border" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Style\Font" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Style\Font" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Style\Indentation" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Style\Indentation" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Style\Paragraph" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Style\Paragraph" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Style\Section" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Style\Section" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Style\Tab" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\RTF\Style\Tab" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\PhpWord\PhpWord"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Bookmark" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Bookmark" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Chart" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Chart" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\CheckBox" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\CheckBox" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Container" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Container" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Endnote" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Endnote" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Field" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Field" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Footnote" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Footnote" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\FormField" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\FormField" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Image" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Image" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Line" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Line" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Link" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Link" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\ListItem" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\ListItem" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\ListItemRun" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\ListItemRun" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\OLEObject" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\OLEObject" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\PageBreak" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\PageBreak" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\ParagraphAlignment" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\ParagraphAlignment" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\PreserveText" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\PreserveText" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\SDT" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\SDT" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Shape" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Shape" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\TOC" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\TOC" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Table" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Table" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\TableAlignment" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\TableAlignment" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Text" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Text" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\TextBox" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\TextBox" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\TextBreak" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\TextBreak" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\TextRun" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\TextRun" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Title" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Element\Title" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Chart" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Chart" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Comments" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Comments" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\ContentTypes" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\ContentTypes" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\DocPropsApp" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\DocPropsApp" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\DocPropsCore" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\DocPropsCore" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\DocPropsCustom" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\DocPropsCustom" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Document" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Document" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Endnotes" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Endnotes" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\FontTable" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\FontTable" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Footer" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Footer" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Footnotes" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Footnotes" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Header" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Header" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Numbering" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Numbering" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Rels" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Rels" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\RelsDocument" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\RelsDocument" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\RelsPart" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\RelsPart" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Settings" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Settings" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Styles" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Styles" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Theme" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\Theme" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\WebSettings" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Part\WebSettings" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Cell" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Cell" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Extrusion" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Extrusion" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Fill" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Fill" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Font" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Font" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Frame" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Frame" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Image" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Image" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Indentation" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Indentation" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Line" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Line" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\LineNumbering" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\LineNumbering" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\MarginBorder" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\MarginBorder" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Outline" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Outline" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Paragraph" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Paragraph" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Row" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Row" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Section" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Section" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Shading" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Shading" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Shadow" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Shadow" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Shape" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Shape" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Spacing" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Spacing" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Tab" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Tab" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Table" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\Table" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\TablePosition" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\TablePosition" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\TextBox" class="App\CmsBundle\Classes\PhpOffice\PhpWord\Writer\Word2007\Style\TextBox" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Classes\PhpOffice\Common\XMLWriter"/>
    </service>
    <service id="App\CmsBundle\Classes\Postcode" class="App\CmsBundle\Classes\Postcode" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Entity\Settings"/>
    </service>
    <service id="App\CmsBundle\Classes\QRcode" class="App\CmsBundle\Classes\QRcode" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\SqlFormatter" class="App\CmsBundle\Classes\SqlFormatter" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Timer" class="App\CmsBundle\Classes\Timer" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Classes\Tinify" class="App\CmsBundle\Classes\Tinify" autowire="true" autoconfigure="true">
      <argument type="service" id="App\CmsBundle\Entity\Settings"/>
    </service>
    <service id="App\CmsBundle\Classes\VideoUrlParser" class="App\CmsBundle\Classes\VideoUrlParser" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\CmsBundle" class="App\CmsBundle\CmsBundle" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Command\ActivateBundleCommand" class="App\CmsBundle\Command\ActivateBundleCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\BackupCommand" class="App\CmsBundle\Command\BackupCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\BundleListCommand" class="App\CmsBundle\Command\BundleListCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\CacheCommand" class="App\CmsBundle\Command\CacheCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\ControlCommand" class="App\CmsBundle\Command\ControlCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\CreateBundleCommand" class="App\CmsBundle\Command\CreateBundleCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\CronTasksRunCommand" class="App\CmsBundle\Command\CronTasksRunCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\FixTranslationsCommand" class="App\CmsBundle\Command\FixTranslationsCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\InstallBundleCommand" class="App\CmsBundle\Command\InstallBundleCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
    </service>
    <service id="App\CmsBundle\Command\LanguageCacheCommand" class="App\CmsBundle\Command\LanguageCacheCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
    </service>
    <service id="App\CmsBundle\Command\LanguageResetCommand" class="App\CmsBundle\Command\LanguageResetCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
    </service>
    <service id="App\CmsBundle\Command\MailtestCommand" class="App\CmsBundle\Command\MailtestCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
    </service>
    <service id="App\CmsBundle\Command\MediaCreateFullCommand" class="App\CmsBundle\Command\MediaCreateFullCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\MediaRegenThumbnailsCommand" class="App\CmsBundle\Command\MediaRegenThumbnailsCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\MediaUsageCommand" class="App\CmsBundle\Command\MediaUsageCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\MediadirCleanUpCommand" class="App\CmsBundle\Command\MediadirCleanUpCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\MigrateCommand" class="App\CmsBundle\Command\MigrateCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\MissingmediaCommand" class="App\CmsBundle\Command\MissingmediaCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\MonitorCommand" class="App\CmsBundle\Command\MonitorCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\OptimizeCommand" class="App\CmsBundle\Command\OptimizeCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\ReportCommand" class="App\CmsBundle\Command\ReportCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\RestoreCommand" class="App\CmsBundle\Command\RestoreCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\ScheduleTask\CronTasksDefaultCommand" class="App\CmsBundle\Command\ScheduleTask\CronTasksDefaultCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="App\CmsBundle\Command\ServerupdateCommand" class="App\CmsBundle\Command\ServerupdateCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\StatsCommand" class="App\CmsBundle\Command\StatsCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Command\UpdateCommand" class="App\CmsBundle\Command\UpdateCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
    </service>
    <service id="App\CmsBundle\Command\UserCommand" class="App\CmsBundle\Command\UserCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="security.user_password_hasher"/>
      <argument type="service" id="scheb_two_factor.security.totp_authenticator"/>
    </service>
    <service id="App\CmsBundle\Command\WebpCommand" class="App\CmsBundle\Command\WebpCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Controller\ApiController" class="App\CmsBundle\Controller\ApiController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.u9KuSDP.App\CmsBundle\Controller\ApiController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\CalendarController" class="App\CmsBundle\Controller\CalendarController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\CalendarController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\CommandcontrolController" class="App\CmsBundle\Controller\CommandcontrolController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\CommandcontrolController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\CronTaskController" class="App\CmsBundle\Controller\CronTaskController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\CronTaskController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\DefaultController" class="App\CmsBundle\Controller\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\DefaultController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\ErrorController" class="App\CmsBundle\Controller\ErrorController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\ErrorController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\IntegrationsController" class="App\CmsBundle\Controller\IntegrationsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\IntegrationsController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\JsonController" class="App\CmsBundle\Controller\JsonController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\JsonController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\LinkController" class="App\CmsBundle\Controller\LinkController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\LinkController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\LoginController" class="App\CmsBundle\Controller\LoginController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\LoginController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\MailController" class="App\CmsBundle\Controller\MailController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\MailController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\MaintenanceController" class="App\CmsBundle\Controller\MaintenanceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\MaintenanceController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\MediaController" class="App\CmsBundle\Controller\MediaController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\MediaController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\MetadataController" class="App\CmsBundle\Controller\MetadataController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\MetadataController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\MonitorController" class="App\CmsBundle\Controller\MonitorController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\MonitorController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\MultisiteController" class="App\CmsBundle\Controller\MultisiteController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\MultisiteController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\NavigationController" class="App\CmsBundle\Controller\NavigationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\NavigationController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\PageController" class="App\CmsBundle\Controller\PageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\PageController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\RedirectsController" class="App\CmsBundle\Controller\RedirectsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\RedirectsController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\SettingsController" class="App\CmsBundle\Controller\SettingsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\SettingsController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\SitemapController" class="App\CmsBundle\Controller\SitemapController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\SitemapController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\StorageController" class="App\CmsBundle\Controller\StorageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\StorageController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\SystemController" class="App\CmsBundle\Controller\SystemController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\SystemController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\TagController" class="App\CmsBundle\Controller\TagController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\TagController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\TrashController" class="App\CmsBundle\Controller\TrashController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\TrashController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\UpdateController" class="App\CmsBundle\Controller\UpdateController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\UpdateController"/>
      </call>
    </service>
    <service id="App\CmsBundle\Controller\UsersController" class="App\CmsBundle\Controller\UsersController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\CmsBundle\Controller\UsersController"/>
      </call>
    </service>
    <service id="App\CmsBundle\DependencyInjection\CmsExtension" class="App\CmsBundle\DependencyInjection\CmsExtension" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\DependencyInjection\Configuration" class="App\CmsBundle\DependencyInjection\Configuration" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Block" class="App\CmsBundle\Entity\Block" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Clientdomain" class="App\CmsBundle\Entity\Clientdomain" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Clientrequest" class="App\CmsBundle\Entity\Clientrequest" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\CronTask" class="App\CmsBundle\Entity\CronTask" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Event" class="App\CmsBundle\Entity\Event" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\EventTodo" class="App\CmsBundle\Entity\EventTodo" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Integrations" class="App\CmsBundle\Entity\Integrations" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Ipcheck" class="App\CmsBundle\Entity\Ipcheck" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Language" class="App\CmsBundle\Entity\Language" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\LanguageToken" class="App\CmsBundle\Entity\LanguageToken" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\LanguageTranslation" class="App\CmsBundle\Entity\LanguageTranslation" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Layout" class="App\CmsBundle\Entity\Layout" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Log" class="App\CmsBundle\Entity\Log" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Mail" class="App\CmsBundle\Entity\Mail" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Media" class="App\CmsBundle\Entity\Media" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Mediadir" class="App\CmsBundle\Entity\Mediadir" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Metatag" class="App\CmsBundle\Entity\Metatag" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Navigation" class="App\CmsBundle\Entity\Navigation" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\NavigationItem" class="App\CmsBundle\Entity\NavigationItem" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Page" class="App\CmsBundle\Entity\Page" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\PageBlock" class="App\CmsBundle\Entity\PageBlock" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\PageBlockMedia" class="App\CmsBundle\Entity\PageBlockMedia" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\PageBlockWrapper" class="App\CmsBundle\Entity\PageBlockWrapper" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\PageContent" class="App\CmsBundle\Entity\PageContent" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\PageMetatag" class="App\CmsBundle\Entity\PageMetatag" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\PageScore" class="App\CmsBundle\Entity\PageScore" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\PageVersion" class="App\CmsBundle\Entity\PageVersion" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\ProfileField" class="App\CmsBundle\Entity\ProfileField" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Settings" class="App\CmsBundle\Entity\Settings" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\Tag" class="App\CmsBundle\Entity\Tag" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\User" class="App\CmsBundle\Entity\User" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Entity\UserProfile" class="App\CmsBundle\Entity\UserProfile" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\EventListener\ExceptionListener" class="App\CmsBundle\EventListener\ExceptionListener" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\EventListener\SecurityListener" class="App\CmsBundle\EventListener\SecurityListener" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\EventListener\UserLocaleListener" class="App\CmsBundle\EventListener\UserLocaleListener" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Model\Version" class="App\CmsBundle\Model\Version" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\ClientdomainRepository" class="App\CmsBundle\Repository\ClientdomainRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\ClientrequestRepository" class="App\CmsBundle\Repository\ClientrequestRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\CronTaskRepository" class="App\CmsBundle\Repository\CronTaskRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\EventRepository" class="App\CmsBundle\Repository\EventRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\LanguageRepository" class="App\CmsBundle\Repository\LanguageRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\LanguageTokenRepository" class="App\CmsBundle\Repository\LanguageTokenRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\LanguageTranslationRepository" class="App\CmsBundle\Repository\LanguageTranslationRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\LogRepository" class="App\CmsBundle\Repository\LogRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\MediaRepository" class="App\CmsBundle\Repository\MediaRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\MediadirRepository" class="App\CmsBundle\Repository\MediadirRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\MetatagRepository" class="App\CmsBundle\Repository\MetatagRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\PageBlockRepository" class="App\CmsBundle\Repository\PageBlockRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\PageBlockWrapperRepository" class="App\CmsBundle\Repository\PageBlockWrapperRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\PageRepository" class="App\CmsBundle\Repository\PageRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\SettingsRepository" class="App\CmsBundle\Repository\SettingsRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\TagRepository" class="App\CmsBundle\Repository\TagRepository" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Repository\UserRepository" class="App\CmsBundle\Repository\UserRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\CmsBundle\Routing\DBLoader" class="App\CmsBundle\Routing\DBLoader" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Routing\PageLoader" class="App\CmsBundle\Routing\PageLoader" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Security\AccessDeniedHandler" class="App\CmsBundle\Security\AccessDeniedHandler" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Security\AppUserAuthenticator" class="App\CmsBundle\Security\AppUserAuthenticator" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="App\CmsBundle\Service\PasswordEncoder" class="App\CmsBundle\Service\PasswordEncoder" autowire="true" autoconfigure="true">
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="App\CmsBundle\Tests\Controller\DefaultControllerTest" class="App\CmsBundle\Tests\Controller\DefaultControllerTest" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Twig\Extension\Helpers" class="App\CmsBundle\Twig\Extension\Helpers" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="App\CmsBundle\Twig\Extension\PageInfo" class="App\CmsBundle\Twig\Extension\PageInfo" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\CmsBundle\Twig\Extension\PageNavigation" class="App\CmsBundle\Twig\Extension\PageNavigation" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="App\CmsBundle\Type\TrinityEntityType" class="App\CmsBundle\Type\TrinityEntityType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\CmsBundle\Util\DefaultCommands" class="App\CmsBundle\Util\DefaultCommands" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Util\Mailer" class="App\CmsBundle\Util\Mailer" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="mailer.mailer"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="App\CmsBundle\Util\Pagespeed" class="App\CmsBundle\Util\Pagespeed" autowire="true" autoconfigure="true"/>
    <service id="App\CmsBundle\Util\Util" class="App\CmsBundle\Util\Util" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\ApiBundle\Controller\AdminController" class="App\Trinity\ApiBundle\Controller\AdminController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Trinity\ApiBundle\Controller\AdminController"/>
      </call>
    </service>
    <service id="App\Trinity\ApiBundle\Controller\DefaultController" class="App\Trinity\ApiBundle\Controller\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.u9KuSDP.App\Trinity\ApiBundle\Controller\DefaultController"/>
      </call>
    </service>
    <service id="App\Trinity\ApiBundle\DependencyInjection\Configuration" class="App\Trinity\ApiBundle\DependencyInjection\Configuration" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\ApiBundle\DependencyInjection\TrinityApiExtension" class="App\Trinity\ApiBundle\DependencyInjection\TrinityApiExtension" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\ApiBundle\Entity\AccessToken" class="App\Trinity\ApiBundle\Entity\AccessToken" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\ApiBundle\Entity\AuthCode" class="App\Trinity\ApiBundle\Entity\AuthCode" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\ApiBundle\Entity\Client" class="App\Trinity\ApiBundle\Entity\Client" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\ApiBundle\Entity\RefreshToken" class="App\Trinity\ApiBundle\Entity\RefreshToken" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\ApiBundle\TrinityApiBundle" class="App\Trinity\ApiBundle\TrinityApiBundle" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Classes\Indexer" class="App\Trinity\BlogBundle\Classes\Indexer" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Classes\Metadata" class="App\Trinity\BlogBundle\Classes\Metadata" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Command\BlogMediaMigrationCommand" class="App\Trinity\BlogBundle\Command\BlogMediaMigrationCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="App\Trinity\BlogBundle\Command\WpCommand" class="App\Trinity\BlogBundle\Command\WpCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="App\Trinity\BlogBundle\Controller\BlogController" class="App\Trinity\BlogBundle\Controller\BlogController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Trinity\BlogBundle\Controller\BlogController"/>
      </call>
    </service>
    <service id="App\Trinity\BlogBundle\Controller\EntryController" class="App\Trinity\BlogBundle\Controller\EntryController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Trinity\BlogBundle\Controller\EntryController"/>
      </call>
    </service>
    <service id="App\Trinity\BlogBundle\DependencyInjection\Configuration" class="App\Trinity\BlogBundle\DependencyInjection\Configuration" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\DependencyInjection\TrinityBlogExtension" class="App\Trinity\BlogBundle\DependencyInjection\TrinityBlogExtension" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Entity\Blog" class="App\Trinity\BlogBundle\Entity\Blog" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Entity\Category" class="App\Trinity\BlogBundle\Entity\Category" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Entity\Entry" class="App\Trinity\BlogBundle\Entity\Entry" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Entity\Mailreply" class="App\Trinity\BlogBundle\Entity\Mailreply" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Entity\Metatag" class="App\Trinity\BlogBundle\Entity\Metatag" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Entity\Reply" class="App\Trinity\BlogBundle\Entity\Reply" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Repository\BlogRepository" class="App\Trinity\BlogBundle\Repository\BlogRepository" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Repository\EntryMetatagRepository" class="App\Trinity\BlogBundle\Repository\EntryMetatagRepository" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Repository\EntryRepository" class="App\Trinity\BlogBundle\Repository\EntryRepository" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Repository\ReplyRepository" class="App\Trinity\BlogBundle\Repository\ReplyRepository" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Routing\ExtraLoader" class="App\Trinity\BlogBundle\Routing\ExtraLoader" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Tests\Controller\DefaultControllerTest" class="App\Trinity\BlogBundle\Tests\Controller\DefaultControllerTest" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\TrinityBlogBundle" class="App\Trinity\BlogBundle\TrinityBlogBundle" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\BlogBundle\Twig\Extension\Timeago" class="App\Trinity\BlogBundle\Twig\Extension\Timeago" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="App\Trinity\FormsBundle\Controller\FormsController" class="App\Trinity\FormsBundle\Controller\FormsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Trinity\FormsBundle\Controller\FormsController"/>
      </call>
    </service>
    <service id="App\Trinity\FormsBundle\DependencyInjection\Configuration" class="App\Trinity\FormsBundle\DependencyInjection\Configuration" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\FormsBundle\DependencyInjection\TrinityFormsExtension" class="App\Trinity\FormsBundle\DependencyInjection\TrinityFormsExtension" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\FormsBundle\Entity\Answer" class="App\Trinity\FormsBundle\Entity\Answer" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\FormsBundle\Entity\Form" class="App\Trinity\FormsBundle\Entity\Form" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\FormsBundle\Entity\Metatag" class="App\Trinity\FormsBundle\Entity\Metatag" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\FormsBundle\Entity\Question" class="App\Trinity\FormsBundle\Entity\Question" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\FormsBundle\Entity\Session" class="App\Trinity\FormsBundle\Entity\Session" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\FormsBundle\Repository\AnswerRepository" class="App\Trinity\FormsBundle\Repository\AnswerRepository" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\FormsBundle\Repository\FormRepository" class="App\Trinity\FormsBundle\Repository\FormRepository" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\FormsBundle\Tests\Controller\DefaultControllerTest" class="App\Trinity\FormsBundle\Tests\Controller\DefaultControllerTest" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\FormsBundle\TrinityFormsBundle" class="App\Trinity\FormsBundle\TrinityFormsBundle" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Classes\Account" class="App\Trinity\NeutralBundle\Classes\Account" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Classes\Api" class="App\Trinity\NeutralBundle\Classes\Api" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Classes\Comment" class="App\Trinity\NeutralBundle\Classes\Comment" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Classes\Pagination" class="App\Trinity\NeutralBundle\Classes\Pagination" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Classes\Project" class="App\Trinity\NeutralBundle\Classes\Project" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Classes\Transaction" class="App\Trinity\NeutralBundle\Classes\Transaction" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Controller\ConfigController" class="App\Trinity\NeutralBundle\Controller\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Trinity\NeutralBundle\Controller\ConfigController"/>
      </call>
    </service>
    <service id="App\Trinity\NeutralBundle\Controller\NeutralController" class="App\Trinity\NeutralBundle\Controller\NeutralController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Trinity\NeutralBundle\Controller\NeutralController"/>
      </call>
    </service>
    <service id="App\Trinity\NeutralBundle\Controller\ProjectsController" class="App\Trinity\NeutralBundle\Controller\ProjectsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Trinity\NeutralBundle\Controller\ProjectsController"/>
      </call>
    </service>
    <service id="App\Trinity\NeutralBundle\Controller\UsersController" class="App\Trinity\NeutralBundle\Controller\UsersController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Trinity\NeutralBundle\Controller\UsersController"/>
      </call>
    </service>
    <service id="App\Trinity\NeutralBundle\DependencyInjection\Configuration" class="App\Trinity\NeutralBundle\DependencyInjection\Configuration" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\DependencyInjection\TrinityNeutralExtension" class="App\Trinity\NeutralBundle\DependencyInjection\TrinityNeutralExtension" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Entity\BuyInCredits" class="App\Trinity\NeutralBundle\Entity\BuyInCredits" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Entity\Comment" class="App\Trinity\NeutralBundle\Entity\Comment" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Entity\Config" class="App\Trinity\NeutralBundle\Entity\Config" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Entity\MailHistory" class="App\Trinity\NeutralBundle\Entity\MailHistory" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Entity\Project" class="App\Trinity\NeutralBundle\Entity\Project" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Entity\Transaction" class="App\Trinity\NeutralBundle\Entity\Transaction" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Entity\User" class="App\Trinity\NeutralBundle\Entity\User" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\NeutralBundle\Form\ConfigType" class="App\Trinity\NeutralBundle\Form\ConfigType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Trinity\NeutralBundle\Repository\BuyInCreditsRepository" class="App\Trinity\NeutralBundle\Repository\BuyInCreditsRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Trinity\NeutralBundle\Repository\CommentRepository" class="App\Trinity\NeutralBundle\Repository\CommentRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Trinity\NeutralBundle\Repository\ConfigRepository" class="App\Trinity\NeutralBundle\Repository\ConfigRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Trinity\NeutralBundle\Repository\MailHistoryRepository" class="App\Trinity\NeutralBundle\Repository\MailHistoryRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Trinity\NeutralBundle\Repository\ProjectRepository" class="App\Trinity\NeutralBundle\Repository\ProjectRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Trinity\NeutralBundle\Repository\TransactionRepository" class="App\Trinity\NeutralBundle\Repository\TransactionRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Trinity\NeutralBundle\Repository\UserRepository" class="App\Trinity\NeutralBundle\Repository\UserRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Trinity\NeutralBundle\TrinityNeutralBundle" class="App\Trinity\NeutralBundle\TrinityNeutralBundle" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\SearchBundle\Command\IndexerCommand" class="App\Trinity\SearchBundle\Command\IndexerCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\Trinity\SearchBundle\Controller\SearchController" class="App\Trinity\SearchBundle\Controller\SearchController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Trinity\SearchBundle\Controller\SearchController"/>
      </call>
    </service>
    <service id="App\Trinity\SearchBundle\DependencyInjection\Configuration" class="App\Trinity\SearchBundle\DependencyInjection\Configuration" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\SearchBundle\DependencyInjection\TrinitySearchExtension" class="App\Trinity\SearchBundle\DependencyInjection\TrinitySearchExtension" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\SearchBundle\Entity\SearchIndex" class="App\Trinity\SearchBundle\Entity\SearchIndex" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\SearchBundle\Repository\IndexRepository" class="App\Trinity\SearchBundle\Repository\IndexRepository" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\SearchBundle\TrinitySearchBundle" class="App\Trinity\SearchBundle\TrinitySearchBundle" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\SliderBundle\Controller\EntryController" class="App\Trinity\SliderBundle\Controller\EntryController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Trinity\SliderBundle\Controller\EntryController"/>
      </call>
    </service>
    <service id="App\Trinity\SliderBundle\Controller\SliderController" class="App\Trinity\SliderBundle\Controller\SliderController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.mx0UMmY.App\Trinity\SliderBundle\Controller\SliderController"/>
      </call>
    </service>
    <service id="App\Trinity\SliderBundle\DependencyInjection\Configuration" class="App\Trinity\SliderBundle\DependencyInjection\Configuration" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\SliderBundle\DependencyInjection\TrinitySliderExtension" class="App\Trinity\SliderBundle\DependencyInjection\TrinitySliderExtension" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\SliderBundle\Entity\Entry" class="App\Trinity\SliderBundle\Entity\Entry" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\SliderBundle\Entity\Slider" class="App\Trinity\SliderBundle\Entity\Slider" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\SliderBundle\Repository\EntryRepository" class="App\Trinity\SliderBundle\Repository\EntryRepository" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\SliderBundle\Tests\Controller\DefaultControllerTest" class="App\Trinity\SliderBundle\Tests\Controller\DefaultControllerTest" autowire="true" autoconfigure="true"/>
    <service id="App\Trinity\SliderBundle\TrinitySliderBundle" class="App\Trinity\SliderBundle\TrinitySliderBundle" autowire="true" autoconfigure="true"/>
    <service id="app.locale_listener" class="App\CmsBundle\EventListener\LocaleListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>nl</argument>
    </service>
    <service id="app.user_locale_listener" class="App\CmsBundle\EventListener\UserLocaleListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="security.interactive_login" method="onInteractiveLogin"/>
      <argument type="service" id=".session.do-not-use"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="app.exception_listener" class="App\CmsBundle\EventListener\ExceptionListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.exception"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="TrinityApiBundle_show" class="App\Trinity\ApiBundle\Controller\AdminController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="App\CmsBundle\Util\Mailer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="TrinityApiBundle_inflector" class="App\Trinity\ApiBundle\Controller\InflectController" autowire="true" autoconfigure="true"/>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
      <argument>false</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>nl</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>App\CmsBundle\Controller\ErrorController::show</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>App\CmsBundle\Controller\ErrorController::show</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\HttpKernelRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\ResponseRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\SymfonyRuntime"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="http_cache" class="Symfony\Bundle\FrameworkBundle\HttpCache\HttpCache">
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="http_cache.store"/>
      <argument type="service" id="esi" on-invalid="null"/>
      <argument type="collection">
        <argument key="debug">true</argument>
      </argument>
      <argument type="service">
        <service class="void">
          <factory class="Symfony\Component\HttpFoundation\Request" method="enableHttpMethodParameterOverride"/>
        </service>
      </argument>
    </service>
    <service id="http_cache.store" class="Symfony\Component\HttpKernel\HttpCache\Store">
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/http_cache</argument>
    </service>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <tag name="container.no_preload"/>
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/App_KernelLiveDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
    </service>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="http_client" type="service" id="http_client" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.message_logger_listener" type="service" id="mailer.message_logger_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service" id="session_listener" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.view_handler.default" type="service" id="fos_rest.view_handler.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="WhiteOctober\BreadcrumbsBundle\Model\Breadcrumbs" type="service" id="WhiteOctober\BreadcrumbsBundle\Model\Breadcrumbs" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="http_client" type="collection">
          <argument>?reset</argument>
        </argument>
        <argument key="mailer.message_logger_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="session_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="fos_rest.view_handler.default" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="WhiteOctober\BreadcrumbsBundle\Model\Breadcrumbs" type="collection">
          <argument>clear</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XXv1IfR"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
        <argument type="service" id="translator.default"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger">
      <tag name="kernel.locale_aware"/>
      <argument>nl</argument>
    </service>
    <service id="container.getenv" class="Closure">
      <tag name="routing.expression_language_function" function="env"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>getEnv</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.env" class="Symfony\Component\String\LazyString" abstract="true">
      <argument type="service" id="container.getenv"/>
      <factory class="Symfony\Component\String\LazyString" method="fromCallable"/>
    </service>
    <service id="config_builder.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ConfigBuilderCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id=".service_locator.O1JVEec"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.uri_generator" class="Symfony\Component\HttpKernel\Fragment\FragmentUriGenerator">
      <argument>/_fragment</argument>
      <argument type="service" id="uri_signer"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument type="service" id="esi" on-invalid="null"/>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/var/www/vhosts/neutral.eco/httpdocs</argument>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
        </service>
      </argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>about</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about the current project</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>/var/www/vhosts/neutral.eco/httpdocs</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
      <call method="setDescription">
        <argument>Install bundle's web assets under a public directory</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear the cache</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
      <call method="setDescription">
        <argument>Prune cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
      <call method="setDescription">
        <argument>Delete an item from a cache pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.validator_expression_language</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
      <call method="setDescription">
        <argument>List available cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
      <call method="setDescription">
        <argument>Warm up an empty cache</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the current configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the default configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
      <call method="setDescription">
        <argument>Display current services for an application</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
      <call method="setDescription">
        <argument>Ensure that arguments injected into services match type declarations</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
      <call method="setDescription">
        <argument>List classes/interfaces you can use for autowiring</argument>
      </call>
    </service>
    <service id="console.command.dotenv_debug" class="Symfony\Component\Dotenv\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>live</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs</argument>
      <call method="setName">
        <argument>debug:dotenv</argument>
      </call>
      <call method="setDescription">
        <argument>Lists all dotenv files with variables and values</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.9TcZ2i."/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
      <call method="setDescription">
        <argument>Display configured listeners for an application</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
      <call method="setDescription">
        <argument>Display current routes for an application</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
      <call method="setDescription">
        <argument>Help debug routes by simulating a path info match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/translations</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/templates</argument>
      <argument type="collection">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
      <call method="setDescription">
        <argument>Display translation messages information</argument>
      </call>
    </service>
    <service id="console.command.translation_extract" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>nl</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/translations</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/templates</argument>
      <argument type="collection">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:extract</argument>
      </call>
      <call method="setAliases">
        <argument type="collection">
          <argument>translation:update</argument>
        </argument>
      </call>
      <call method="setDescription">
        <argument>Extract missing translations keys from code to translation files.</argument>
      </call>
    </service>
    <service id="console.command.validator_debug" class="Symfony\Component\Validator\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="validator"/>
      <call method="setName">
        <argument>debug:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Display validation constraints for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_pull" class="Symfony\Component\Translation\Command\TranslationPullCommand">
      <tag name="console.command" command="translation:pull"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument>nl</argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:pull</argument>
      </call>
      <call method="setDescription">
        <argument>Pull translations from a given provider.</argument>
      </call>
    </service>
    <service id="console.command.translation_push" class="Symfony\Component\Translation\Command\TranslationPushCommand">
      <tag name="console.command" command="translation:push"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.reader"/>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:push</argument>
      </call>
      <call method="setDescription">
        <argument>Push translations to a given provider.</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Component\Translation\Command\XliffLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
      <call method="setDescription">
        <argument>Lint an XLIFF file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a YAML file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>App\CmsBundle\Type</argument>
        <argument>App\Trinity\NeutralBundle\Form</argument>
        <argument>FOS\OAuthServerBundle\Form\Type</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>App\CmsBundle\Form</argument>
      </argument>
      <argument type="collection">
        <argument>App\CmsBundle\Type\TrinityEntityType</argument>
        <argument>App\Trinity\NeutralBundle\Form\ConfigType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ColorType</argument>
        <argument>FOS\OAuthServerBundle\Form\Type\AuthorizeFormType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>App\CmsBundle\Form\CronTaskType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Nelmio\ApiDocBundle\Form\Extension\DocumentationExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
      <call method="setDescription">
        <argument>Display form type information</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
      <call method="setDescription">
        <argument>Set a secret in the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove a secret from the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
      <call method="setDescription">
        <argument>Generate new encryption keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
      <call method="setDescription">
        <argument>List all secrets</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
      <call method="setDescription">
        <argument>Decrypt all secrets and stores them in the local vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
      <call method="setDescription">
        <argument>Encrypt all local secrets to the vault</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>+KtA5hm7tY</argument>
      <argument>0</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>BWafw2ilmy</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>thCO9wETbI</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>EH0TuD3fXq</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>g4dGFIVTf9</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>0CAJN6eV0J</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Doctrine provider service</argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
      <deprecated package="symfony/framework-bundle" version="5.4">The "%service_id%" service inherits from "cache.adapter.doctrine" which is deprecated.</deprecated>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument type="abstract">PSR-6 provider service</argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.redis_tag_aware" class="Symfony\Component\Cache\Adapter\RedisTagAwareAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Memcached connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine_dbal" class="Symfony\Component\Cache\Adapter\DoctrineDbalAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_dbal_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">DBAL connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">PDO connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller">
      <argument>null</argument>
      <argument>true</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator"/>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="assets._default_package"/>
      <argument type="tagged_iterator" tag="assets.package" index-by="package" default-index-method="getDefaultPackageName" default-priority-method="getDefaultPackagePriority"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
      <argument type="service">
        <service class="string">
          <factory service="router.request_context" method="getBaseUrl"/>
        </service>
      </argument>
      <argument type="service">
        <service class="bool">
          <factory service="router.request_context" method="isSecure"/>
        </service>
      </argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument type="abstract">base path</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument type="abstract">base URLs</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument type="abstract">version</argument>
      <argument type="abstract">format</argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" abstract="true">
      <argument type="abstract">manifest path</argument>
      <argument type="service" id="http_client" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="assets.remote_json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\RemoteJsonManifestVersionStrategy" abstract="true">
      <argument type="abstract">manifest url</argument>
      <argument type="service" id="http_client"/>
      <deprecated package="symfony/framework-bundle" version="5.3">The "%service_id%" service is deprecated, use "assets.json_manifest_version_strategy" instead.</deprecated>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <tag name="monolog.logger" channel="http_client"/>
      <tag name="kernel.reset" method="reset" on_invalid="ignore"/>
      <tag name="http_client.client"/>
      <argument type="collection"/>
      <argument>6</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.http_client" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="psr18.http_client" class="Symfony\Component\HttpClient\Psr18Client">
      <argument type="service" id="http_client"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="Http\Client\HttpClient" class="Symfony\Component\HttpClient\HttplugClient">
      <argument type="service" id="http_client"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="http_client.abstract_retry_strategy" class="Symfony\Component\HttpClient\Retry\GenericRetryStrategy" abstract="true">
      <argument type="abstract">http codes</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
      <argument type="abstract">jitter</argument>
    </service>
    <service id="mailer.mailer" class="Symfony\Component\Mailer\Mailer">
      <argument type="service" id="mailer.transports"/>
      <argument>null</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="mailer.transports" class="Symfony\Component\Mailer\Transport\Transports">
      <argument type="collection">
        <argument key="main">%env(MAILER_DSN)%</argument>
      </argument>
      <factory service="mailer.transport_factory" method="fromStrings"/>
    </service>
    <service id="mailer.transport_factory" class="Symfony\Component\Mailer\Transport">
      <argument type="tagged_iterator" tag="mailer.transport_factory"/>
    </service>
    <service id="mailer.default_transport" class="Symfony\Component\Mailer\Transport\TransportInterface">
      <argument>%env(MAILER_DSN)%</argument>
      <factory service="mailer.transport_factory" method="fromString"/>
    </service>
    <service id="mailer.messenger.message_handler" class="Symfony\Component\Mailer\Messenger\MessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="mailer.transports"/>
    </service>
    <service id="mailer.envelope_listener" class="Symfony\Component\Mailer\EventListener\EnvelopeListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="mailer.message_logger_listener" class="Symfony\Component\Mailer\EventListener\MessageLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="mailer.transport_factory.abstract" class="Symfony\Component\Mailer\Transport\AbstractTransportFactory" abstract="true">
      <tag name="monolog.logger" channel="mailer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.null" class="Symfony\Component\Mailer\Transport\NullTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.sendmail" class="Symfony\Component\Mailer\Transport\SendmailTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.smtp" class="Symfony\Component\Mailer\Transport\Smtp\EsmtpTransportFactory">
      <tag name="mailer.transport_factory" priority="-100"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.native" class="Symfony\Component\Mailer\Transport\NativeTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="esi" class="Symfony\Component\HttpKernel\HttpCache\Esi"/>
    <service id="esi_listener" class="Symfony\Component\HttpKernel\EventListener\SurrogateListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="esi" on-invalid="ignore"/>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.z8i6jCx"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>nl</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
        <argument key="translation.loader.db" type="collection">
          <argument>db</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.af.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.af.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.be.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.be.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.bg.xlf</argument>
          </argument>
          <argument key="bs" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.bs.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.bs.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.bs.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.cs.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.cs.yml</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.de.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/oauth-server-bundle/Resources/translations/FOSOAuthServerBundle.de.yml</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.de.yml</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.en.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/oauth-server-bundle/Resources/translations/FOSOAuthServerBundle.en.yml</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.en.yml</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.es.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.es.yml</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.et.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.et.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.fa.xlf</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.fi.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.fr.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/oauth-server-bundle/Resources/translations/FOSOAuthServerBundle.fr.yml</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.fr.yml</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.hr.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.hr.yml</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.hu.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.hu.yml</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.hy.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.lt.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.mn.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.mn.xlf</argument>
          </argument>
          <argument key="my" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.my.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.my.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.my.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.nb.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.nl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/oauth-server-bundle/Resources/translations/FOSOAuthServerBundle.nl.yml</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.nl.yml</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.nn.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.pl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.pl.yml</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.ro.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.ro.yml</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.ru.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.ru.yml</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.sk.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.sk.yml</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.sl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/oauth-server-bundle/Resources/translations/FOSOAuthServerBundle.sl.yml</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.sq.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.sq.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.sv.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.sv.yml</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.th.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.th.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.tl.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.tr.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.tr.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.uk.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations/SchebTwoFactorBundle.uk.yml</argument>
          </argument>
          <argument key="uz" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.uz.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.uz.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.uz.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.vi.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations/security.zh_TW.xlf</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/validator/Resources/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-core/Resources/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/oauth-server-bundle/Resources/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/src/CmsBundle/Resources/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/framework-bundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/qipsius/tcpdf-bundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-bundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/rest-bundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/sensio/framework-extra-bundle/src/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/twig-bundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/nelmio/api-doc-bundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/doctrine/doctrine-bundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/doctrine/doctrine-migrations-bundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/mhujer/breadcrumbs-bundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/monolog-bundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/cocur/slugify/src/Bridge/Symfony/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/ApiBundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/sentry/sentry-symfony/src/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/BlogBundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/FormsBundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/SearchBundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/SliderBundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/twig/extra-bundle/translations</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/NeutralBundle/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>vendor/symfony/validator/Resources/translations</argument>
            <argument>vendor/symfony/form/Resources/translations</argument>
            <argument>vendor/symfony/security-core/Resources/translations</argument>
            <argument>vendor/friendsofsymfony/oauth-server-bundle/Resources/translations</argument>
            <argument>src/CmsBundle/Resources/translations</argument>
            <argument>vendor/scheb/2fa-bundle/Resources/translations</argument>
            <argument>translations</argument>
            <argument>vendor/symfony/framework-bundle/translations</argument>
            <argument>vendor/qipsius/tcpdf-bundle/translations</argument>
            <argument>vendor/symfony/security-bundle/translations</argument>
            <argument>vendor/friendsofsymfony/rest-bundle/translations</argument>
            <argument>vendor/sensio/framework-extra-bundle/src/translations</argument>
            <argument>vendor/symfony/twig-bundle/translations</argument>
            <argument>vendor/nelmio/api-doc-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-migrations-bundle/translations</argument>
            <argument>vendor/mhujer/breadcrumbs-bundle/translations</argument>
            <argument>vendor/symfony/monolog-bundle/translations</argument>
            <argument>vendor/cocur/slugify/src/Bridge/Symfony/translations</argument>
            <argument>src/Trinity/ApiBundle/translations</argument>
            <argument>vendor/sentry/sentry-symfony/src/translations</argument>
            <argument>src/Trinity/BlogBundle/translations</argument>
            <argument>src/Trinity/FormsBundle/translations</argument>
            <argument>src/Trinity/SearchBundle/translations</argument>
            <argument>src/Trinity/SliderBundle/translations</argument>
            <argument>vendor/twig/extra-bundle/translations</argument>
            <argument>src/Trinity/NeutralBundle/translations</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>nl</argument>
          <argument>nl</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yaml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
      <call method="addLoader">
        <argument>db</argument>
        <argument type="service" id="translation.loader.db"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.wSgjnB6.translation.warmer"/>
    </service>
    <service id="translation.provider_collection" class="Symfony\Component\Translation\Provider\TranslationProviderCollection">
      <argument type="collection"/>
      <factory service="translation.provider_collection_factory" method="fromConfig"/>
    </service>
    <service id="translation.provider_collection_factory" class="Symfony\Component\Translation\Provider\TranslationProviderCollectionFactory">
      <argument type="tagged_iterator" tag="translation.provider_factory"/>
      <argument type="collection"/>
    </service>
    <service id="translation.provider_factory.null" class="Symfony\Component\Translation\Provider\NullProviderFactory">
      <tag name="translation.provider_factory"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter">
      <argument>null</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="container.hot_path"/>
      <tag name="event_dispatcher">event_dispatcher.dispatcher</tag>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="app.user_locale_listener"/>
          <argument>onInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="app.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="fos_rest.format_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>34</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.failure</argument>
        <argument type="collection">
          <argument type="service_closure" id="account.security_listener_failure"/>
          <argument>onAuthenticationFailure</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="account.security_listener"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\ConsoleListener"/>
          <argument>onConsoleCommand</argument>
        </argument>
        <argument>%sentry.listener_priorities.console%</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\ErrorListener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>%sentry.listener_priorities.console_error%</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\ErrorListener"/>
          <argument>onException</argument>
        </argument>
        <argument>%sentry.listener_priorities.request_error%</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\RequestListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>%sentry.listener_priorities.request%</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\RequestListener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>%sentry.listener_priorities.request%</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\SubRequestListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>%sentry.listener_priorities.sub_request%</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Sentry\SentryBundle\EventListener\SubRequestListener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>%sentry.listener_priorities.sub_request%</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="app.locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="app.locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>removeCspHeader</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.envelope_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.message_logger_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="esi_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Notifier\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="notifier.logger_notification_listener"/>
          <argument>onNotification</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.authentication.kernel_exception_listener.two_factor.admin_secured_area"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>2</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.authentication.form_listener.two_factor.admin_secured_area"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.authentication.provider_preparation_listener.two_factor.admin_secured_area"/>
          <argument>onLogin</argument>
        </argument>
        <argument>9223372036854775807</argument>
      </call>
      <call method="addListener">
        <argument>scheb_two_factor.authentication.require</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.authentication.provider_preparation_listener.two_factor.admin_secured_area"/>
          <argument>onAccessDenied</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>scheb_two_factor.authentication.form</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.authentication.provider_preparation_listener.two_factor.admin_secured_area"/>
          <argument>onTwoFactorForm</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.authentication.provider_preparation_listener.two_factor.admin_secured_area"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="fos_rest.view_response_listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>30</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="twig.mailer.message_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.authentication_success_event_suppressor"/>
          <argument>onLogin</argument>
        </argument>
        <argument>9223372036854775806</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.check_two_factor_code"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.suppress_remember_me"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>-63</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.trusted_cookie_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.trusted_device"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.check_backup_code"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.db"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>live</argument>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>live</argument>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>live</argument>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>live</argument>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>live</argument>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.XWmhzGa"/>
      <argument>live</argument>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.OSH1YoD.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>nl</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="addExpressionLanguageProvider">
        <argument type="service" id="router.expression_language_provider"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext">
      <argument></argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
      <call method="setParameter">
        <argument>_functions</argument>
        <argument type="service" id="router.expression_language_provider" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\Routing\RequestContext" method="fromUri"/>
    </service>
    <service id="router.expression_language_provider" class="Symfony\Component\Routing\Matcher\ExpressionLanguageProvider">
      <tag name="routing.expression_language_provider"/>
      <argument type="service" id=".service_locator.Kr.dDlB"/>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.oCg4uHe.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/var/www/vhosts/neutral.eco/httpdocs</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
      <argument>live</argument>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\PsrCachedReader" public="true">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service">
        <service class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
      </argument>
      <argument>true</argument>
      <argument type="service_closure" id="annotations.cache_adapter"/>
    </service>
    <service id="annotations.filesystem_cache_adapter" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument></argument>
      <argument>0</argument>
      <argument type="abstract">Cache-Directory</argument>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\Psr6\DoctrineProvider">
      <argument type="service" id="annotations.filesystem_cache_adapter"/>
      <factory class="Doctrine\Common\Cache\Psr6\DoctrineProvider" method="wrap"/>
      <deprecated package="symfony/framework-bundle" version="5.4">"%service_id% is deprecated"</deprecated>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache_adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter">
      <tag name="container.hot_path"/>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="annotations.cache" class="Doctrine\Common\Cache\Psr6\DoctrineProvider">
      <argument type="service" id="annotations.cache_adapter"/>
      <factory class="Doctrine\Common\Cache\Psr6\DoctrineProvider" method="wrap"/>
      <deprecated package="symfony/framework-bundle" version="5.4">"%service_id% is deprecated"</deprecated>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>3</argument>
      <argument>2</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/config/secrets/%env(default:kernel.environment:APP_RUNTIME_ENV)%</argument>
      <argument type="service" id="secrets.decryption_key" on-invalid="ignore"/>
    </service>
    <service id="secrets.decryption_key" class="Symfony\Component\String\LazyString">
      <argument type="service" id="container.getenv"/>
      <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
      <factory class="Symfony\Component\String\LazyString" method="fromCallable"/>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/var/www/vhosts/neutral.eco/httpdocs/.env.live.local</argument>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="collection">
        <argument type="service" id="serializer.denormalizer.unwrapping"/>
        <argument type="service" id="fos_rest.serializer.form_error_normalizer"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="serializer.normalizer.uid"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.mime_message"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.form_error"/>
        <argument type="service" id="serializer.normalizer.backed_enum"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.mime_message" class="Symfony\Component\Serializer\Normalizer\MimeMessageNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="service" id="serializer.normalizer.property"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer">
      <tag name="serializer.normalizer" priority="-900"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument>true</argument>
    </service>
    <service id="serializer.denormalizer.unwrapping" class="Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer">
      <tag name="serializer.normalizer" priority="1000"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="serializer.normalizer.uid" class="Symfony\Component\Serializer\Normalizer\UidNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
    </service>
    <service id="serializer.normalizer.form_error" class="Symfony\Component\Serializer\Normalizer\FormErrorNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.normalizer.property" class="Symfony\Component\Serializer\Normalizer\PropertyNormalizer">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader">
            <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory">
      <argument type="service" id="serializer.mapping.chain_loader"/>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader">
            <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
          </service>
        </argument>
      </argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface">
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer">
      <argument type="service" id="serializer"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
        </service>
      </argument>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="serializer.normalizer.backed_enum" class="Symfony\Component\Serializer\Normalizer\BackedEnumNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="lock.store.combined.abstract" class="Symfony\Component\Lock\Store\CombinedStore" abstract="true">
      <argument type="abstract">List of stores</argument>
      <argument type="service" id="lock.strategy.majority"/>
    </service>
    <service id="lock.strategy.majority" class="Symfony\Component\Lock\Strategy\ConsensusStrategy"/>
    <service id="lock.factory.abstract" class="Symfony\Component\Lock\LockFactory" abstract="true">
      <tag name="monolog.logger" channel="lock"/>
      <argument type="abstract">Store</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.lock" on-invalid="ignore"/>
      </call>
    </service>
    <service id=".lock.default.store.TTEh_gT" class="Symfony\Component\Lock\PersistingStoreInterface">
      <argument>%env(LOCK_DSN)%</argument>
      <factory class="Symfony\Component\Lock\Store\StoreFactory" method="createStore"/>
    </service>
    <service id="lock.default.factory" class="Symfony\Component\Lock\LockFactory">
      <argument type="service" id=".lock.default.store.TTEh_gT"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.lock" on-invalid="ignore"/>
      </call>
    </service>
    <service id="lock.default" class="Symfony\Component\Lock\Lock">
      <argument>default</argument>
      <factory service="lock.default.factory" method="createLock"/>
      <deprecated package="symfony/framework-bundle" version="5.2">The "%service_id%" service is deprecated, use "lock.default.factory" instead.</deprecated>
    </service>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id=".session.do-not-use" class="Symfony\Component\HttpFoundation\Session\Session">
      <factory service="session.factory" method="createSession"/>
    </service>
    <service id="session.factory" class="Symfony\Component\HttpFoundation\Session\SessionFactory">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="session.storage.factory.service"/>
      <argument type="collection">
        <argument type="service" id="session_listener"/>
        <argument>onSessionUsage</argument>
      </argument>
    </service>
    <service id="session.storage.factory.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorageFactory">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>false</argument>
    </service>
    <service id="session.storage.factory.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorageFactory">
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>false</argument>
    </service>
    <service id="session.storage.factory.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorageFactory">
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
    </service>
    <service id="session.storage.factory.service" class="Symfony\Bundle\FrameworkBundle\Session\ServiceSessionFactory">
      <argument type="service" id="session.storage.native"/>
      <deprecated package="symfony/framework-bundle" version="5.3">The "%service_id%" service is deprecated, use "session.storage.factory.native", "session.storage.factory.php_bridge" or "session.storage.factory.mock_file" instead.</deprecated>
    </service>
    <service id=".session.deprecated" class="Symfony\Component\HttpFoundation\Session\SessionInterface">
      <factory method="getSession">
        <service class="Symfony\Bundle\FrameworkBundle\Session\DeprecatedSessionFactory">
          <argument type="service" id="request_stack"/>
        </service>
      </factory>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
      <deprecated package="symfony/framework-bundle" version="5.3">The "%service_id%" service is deprecated, create your own "session.storage.factory" instead.</deprecated>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
      <deprecated package="symfony/framework-bundle" version="5.3">The "%service_id%" service is deprecated, use "session.storage.factory.native" instead.</deprecated>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
      <deprecated package="symfony/framework-bundle" version="5.3">The "%service_id%" service is deprecated, use "session.storage.factory.php_bridge" instead.</deprecated>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag">
      <factory service=".session.do-not-use" method="getFlashBag"/>
      <deprecated package="symfony/framework-bundle" version="5.1">The "%service_id%" service is deprecated, use "$session-&gt;getFlashBag()" instead.</deprecated>
    </service>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag">
      <argument>attributes</argument>
      <factory service=".session.do-not-use" method="getBag"/>
      <deprecated package="symfony/framework-bundle" version="5.1">The "%service_id%" service is deprecated, use "$session-&gt;getAttributeBag()" instead.</deprecated>
    </service>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
      <deprecated package="symfony/framework-bundle" version="5.3">The "%service_id%" service is deprecated, use "session.storage.factory.mock_file" instead.</deprecated>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
          <argument>/var/www/vhosts/neutral.eco/httpdocs/var/sessions/live</argument>
        </service>
      </argument>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler">
      <argument type="abstract">A string or a connection object</argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.ZOHvDA0"/>
      <argument>true</argument>
      <argument>%session.storage.options%</argument>
    </service>
    <service id="session.marshaller" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\IdentityMarshaller"/>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\ResolvedFormTypeFactory"/>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension">
      <argument type="service" id=".service_locator.zPyf80C"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="nelmio_api_doc.form.documentation_extension"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <tag name="form.type"/>
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type.color" class="Symfony\Component\Form\Extension\Core\Type\ColorType">
      <tag name="form.type"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
      <argument>true</argument>
      <argument type="service" id="twig.form.renderer" on-invalid="ignore"/>
      <argument type="service" id="translator.default" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="true">
      <tag name="container.private" package="symfony/framework-bundle" version="5.2"/>
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/form/Resources/config/validation.xml</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/oauth-server-bundle/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="addYamlMappings">
        <argument type="collection">
          <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/SearchBundle/config/validation.yml</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/NeutralBundle/Resources/config/validation.yml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument>true</argument>
      </call>
      <call method="setDoctrineAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter">
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory">
      <argument type="service" id=".service_locator.l6ELYLY"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="validator.expression_language" on-invalid="null"/>
    </service>
    <service id="validator.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <argument type="service" id="cache.validator_expression_language" on-invalid="null"/>
    </service>
    <service id="cache.validator_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>Zany2vMSl8</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument type="service" id="http_client" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="notifier" class="Symfony\Component\Notifier\Notifier">
      <argument type="service" id=".service_locator.UkE3SaZ"/>
      <argument type="service" id="notifier.channel_policy" on-invalid="ignore"/>
      <call method="addAdminRecipient">
        <argument type="service" id="notifier.admin_recipient.0"/>
      </call>
    </service>
    <service id="notifier.channel_policy" class="Symfony\Component\Notifier\Channel\ChannelPolicy">
      <argument type="collection">
        <argument key="urgent" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="high" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="medium" type="collection">
          <argument>email</argument>
        </argument>
        <argument key="low" type="collection">
          <argument>email</argument>
        </argument>
      </argument>
    </service>
    <service id="notifier.channel.browser" class="Symfony\Component\Notifier\Channel\BrowserChannel">
      <tag name="notifier.channel" channel="browser"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="notifier.channel.chat" class="Symfony\Component\Notifier\Channel\ChatChannel">
      <tag name="notifier.channel" channel="chat"/>
      <argument type="service" id="chatter.transports"/>
      <argument>null</argument>
    </service>
    <service id="notifier.channel.sms" class="Symfony\Component\Notifier\Channel\SmsChannel">
      <tag name="notifier.channel" channel="sms"/>
      <argument type="service" id="texter.transports"/>
      <argument>null</argument>
    </service>
    <service id="notifier.channel.email" class="Symfony\Component\Notifier\Channel\EmailChannel">
      <tag name="notifier.channel" channel="email"/>
      <argument type="service" id="mailer.transports"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="notifier.channel.push" class="Symfony\Component\Notifier\Channel\PushChannel">
      <tag name="notifier.channel" channel="push"/>
      <argument type="service" id="texter.transports"/>
      <argument>null</argument>
    </service>
    <service id="notifier.monolog_handler" class="Symfony\Bridge\Monolog\Handler\NotifierHandler">
      <argument type="service" id="notifier"/>
    </service>
    <service id="notifier.failed_message_listener" class="Symfony\Component\Notifier\EventListener\SendFailedMessageToNotifierListener">
      <argument type="service" id="notifier"/>
    </service>
    <service id="chatter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="chatter.transport_factory" method="fromStrings"/>
    </service>
    <service id="chatter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="chatter.transport_factory"/>
    </service>
    <service id="chatter.messenger.chat_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\ChatMessage"/>
      <argument type="service" id="chatter.transports"/>
    </service>
    <service id="texter.transports" class="Symfony\Component\Notifier\Transport\Transports">
      <argument type="collection"/>
      <factory service="texter.transport_factory" method="fromStrings"/>
    </service>
    <service id="texter.transport_factory" class="Symfony\Component\Notifier\Transport">
      <argument type="tagged_iterator" tag="texter.transport_factory"/>
    </service>
    <service id="texter.messenger.sms_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\SmsMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="texter.messenger.push_handler" class="Symfony\Component\Notifier\Messenger\MessageHandler">
      <tag name="messenger.message_handler" handles="Symfony\Component\Notifier\Message\PushMessage"/>
      <argument type="service" id="texter.transports"/>
    </service>
    <service id="notifier.logger_notification_listener" class="Symfony\Component\Notifier\EventListener\NotificationLoggerListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="notifier.transport_factory.abstract" class="Symfony\Component\Notifier\Transport\AbstractTransportFactory" abstract="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
    </service>
    <service id="notifier.transport_factory.null" class="Symfony\Component\Notifier\Transport\NullTransportFactory">
      <tag name="chatter.transport_factory"/>
      <tag name="texter.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client" on-invalid="ignore"/>
    </service>
    <service id="notifier.admin_recipient.0" class="Symfony\Component\Notifier\Recipient\Recipient">
      <argument>devs@beyonit.nl</argument>
      <argument></argument>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="qipsius.tcpdf" class="Qipsius\TCPDFBundle\Controller\TCPDFController">
      <file>/var/www/vhosts/neutral.eco/httpdocs/vendor/tecnickcom/tcpdf/tcpdf.php</file>
      <argument>TCPDF</argument>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <tag name="container.private" package="symfony/security-bundle" version="5.3"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage" public="true">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <tag name="container.private" package="symfony/security-bundle" version="5.3"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.LcVn9Hr"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security">
      <argument type="service" id=".service_locator.nLgZj7R"/>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory">
      <argument type="collection">
        <argument key="App\CmsBundle\Entity\User" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\NativePasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>null</argument>
            <argument>null</argument>
            <argument>null</argument>
            <argument>2y</argument>
          </argument>
        </argument>
      </argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use "security.password_hasher_factory" instead.</deprecated>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder">
      <argument type="service" id="security.encoder_factory.generic"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use "security.user_password_hasher" instead.</deprecated>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\InMemoryUserChecker"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage">
      <argument type="service" id="cache.security_expression_language" on-invalid="null"/>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="scheb_two_factor.security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="scheb_two_factor.security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.impersonate_url_generator" class="Symfony\Component\Security\Http\Impersonate\ImpersonateUrlGenerator">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap">
      <argument type="service" id=".service_locator.gArUn4e"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.oauth_token" type="service" id=".security.request_matcher.0Awr3sc"/>
        <argument key="security.firewall.map.context.api" type="service" id=".security.request_matcher.p4VlLPC"/>
        <argument key="security.firewall.map.context.admin_secured_area" type="service" id=".security.request_matcher.B3ldH_a"/>
        <argument key="security.firewall.map.context.user_secured_area" type="service" id=".security.request_matcher.nHrRj9a"/>
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.main">null</argument>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument type="abstract">LogoutListener</argument>
      <argument type="abstract">FirewallConfig</argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" abstract="true">
      <argument type="abstract">name</argument>
      <argument type="abstract">user_checker</argument>
      <argument type="abstract">request_matcher</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>admin_secured_area</argument>
        <argument>/admin/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>primary_auth</argument>
      </call>
      <call method="registerListener">
        <argument>user_secured_area</argument>
        <argument>/portal/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>primary_auth</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" abstract="true">
      <argument type="abstract">firewall</argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" abstract="true">
      <argument type="abstract">security.ldap.ldap</argument>
      <argument type="abstract">base dn</argument>
      <argument type="abstract">search dn</argument>
      <argument type="abstract">search password</argument>
      <argument type="abstract">default_roles</argument>
      <argument type="abstract">uid key</argument>
      <argument type="abstract">filter</argument>
      <argument type="abstract">password_attribute</argument>
      <argument type="abstract">extra_fields (email etc)</argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>{^https://%%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>qOHoHqM3Zh</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="security.password_hasher_factory" class="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory">
      <argument type="collection">
        <argument key="App\CmsBundle\Entity\User" type="collection">
          <argument key="class">Symfony\Component\PasswordHasher\Hasher\NativePasswordHasher</argument>
          <argument key="arguments" type="collection">
            <argument>null</argument>
            <argument>null</argument>
            <argument>null</argument>
            <argument>2y</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_hasher" class="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher">
      <argument type="service" id="security.password_hasher_factory"/>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint">
      <deprecated package="symfony/security-bundle" version="5.4">The "%service_id%" service is deprecated, the logic is contained in the authenticators.</deprecated>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint">
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
      <deprecated package="symfony/security-bundle" version="5.4">The "%service_id%" service is deprecated, the logic is integrated directly in "security.channel_listener".</deprecated>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap">
      <call method="add">
        <argument type="service" id=".security.request_matcher.rzCRKru"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_2FA_IN_PROGRESS</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.lnesEJh"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.K__366D"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.hjfGJfd"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.9czg417"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.5dJADCx"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.v5R7GXW"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.yqVskfj"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.lhMYeNx"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.muPyjRU"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.G_Y0sic"/>
        <argument type="collection">
          <argument>ROLE_STUDENT</argument>
          <argument>ROLE_TEACHER</argument>
          <argument>ROLE_OWNER</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.cRNYaJ1"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.PhQgZ9B"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.in_memory"/>
        <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      </argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="scheb_two_factor.security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">event dispatcher</argument>
      <argument type="collection"/>
    </service>
    <service id="security.logout.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener" abstract="true"/>
    <service id="security.logout.listener.cookie_clearing" class="Symfony\Component\Security\Http\EventListener\CookieClearingLogoutListener" abstract="true"/>
    <service id="security.logout.listener.default" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">target url</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" abstract="true">
      <argument type="abstract">The custom success handler service</argument>
      <argument type="collection"/>
      <argument type="abstract">Provider-shared Key</argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" abstract="true">
      <argument type="abstract">The custom failure handler service</argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="scheb_two_factor.security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>/</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="abstract">Provider Key</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="abstract">Catch exception flag set in RememberMeFactory</argument>
      <argument type="service" id="security.authentication.session_strategy"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" abstract="true">
      <argument type="abstract">User Checker</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider"/>
    <service id="security.authentication.rememberme.services.abstract" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument type="abstract">Shared Token Key</argument>
      <argument type="abstract">Shared Provider Key</argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" abstract="true">
      <argument type="collection"/>
      <argument type="abstract">Shared Token Key</argument>
      <argument type="abstract">Shared Provider Key</argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" abstract="true">
      <argument type="collection"/>
      <argument type="abstract">Shared Token Key</argument>
      <argument type="abstract">Shared Provider Key</argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.guard.api.two_factor_decorator"/>
        <argument type="service" id="security.authentication.provider.fos_oauth_server.api.two_factor_decorator"/>
        <argument type="service" id="security.authentication.provider.anonymous.api.two_factor_decorator"/>
        <argument type="service" id="security.authentication.provider.guard.admin_secured_area.two_factor_decorator"/>
        <argument type="service" id="security.authentication.provider.dao.admin_secured_area.two_factor_decorator"/>
        <argument type="service" id="security.authentication.provider.two_factor.admin_secured_area"/>
        <argument type="service" id="security.authentication.provider.rememberme.admin_secured_area.two_factor_decorator"/>
        <argument type="service" id="security.authentication.provider.anonymous.admin_secured_area.two_factor_decorator"/>
        <argument type="service" id="security.authentication.provider.guard.user_secured_area.two_factor_decorator"/>
        <argument type="service" id="security.authentication.provider.dao.user_secured_area.two_factor_decorator"/>
        <argument type="service" id="security.authentication.provider.rememberme.user_secured_area.two_factor_decorator"/>
        <argument type="service" id="security.authentication.provider.anonymous.user_secured_area.two_factor_decorator"/>
        <argument type="service" id="security.authentication.provider.anonymous.main.two_factor_decorator"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="abstract">Key</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider">
      <argument type="abstract">Key</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">x509 user</argument>
      <argument type="abstract">x509 credentials</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">Failure handler</argument>
      <argument type="abstract">Success Handler</argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setTranslator">
        <argument type="service" id="translator.default" on-invalid="ignore"/>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">REMOTE_USER server env var</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">Entry Point</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" abstract="true">
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument>true</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" abstract="true">
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">UserChecker</argument>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">LDAP</argument>
      <argument type="abstract">Base DN</argument>
      <argument>true</argument>
      <argument type="abstract">search dn</argument>
      <argument type="abstract">search password</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" abstract="true">
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">UserChecker</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
      <argument type="service" id="security.impersonate_url_generator" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection">
        <argument>api</argument>
      </argument>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" abstract="true">
      <argument type="abstract">Authenticators</argument>
      <argument type="abstract">User Provider</argument>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">User Checker</argument>
      <argument type="service" id="security.user_password_hasher"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="abstract">Provider-shared Key</argument>
      <argument type="abstract">Authenticators</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.command.debug_firewall" class="Symfony\Bundle\SecurityBundle\Command\DebugFirewallCommand">
      <tag name="console.command" command="debug:firewall"/>
      <tag name="container.no_preload"/>
      <argument>%security.firewalls%</argument>
      <argument type="service" id=".service_locator.gArUn4e"/>
      <argument type="service" id=".service_locator.9TcZ2i."/>
      <argument type="collection"/>
      <argument>false</argument>
      <call method="setName">
        <argument>debug:firewall</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about your security firewall(s)</argument>
      </call>
    </service>
    <service id="security.user.provider.concrete.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider">
      <argument type="collection"/>
    </service>
    <service id="security.user.provider.concrete.app_user_provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider">
      <argument type="service" id="doctrine"/>
      <argument>App\CmsBundle\Entity\User</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.user_providers" class="Symfony\Component\Security\Core\User\ChainUserProvider">
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.in_memory"/>
        <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      </argument>
    </service>
    <service id="security.firewall.map.config.oauth_token" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>oauth_token</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.0Awr3sc</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.0Awr3sc" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/oauth/v2/token</argument>
    </service>
    <service id="security.firewall.map.context.oauth_token" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.oauth_token"/>
    </service>
    <service id="security.firewall.map.config.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>api</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.p4VlLPC</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.app_user_provider</argument>
      <argument>null</argument>
      <argument>fos_oauth_server.security.entry_point</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>guard</argument>
        <argument>fos_oauth</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.p4VlLPC" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/api</argument>
    </service>
    <service id="security.event_dispatcher.api" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.api">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="app.user_locale_listener"/>
          <argument>onInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="account.security_listener"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.authentication.provider_preparation_listener.two_factor.admin_secured_area"/>
          <argument>onLogin</argument>
        </argument>
        <argument>9223372036854775807</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.authentication_success_event_suppressor"/>
          <argument>onLogin</argument>
        </argument>
        <argument>9223372036854775806</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.check_two_factor_code"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.suppress_remember_me"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>-63</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.trusted_device"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.check_backup_code"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.authentication.listener.guard.api" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener">
      <tag name="security.remember_me_aware" id="api" provider="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>api</argument>
      <argument type="iterator">
        <argument type="service" id="App\CmsBundle\Security\AppUserAuthenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.listener.fos_oauth_server.api" class="FOS\OAuthServerBundle\Security\Firewall\OAuthListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="fos_oauth_server.server"/>
    </service>
    <service id="security.authentication.listener.anonymous.api" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.exception_listener.api" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="scheb_two_factor.security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api</argument>
      <argument type="service" id="fos_oauth_server.security.entry_point"/>
      <argument>/</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.guard.api"/>
        <argument type="service" id="security.authentication.listener.fos_oauth_server.api"/>
        <argument type="service" id="security.authentication.listener.anonymous.api"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.api"/>
    </service>
    <service id="security.firewall.map.config.admin_secured_area" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>admin_secured_area</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.B3ldH_a</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.app_user_provider</argument>
      <argument>primary_auth</argument>
      <argument>security.authentication.form_entry_point.admin_secured_area</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>switch_user</argument>
        <argument>guard</argument>
        <argument>form_login</argument>
        <argument>two_factor</argument>
        <argument>remember_me</argument>
        <argument>anonymous</argument>
      </argument>
      <argument type="collection">
        <argument key="parameter">_switch_user</argument>
        <argument key="role">ROLE_ALLOWED_TO_SWITCH</argument>
      </argument>
    </service>
    <service id=".security.request_matcher.B3ldH_a" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/admin</argument>
    </service>
    <service id="security.event_dispatcher.admin_secured_area" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.admin_secured_area">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.default.admin_secured_area"/>
          <argument>onLogout</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.session.admin_secured_area"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.remember_me.admin_secured_area"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="app.user_locale_listener"/>
          <argument>onInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="account.security_listener"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.authentication.provider_preparation_listener.two_factor.admin_secured_area"/>
          <argument>onLogin</argument>
        </argument>
        <argument>9223372036854775807</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.authentication_success_event_suppressor"/>
          <argument>onLogin</argument>
        </argument>
        <argument>9223372036854775806</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.check_two_factor_code"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.suppress_remember_me"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>-63</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.trusted_device"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.check_backup_code"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener">
      <tag name="security.remember_me_aware" id="admin_secured_area" provider="none"/>
      <tag name="security.remember_me_aware" id="user_secured_area" provider="none"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.in_memory"/>
        <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      </argument>
      <argument>primary_auth</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="scheb_two_factor.security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
      <call method="setRememberMeServices">
        <argument type="service" id="security.authentication.rememberme.services.simplehash.admin_secured_area.two_factor_decorator"/>
      </call>
      <call method="setRememberMeServices">
        <argument type="service" id="security.authentication.rememberme.services.simplehash.user_secured_area.two_factor_decorator"/>
      </call>
    </service>
    <service id="security.logout_listener.admin_secured_area" class="Symfony\Component\Security\Http\Firewall\LogoutListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.event_dispatcher.admin_secured_area"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/admin/logout</argument>
      </argument>
    </service>
    <service id="security.logout.listener.default.admin_secured_area" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.admin_secured_area"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/admin</argument>
    </service>
    <service id="security.logout.listener.session.admin_secured_area" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.admin_secured_area"/>
    </service>
    <service id="security.authentication.listener.guard.admin_secured_area" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener">
      <tag name="security.remember_me_aware" id="admin_secured_area" provider="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>admin_secured_area</argument>
      <argument type="iterator">
        <argument type="service" id="App\CmsBundle\Security\AppUserAuthenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <call method="setRememberMeServices">
        <argument type="service" id="security.authentication.rememberme.services.simplehash.admin_secured_area.two_factor_decorator"/>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.success_handler.admin_secured_area.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="use_referer">true</argument>
          <argument key="login_path">/admin/login</argument>
          <argument key="default_target_path">/admin</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="target_path_parameter">_target_path</argument>
        </argument>
      </call>
      <call method="setFirewallName">
        <argument>admin_secured_area</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.admin_secured_area.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/admin/login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.admin_secured_area" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener">
      <tag name="security.remember_me_aware" id="admin_secured_area" provider="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin_secured_area</argument>
      <argument type="service" id="security.authentication.success_handler.admin_secured_area.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.admin_secured_area.form_login"/>
      <argument type="collection">
        <argument key="login_path">/admin/login</argument>
        <argument key="check_path">/admin/login_check</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="enable_csrf">false</argument>
        <argument key="post_only">true</argument>
        <argument key="form_only">false</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>null</argument>
      <call method="setRememberMeServices">
        <argument type="service" id="security.authentication.rememberme.services.simplehash.admin_secured_area.two_factor_decorator"/>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.form_entry_point.admin_secured_area" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/admin/login</argument>
      <argument>false</argument>
    </service>
    <service id="security.firewall_config.two_factor.admin_secured_area" class="Scheb\TwoFactorBundle\Security\TwoFactor\TwoFactorFirewallConfig">
      <tag name="scheb_two_factor.firewall_config" firewall="admin_secured_area"/>
      <argument type="collection">
        <argument key="auth_form_path">admin_2fa_login</argument>
        <argument key="check_path">admin_2fa_login_check</argument>
        <argument key="post_only">false</argument>
        <argument key="prepare_on_login">true</argument>
        <argument key="auth_code_parameter_name">_auth_code</argument>
        <argument key="trusted_parameter_name">_trusted</argument>
        <argument key="remember_me_sets_trusted">true</argument>
        <argument key="provider">app_user_provider</argument>
        <argument key="always_use_default_target_path">false</argument>
        <argument key="default_target_path">/</argument>
        <argument key="success_handler">null</argument>
        <argument key="failure_handler">null</argument>
        <argument key="authentication_required_handler">null</argument>
        <argument key="multi_factor">false</argument>
        <argument key="prepare_on_access_denied">false</argument>
        <argument key="enable_csrf">false</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">two_factor</argument>
      </argument>
      <argument>admin_secured_area</argument>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="scheb_two_factor.security.request_data_reader"/>
    </service>
    <service id="security.authentication.success_handler.two_factor.admin_secured_area" class="Scheb\TwoFactorBundle\Security\Http\Authentication\DefaultAuthenticationSuccessHandler">
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.firewall_config.two_factor.admin_secured_area"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler.two_factor.admin_secured_area" class="Scheb\TwoFactorBundle\Security\Http\Authentication\DefaultAuthenticationFailureHandler">
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.firewall_config.two_factor.admin_secured_area"/>
    </service>
    <service id="security.authentication.authentication_required_handler.two_factor.admin_secured_area" class="Scheb\TwoFactorBundle\Security\Http\Authentication\DefaultAuthenticationRequiredHandler">
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.firewall_config.two_factor.admin_secured_area"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.kernel_exception_listener.two_factor.admin_secured_area" class="Scheb\TwoFactorBundle\Security\Http\Firewall\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <argument>admin_secured_area</argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.authentication_required_handler.two_factor.admin_secured_area"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.authentication.access_listener.two_factor.admin_secured_area" class="Scheb\TwoFactorBundle\Security\Http\Firewall\TwoFactorAccessListener">
      <tag name="scheb_two_factor.access_listener" firewall="admin_secured_area"/>
      <argument type="service" id="security.firewall_config.two_factor.admin_secured_area"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="scheb_two_factor.security.access.access_decider"/>
    </service>
    <service id="security.authentication.form_listener.two_factor.admin_secured_area" class="Scheb\TwoFactorBundle\Security\TwoFactor\Event\TwoFactorFormListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall_config.two_factor.admin_secured_area"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.authentication.provider_preparation_listener.two_factor.admin_secured_area" class="Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderPreparationListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="scheb_two_factor.provider_registry"/>
      <argument type="service" id="scheb_two_factor.provider_preparation_recorder"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument>admin_secured_area</argument>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.provider.two_factor.admin_secured_area" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\TwoFactorAuthenticationProvider">
      <argument type="service" id="security.firewall_config.two_factor.admin_secured_area"/>
      <argument type="service" id="scheb_two_factor.provider_registry"/>
      <argument type="service" id="scheb_two_factor.default_backup_code_manager" on-invalid="null"/>
      <argument type="service" id="scheb_two_factor.provider_preparation_recorder"/>
    </service>
    <service id="security.authentication.listener.two_factor.admin_secured_area" class="Scheb\TwoFactorBundle\Security\Http\Firewall\TwoFactorListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.firewall_config.two_factor.admin_secured_area"/>
      <argument type="service" id="security.authentication.success_handler.two_factor.admin_secured_area"/>
      <argument type="service" id="security.authentication.failure_handler.two_factor.admin_secured_area"/>
      <argument type="service" id="security.authentication.authentication_required_handler.two_factor.admin_secured_area"/>
      <argument type="service" id="scheb_two_factor.null_csrf_token_manager"/>
      <argument type="service" id="scheb_two_factor.default_trusted_device_manager" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="scheb_two_factor.default_token_factory"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.rememberme.admin_secured_area" class="Symfony\Component\Security\Http\Firewall\RememberMeListener">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme.services.simplehash.admin_secured_area.two_factor_decorator"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>true</argument>
      <argument type="service" id="security.authentication.session_strategy"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.logout.listener.remember_me.admin_secured_area" class="Symfony\Component\Security\Http\EventListener\RememberMeLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.admin_secured_area"/>
      <argument type="service" id="security.authentication.rememberme.services.simplehash.admin_secured_area.two_factor_decorator"/>
    </service>
    <service id="security.authentication.listener.anonymous.admin_secured_area" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.switchuser_listener.admin_secured_area" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>admin_secured_area</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.exception_listener.admin_secured_area" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="scheb_two_factor.security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin_secured_area</argument>
      <argument type="service" id="security.authentication.form_entry_point.admin_secured_area"/>
      <argument>/</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.admin_secured_area" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.guard.admin_secured_area"/>
        <argument type="service" id="security.authentication.listener.form.admin_secured_area"/>
        <argument type="service" id="security.authentication.listener.two_factor.admin_secured_area"/>
        <argument type="service" id="security.authentication.listener.rememberme.admin_secured_area"/>
        <argument type="service" id="security.authentication.listener.anonymous.admin_secured_area"/>
        <argument type="service" id="security.authentication.switchuser_listener.admin_secured_area"/>
        <argument type="service" id="security.authentication.access_listener.two_factor.admin_secured_area"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.admin_secured_area"/>
      <argument type="service" id="security.logout_listener.admin_secured_area"/>
      <argument type="service" id="security.firewall.map.config.admin_secured_area"/>
    </service>
    <service id="security.firewall.map.config.user_secured_area" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>user_secured_area</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.nHrRj9a</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.app_user_provider</argument>
      <argument>primary_auth</argument>
      <argument>security.authentication.form_entry_point.user_secured_area</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>switch_user</argument>
        <argument>guard</argument>
        <argument>form_login</argument>
        <argument>remember_me</argument>
        <argument>anonymous</argument>
      </argument>
      <argument type="collection">
        <argument key="parameter">_switch_user</argument>
        <argument key="role">ROLE_ALLOWED_TO_SWITCH</argument>
      </argument>
    </service>
    <service id=".security.request_matcher.nHrRj9a" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/portal</argument>
    </service>
    <service id="security.event_dispatcher.user_secured_area" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.user_secured_area">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.default.user_secured_area"/>
          <argument>onLogout</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.session.user_secured_area"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.remember_me.user_secured_area"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="app.user_locale_listener"/>
          <argument>onInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="account.security_listener"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.authentication.provider_preparation_listener.two_factor.admin_secured_area"/>
          <argument>onLogin</argument>
        </argument>
        <argument>9223372036854775807</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.authentication_success_event_suppressor"/>
          <argument>onLogin</argument>
        </argument>
        <argument>9223372036854775806</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.check_two_factor_code"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.suppress_remember_me"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>-63</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.trusted_device"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.check_backup_code"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.logout_listener.user_secured_area" class="Symfony\Component\Security\Http\Firewall\LogoutListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.event_dispatcher.user_secured_area"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/portal/logout</argument>
      </argument>
    </service>
    <service id="security.logout.listener.default.user_secured_area" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.user_secured_area"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/portal</argument>
    </service>
    <service id="security.logout.listener.session.user_secured_area" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.user_secured_area"/>
    </service>
    <service id="security.authentication.listener.guard.user_secured_area" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener">
      <tag name="security.remember_me_aware" id="user_secured_area" provider="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>user_secured_area</argument>
      <argument type="iterator">
        <argument type="service" id="App\CmsBundle\Security\AppUserAuthenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
      <call method="setRememberMeServices">
        <argument type="service" id="security.authentication.rememberme.services.simplehash.user_secured_area.two_factor_decorator"/>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.success_handler.user_secured_area.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="use_referer">true</argument>
          <argument key="login_path">/portal/login</argument>
          <argument key="default_target_path">/portal</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="target_path_parameter">_target_path</argument>
        </argument>
      </call>
      <call method="setFirewallName">
        <argument>user_secured_area</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.user_secured_area.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/portal/login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.user_secured_area" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener">
      <tag name="security.remember_me_aware" id="user_secured_area" provider="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>user_secured_area</argument>
      <argument type="service" id="security.authentication.success_handler.user_secured_area.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.user_secured_area.form_login"/>
      <argument type="collection">
        <argument key="login_path">/portal/login</argument>
        <argument key="check_path">/portal/login_check</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="enable_csrf">false</argument>
        <argument key="post_only">true</argument>
        <argument key="form_only">false</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>null</argument>
      <call method="setRememberMeServices">
        <argument type="service" id="security.authentication.rememberme.services.simplehash.user_secured_area.two_factor_decorator"/>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.form_entry_point.user_secured_area" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/portal/login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.rememberme.user_secured_area" class="Symfony\Component\Security\Http\Firewall\RememberMeListener">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme.services.simplehash.user_secured_area.two_factor_decorator"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>true</argument>
      <argument type="service" id="security.authentication.session_strategy"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.logout.listener.remember_me.user_secured_area" class="Symfony\Component\Security\Http\EventListener\RememberMeLogoutListener">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.user_secured_area"/>
      <argument type="service" id="security.authentication.rememberme.services.simplehash.user_secured_area.two_factor_decorator"/>
    </service>
    <service id="security.authentication.listener.anonymous.user_secured_area" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.switchuser_listener.user_secured_area" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>user_secured_area</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.exception_listener.user_secured_area" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="scheb_two_factor.security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>user_secured_area</argument>
      <argument type="service" id="security.authentication.form_entry_point.user_secured_area"/>
      <argument>/</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.user_secured_area" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.guard.user_secured_area"/>
        <argument type="service" id="security.authentication.listener.form.user_secured_area"/>
        <argument type="service" id="security.authentication.listener.rememberme.user_secured_area"/>
        <argument type="service" id="security.authentication.listener.anonymous.user_secured_area"/>
        <argument type="service" id="security.authentication.switchuser_listener.user_secured_area"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.user_secured_area"/>
      <argument type="service" id="security.logout_listener.user_secured_area"/>
      <argument type="service" id="security.firewall.map.config.user_secured_area"/>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.app_user_provider</argument>
      <argument>primary_auth</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>switch_user</argument>
        <argument>anonymous</argument>
      </argument>
      <argument type="collection">
        <argument key="parameter">_switch_user</argument>
        <argument key="role">ROLE_ALLOWED_TO_SWITCH</argument>
      </argument>
    </service>
    <service id="security.event_dispatcher.main" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <tag name="security.event_dispatcher.main">event_dispatcher.dispatcher</tag>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="app.user_locale_listener"/>
          <argument>onInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service_closure" id="account.security_listener"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.authentication.provider_preparation_listener.two_factor.admin_secured_area"/>
          <argument>onLogin</argument>
        </argument>
        <argument>9223372036854775807</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.authentication_success_event_suppressor"/>
          <argument>onLogin</argument>
        </argument>
        <argument>9223372036854775806</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.check_two_factor_code"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.suppress_remember_me"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>-63</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LoginSuccessEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.trusted_device"/>
          <argument>onSuccessfulLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\CheckPassportEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="scheb_two_factor.security.listener.check_backup_code"/>
          <argument>checkPassport</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.switchuser_listener.main" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>main</argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="scheb_two_factor.security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument>null</argument>
      <argument>/</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.authentication.switchuser_listener.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.main"/>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id=".service_locator.gArUn4e" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.admin_secured_area" type="service_closure" id="security.firewall.map.context.admin_secured_area"/>
        <argument key="security.firewall.map.context.api" type="service_closure" id="security.firewall.map.context.api"/>
        <argument key="security.firewall.map.context.dev" type="service_closure" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service_closure" id="security.firewall.map.context.main"/>
        <argument key="security.firewall.map.context.oauth_token" type="service_closure" id="security.firewall.map.context.oauth_token"/>
        <argument key="security.firewall.map.context.user_secured_area" type="service_closure" id="security.firewall.map.context.user_secured_area"/>
      </argument>
    </service>
    <service id=".security.request_matcher.rzCRKru" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/admin/2fa</argument>
    </service>
    <service id=".security.request_matcher.lnesEJh" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/oauth/v2/auth_login$</argument>
    </service>
    <service id=".security.request_matcher.K__366D" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/admin/lostpassword</argument>
    </service>
    <service id=".security.request_matcher.hjfGJfd" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/admin/login_check</argument>
    </service>
    <service id=".security.request_matcher.9czg417" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/admin/login</argument>
    </service>
    <service id=".security.request_matcher.5dJADCx" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/admin</argument>
    </service>
    <service id=".security.request_matcher.v5R7GXW" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/portal/register</argument>
    </service>
    <service id=".security.request_matcher.yqVskfj" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/portal/lostpassword</argument>
    </service>
    <service id=".security.request_matcher.lhMYeNx" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/portal/login_check</argument>
    </service>
    <service id=".security.request_matcher.muPyjRU" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/portal/login</argument>
    </service>
    <service id=".security.request_matcher.G_Y0sic" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/portal</argument>
    </service>
    <service id=".security.request_matcher.cRNYaJ1" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/api</argument>
    </service>
    <service id=".security.request_matcher.PhQgZ9B" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand">
      <tag name="console.command" command="security:encode-password"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>App\CmsBundle\Entity\User</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
      <call method="setDescription">
        <argument>Encode a password</argument>
      </call>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use "security.command.user_password_hash" instead.</deprecated>
    </service>
    <service id="security.command.user_password_hash" class="Symfony\Component\PasswordHasher\Command\UserPasswordHashCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument type="collection">
        <argument>App\CmsBundle\Entity\User</argument>
      </argument>
      <call method="setName">
        <argument>security:hash-password</argument>
      </call>
      <call method="setDescription">
        <argument>Hash a user password</argument>
      </call>
    </service>
    <service id="fos_oauth_server.client_manager.default" class="FOS\OAuthServerBundle\Entity\ClientManager">
      <argument type="service" id="fos_oauth_server.entity_manager"/>
      <argument>App\Trinity\ApiBundle\Entity\Client</argument>
    </service>
    <service id="fos_oauth_server.access_token_manager.default" class="FOS\OAuthServerBundle\Entity\AccessTokenManager">
      <argument type="service" id="fos_oauth_server.entity_manager"/>
      <argument>App\Trinity\ApiBundle\Entity\AccessToken</argument>
    </service>
    <service id="fos_oauth_server.refresh_token_manager.default" class="FOS\OAuthServerBundle\Entity\RefreshTokenManager">
      <argument type="service" id="fos_oauth_server.entity_manager"/>
      <argument>App\Trinity\ApiBundle\Entity\RefreshToken</argument>
    </service>
    <service id="fos_oauth_server.auth_code_manager.default" class="FOS\OAuthServerBundle\Entity\AuthCodeManager">
      <argument type="service" id="fos_oauth_server.entity_manager"/>
      <argument>App\Trinity\ApiBundle\Entity\AuthCode</argument>
    </service>
    <service id="fos_oauth_server.entity_manager" class="Doctrine\ORM\EntityManager">
      <argument>null</argument>
      <factory service="doctrine" method="getManager"/>
    </service>
    <service id="fos_oauth_server.storage.default" class="FOS\OAuthServerBundle\Storage\OAuthStorage">
      <argument type="service" id="fos_oauth_server.client_manager.default"/>
      <argument type="service" id="fos_oauth_server.access_token_manager.default"/>
      <argument type="service" id="fos_oauth_server.refresh_token_manager.default"/>
      <argument type="service" id="fos_oauth_server.auth_code_manager.default"/>
      <argument>null</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="fos_oauth_server.server" class="OAuth2\OAuth2">
      <argument type="service" id="fos_oauth_server.storage.default"/>
      <argument>%fos_oauth_server.server.options%</argument>
    </service>
    <service id="FOS\OAuthServerBundle\Controller\TokenController" class="FOS\OAuthServerBundle\Controller\TokenController">
      <argument type="service" id="fos_oauth_server.server"/>
    </service>
    <service id="fos_oauth_server.clean_command" class="FOS\OAuthServerBundle\Command\CleanCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="fos_oauth_server.access_token_manager.default"/>
      <argument type="service" id="fos_oauth_server.refresh_token_manager.default"/>
      <argument type="service" id="fos_oauth_server.auth_code_manager.default"/>
      <call method="setName">
        <argument>fos:oauth-server:clean</argument>
      </call>
    </service>
    <service id="fos_oauth_server.create_client_command" class="FOS\OAuthServerBundle\Command\CreateClientCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="fos_oauth_server.client_manager.default"/>
      <call method="setName">
        <argument>fos:oauth-server:create-client</argument>
      </call>
    </service>
    <service id="fos_oauth_server.security.authentication.provider" class="FOS\OAuthServerBundle\Security\Authentication\Provider\OAuthProvider">
      <argument></argument>
      <argument type="service" id="fos_oauth_server.server"/>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="fos_oauth_server.security.authentication.listener" class="FOS\OAuthServerBundle\Security\Firewall\OAuthListener">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="fos_oauth_server.server"/>
    </service>
    <service id="fos_oauth_server.security.entry_point" class="FOS\OAuthServerBundle\Security\EntryPoint\OAuthEntryPoint">
      <argument type="service" id="fos_oauth_server.server"/>
    </service>
    <service id="fos_oauth_server.authorize.form" class="Symfony\Component\Form\Form">
      <argument>fos_oauth_server_authorize_form</argument>
      <argument>FOS\OAuthServerBundle\Form\Type\AuthorizeFormType</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups">%fos_oauth_server.authorize.form.validation_groups%</argument>
      </argument>
      <factory service="form.factory" method="createNamed"/>
    </service>
    <service id="fos_oauth_server.authorize.form.type" class="FOS\OAuthServerBundle\Form\Type\AuthorizeFormType">
      <tag name="form.type" alias="fos_oauth_server_authorize"/>
    </service>
    <service id="fos_oauth_server.authorize.form.handler.default" class="FOS\OAuthServerBundle\Form\Handler\AuthorizeFormHandler">
      <argument type="service" id="fos_oauth_server.authorize.form"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fos_oauth_server.controller.authorize" class="FOS\OAuthServerBundle\Controller\AuthorizeController" public="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="fos_oauth_server.authorize.form"/>
      <argument type="service" id="fos_oauth_server.authorize.form.handler.default"/>
      <argument type="service" id="fos_oauth_server.server"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="fos_oauth_server.client_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="twig"/>
      <argument type="service" id=".session.do-not-use" on-invalid="null"/>
    </service>
    <service id="fos_rest.view_handler.default" class="FOS\RestBundle\View\ViewHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="fos_rest.serializer.symfony"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="serializeNullStrategy">false</argument>
      </argument>
      <factory class="FOS\RestBundle\View\ViewHandler" method="create"/>
    </service>
    <service id="fos_rest.view_handler.jsonp" class="FOS\RestBundle\View\JsonpHandler">
      <argument></argument>
    </service>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher">
      <argument type="service" id="service_container"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="validator" on-invalid="null"/>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader">
      <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
    </service>
    <service id="fos_rest.serializer.jms" class="FOS\RestBundle\Serializer\JMSSerializerAdapter">
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="jms_serializer.serialization_context_factory"/>
      <argument type="service" id="jms_serializer.deserialization_context_factory"/>
    </service>
    <service id="fos_rest.serializer.symfony" class="FOS\RestBundle\Serializer\SymfonySerializerAdapter">
      <argument type="service" id="serializer"/>
    </service>
    <service id="fos_rest.serializer.form_error_normalizer" class="FOS\RestBundle\Serializer\Normalizer\FormErrorNormalizer">
      <tag name="serializer.normalizer" priority="-10"/>
    </service>
    <service id="fos_rest.view_response_listener" class="FOS\RestBundle\EventListener\ViewResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_rest.view_handler.default"/>
      <argument>false</argument>
    </service>
    <service id="fos_rest.format_listener" class="FOS\RestBundle\EventListener\FormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="34"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="fos_rest.format_negotiator"/>
    </service>
    <service id="fos_rest.format_negotiator" class="FOS\RestBundle\Negotiation\FormatNegotiator">
      <argument type="service" id="request_stack"/>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386"/>
        <argument type="collection">
          <argument key="priorities" type="collection">
            <argument>json</argument>
          </argument>
          <argument key="fallback_format">json</argument>
          <argument key="prefer_extension">false</argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="stop">false</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478"/>
        <argument type="collection">
          <argument key="priorities" type="collection">
            <argument>html</argument>
          </argument>
          <argument key="fallback_format">html</argument>
          <argument key="prefer_extension">false</argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="stop">false</argument>
        </argument>
      </call>
    </service>
    <service id="fos_rest.format_request_matcher" class="Symfony\Component\HttpFoundation\RequestMatcher" abstract="true"/>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.aNklfos.sensio_framework_extra.view.listener"/>
      </call>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="scheb_two_factor.security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage"/>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <tag name="container.preload" class="Twig\Cache\FilesystemCache"/>
      <tag name="container.preload" class="Twig\Extension\CoreExtension"/>
      <tag name="container.preload" class="Twig\Extension\EscaperExtension"/>
      <tag name="container.preload" class="Twig\Extension\OptimizerExtension"/>
      <tag name="container.preload" class="Twig\Extension\StagingExtension"/>
      <tag name="container.preload" class="Twig\ExtensionSet"/>
      <tag name="container.preload" class="Twig\Template"/>
      <tag name="container.preload" class="Twig\TemplateWrapper"/>
      <tag name="container.private" package="symfony/twig-bundle" version="5.2"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="auto_reload">true</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/twig</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\CmsBundle\Twig\Extension\Helpers"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\CmsBundle\Twig\Extension\PageInfo"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\CmsBundle\Twig\Extension\PageNavigation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Trinity\BlogBundle\Twig\Extension\Timeago"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="nelmio_api_doc.render_docs.html.asset"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="white_october_breadcrumbs.twig"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="cocur_slugify.twig.slugify"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.intl"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.string"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>trinity</argument>
        <argument>Easify</argument>
      </call>
      <call method="addGlobal">
        <argument>trinity_url</argument>
        <argument>https://www.beyonit.nl</argument>
      </call>
      <call method="addGlobal">
        <argument>trinity_support</argument>
        <argument>info@beyonit.nl</argument>
      </call>
      <call method="addGlobal">
        <argument>company</argument>
        <argument>Béyonit B.V.</argument>
      </call>
      <call method="addGlobal">
        <argument>company_url</argument>
        <argument>https://www.beyonit.nl</argument>
      </call>
      <call method="registerUndefinedFilterCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFilter</argument>
        </argument>
      </call>
      <call method="registerUndefinedFunctionCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFunction</argument>
        </argument>
      </call>
      <call method="registerUndefinedTokenParserCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestTag</argument>
        </argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable">
      <call method="setEnvironment">
        <argument>live</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator">
      <argument type="service" id="kernel"/>
      <argument type="collection">
        <argument key="/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/twig-bridge/Resources/views/Email">email</argument>
        <argument key="/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.v.Wwsjy.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/var/www/vhosts/neutral.eco/httpdocs</argument>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/oauth-server-bundle/Resources/views</argument>
        <argument>FOSOAuthServer</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/oauth-server-bundle/Resources/views</argument>
        <argument>!FOSOAuthServer</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/templates/bundles/TwigBundle</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/templates/bundles/TwigBundle</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/nelmio/api-doc-bundle/Resources/views</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/nelmio/api-doc-bundle/Resources/views</argument>
        <argument>!NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/doctrine/doctrine-migrations-bundle/Resources/views</argument>
        <argument>DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/doctrine/doctrine-migrations-bundle/Resources/views</argument>
        <argument>!DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/mhujer/breadcrumbs-bundle/Resources/views</argument>
        <argument>WhiteOctoberBreadcrumbs</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/mhujer/breadcrumbs-bundle/Resources/views</argument>
        <argument>!WhiteOctoberBreadcrumbs</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/CmsBundle/Resources/views</argument>
        <argument>Cms</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/CmsBundle/Resources/views</argument>
        <argument>!Cms</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/ApiBundle/Resources/views</argument>
        <argument>TrinityApi</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/ApiBundle/Resources/views</argument>
        <argument>!TrinityApi</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/BlogBundle/Resources/views</argument>
        <argument>TrinityBlog</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/BlogBundle/Resources/views</argument>
        <argument>!TrinityBlog</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/FormsBundle/Resources/views</argument>
        <argument>TrinityForms</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/FormsBundle/Resources/views</argument>
        <argument>!TrinityForms</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/SearchBundle/Resources/views</argument>
        <argument>TrinitySearch</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/SearchBundle/Resources/views</argument>
        <argument>!TrinitySearch</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/SliderBundle/Resources/views</argument>
        <argument>TrinitySlider</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/SliderBundle/Resources/views</argument>
        <argument>!TrinitySlider</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/views</argument>
        <argument>SchebTwoFactor</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/scheb/2fa-bundle/Resources/views</argument>
        <argument>!SchebTwoFactor</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/NeutralBundle/Resources/views</argument>
        <argument>TrinityNeutral</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/NeutralBundle/Resources/views</argument>
        <argument>!TrinityNeutral</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/templates</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/var/www/vhosts/neutral.eco/httpdocs</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
      <argument type="service" id="fragment.uri_generator" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>2</argument>
      <argument>,</argument>
      <argument>.</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader">
      <argument type="service" id=".service_locator.pTeli0u"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service">
        <service class="bool">
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="twig.runtime.serializer" class="Symfony\Bridge\Twig\Extension\SerializerRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="serializer"/>
    </service>
    <service id="twig.extension.serializer" class="Symfony\Bridge\Twig\Extension\SerializerExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument>/var/www/vhosts/neutral.eco/httpdocs</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/var/www/vhosts/neutral.eco/httpdocs/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Show a list of twig functions, filters, globals and tests</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a Twig template and outputs encountered errors</argument>
      </call>
    </service>
    <service id="twig.mailer.message_listener" class="Symfony\Component\Mailer\EventListener\MessageListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service" id="twig.mime_body_renderer"/>
    </service>
    <service id="twig.mime_body_renderer" class="Symfony\Bridge\Twig\Mime\BodyRenderer">
      <argument type="service" id="twig"/>
    </service>
    <service id="nelmio_api_doc.command.dump" class="Nelmio\ApiDocBundle\Command\DumpCommand" public="true">
      <tag name="console.command" command="nelmio:apidoc:dump"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="nelmio_api_doc.render_docs"/>
      <call method="setName">
        <argument>nelmio:apidoc:dump</argument>
      </call>
    </service>
    <service id="nelmio_api_doc.controller.swagger_ui" class="Nelmio\ApiDocBundle\Controller\SwaggerUiController" public="true">
      <argument type="service" id="nelmio_api_doc.render_docs"/>
    </service>
    <service id="nelmio_api_doc.controller.swagger_json" class="Nelmio\ApiDocBundle\Controller\DocumentationController" public="true">
      <argument type="service" id="nelmio_api_doc.render_docs"/>
    </service>
    <service id="nelmio_api_doc.controller.swagger_yaml" class="Nelmio\ApiDocBundle\Controller\YamlDocumentationController" public="true">
      <argument type="service" id="nelmio_api_doc.render_docs"/>
    </service>
    <service id="nelmio_api_doc.render_docs" class="Nelmio\ApiDocBundle\Render\RenderOpenApi" public="true">
      <argument type="service" id="nelmio_api_doc.generator_locator"/>
      <argument type="service" id="nelmio_api_doc.render_docs.json"/>
      <argument type="service" id="nelmio_api_doc.render_docs.yaml"/>
      <argument type="service" id="nelmio_api_doc.render_docs.html" on-invalid="ignore"/>
    </service>
    <service id="nelmio_api_doc.render_docs.html" class="Nelmio\ApiDocBundle\Render\Html\HtmlOpenApiRenderer">
      <argument type="service" id="twig"/>
    </service>
    <service id="nelmio_api_doc.render_docs.html.asset" class="Nelmio\ApiDocBundle\Render\Html\GetNelmioAsset">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.extension.assets"/>
    </service>
    <service id="nelmio_api_doc.render_docs.json" class="Nelmio\ApiDocBundle\Render\Json\JsonOpenApiRenderer"/>
    <service id="nelmio_api_doc.render_docs.yaml" class="Nelmio\ApiDocBundle\Render\Yaml\YamlOpenApiRenderer"/>
    <service id="nelmio_api_doc.controller_reflector" class="Nelmio\ApiDocBundle\Util\ControllerReflector">
      <argument type="service" id="service_container"/>
    </service>
    <service id="nelmio_api_doc.describers.config" class="Nelmio\ApiDocBundle\Describer\ExternalDocDescriber">
      <tag name="nelmio_api_doc.describer" priority="1000"/>
      <tag name="nelmio_api_doc.describer.default" priority="1000"/>
      <argument type="collection">
        <argument key="info" type="collection">
          <argument key="title">Trinity API</argument>
          <argument key="description">The new best thing in web</argument>
          <argument key="version">2.0.0</argument>
        </argument>
        <argument key="components" type="collection">
          <argument key="securitySchemes" type="collection">
            <argument key="Bearer" type="collection">
              <argument key="type">apiKey</argument>
              <argument key="description">Value: Bearer {jwt}</argument>
              <argument key="name">Authorization</argument>
              <argument key="in">header</argument>
            </argument>
          </argument>
        </argument>
        <argument key="security" type="collection">
          <argument type="collection">
            <argument key="Bearer" type="collection"/>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="nelmio_api_doc.describers.default" class="Nelmio\ApiDocBundle\Describer\DefaultDescriber">
      <tag name="nelmio_api_doc.describer" priority="-1000"/>
      <tag name="nelmio_api_doc.describer.default" priority="-1000"/>
    </service>
    <service id="nelmio_api_doc.route_describers.route_metadata" class="Nelmio\ApiDocBundle\RouteDescriber\RouteMetadataDescriber">
      <tag name="nelmio_api_doc.route_describer" priority="-300"/>
    </service>
    <service id="nelmio_api_doc.model_describers.object" class="Nelmio\ApiDocBundle\ModelDescriber\ObjectModelDescriber">
      <tag name="nelmio_api_doc.model_describer"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.object_model.property_describer"/>
      <argument type="collection">
        <argument>json</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.array" class="Nelmio\ApiDocBundle\PropertyDescriber\ArrayPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.boolean" class="Nelmio\ApiDocBundle\PropertyDescriber\BooleanPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.float" class="Nelmio\ApiDocBundle\PropertyDescriber\FloatPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.integer" class="Nelmio\ApiDocBundle\PropertyDescriber\IntegerPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.string" class="Nelmio\ApiDocBundle\PropertyDescriber\StringPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.date_time" class="Nelmio\ApiDocBundle\PropertyDescriber\DateTimePropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.object" class="Nelmio\ApiDocBundle\PropertyDescriber\ObjectPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer" priority="-1000"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.compound" class="Nelmio\ApiDocBundle\PropertyDescriber\CompoundPropertyDescriber">
      <tag name="nelmio_api_doc.object_model.property_describer" priority="-1001"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.form.documentation_extension" class="Nelmio\ApiDocBundle\Form\Extension\DocumentationExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="nelmio_api_doc.generator.default" class="Nelmio\ApiDocBundle\ApiDocGenerator" public="true">
      <tag name="monolog.logger" channel="nelmio_api_doc"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.describer.default"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.model_describer"/>
      <call method="setAlternativeNames">
        <argument type="collection"/>
      </call>
      <call method="setMediaTypes">
        <argument type="collection">
          <argument>json</argument>
        </argument>
      </call>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.nelmio_api_doc"/>
      </call>
    </service>
    <service id="nelmio_api_doc.describers.route.default" class="Nelmio\ApiDocBundle\Describer\RouteDescriber">
      <tag name="nelmio_api_doc.describer.default" priority="-400"/>
      <argument type="service" id="nelmio_api_doc.routes.default"/>
      <argument type="service" id="nelmio_api_doc.controller_reflector"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.route_describer"/>
    </service>
    <service id="nelmio_api_doc.describers.openapi_php.default" class="Nelmio\ApiDocBundle\Describer\OpenApiPhpDescriber">
      <tag name="nelmio_api_doc.describer.default" priority="-200"/>
      <argument type="service" id="nelmio_api_doc.routes.default"/>
      <argument type="service" id="nelmio_api_doc.controller_reflector"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="nelmio_api_doc.describers.config.default" class="Nelmio\ApiDocBundle\Describer\ExternalDocDescriber">
      <tag name="nelmio_api_doc.describer.default" priority="990"/>
      <argument type="collection"/>
      <argument>true</argument>
    </service>
    <service id="nelmio_api_doc.routes.default" class="Symfony\Component\Routing\RouteCollection">
      <argument type="service">
        <service class="Symfony\Component\Routing\RouteCollection">
          <factory service="router.default" method="getRouteCollection"/>
        </service>
      </argument>
      <factory method="filter">
        <service class="Nelmio\ApiDocBundle\Routing\FilteredRouteCollectionBuilder">
          <argument type="service" id="annotations.cached_reader"/>
          <argument type="service" id="nelmio_api_doc.controller_reflector"/>
          <argument>default</argument>
          <argument type="collection">
            <argument key="path_patterns" type="collection">
              <argument>^/api(?!/doc$)</argument>
            </argument>
            <argument key="host_patterns" type="collection"/>
            <argument key="name_patterns" type="collection"/>
            <argument key="with_annotation">false</argument>
            <argument key="disable_default_routes">false</argument>
          </argument>
        </service>
      </factory>
    </service>
    <service id="nelmio_api_doc.generator_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="default" type="service_closure" id="nelmio_api_doc.generator.default"/>
      </argument>
    </service>
    <service id="nelmio_api_doc.route_describers.php_doc" class="Nelmio\ApiDocBundle\RouteDescriber\PhpDocDescriber">
      <tag name="nelmio_api_doc.route_describer" priority="-275"/>
    </service>
    <service id="nelmio_api_doc.route_describers.fos_rest" class="Nelmio\ApiDocBundle\RouteDescriber\FosRestDescriber">
      <tag name="nelmio_api_doc.route_describer" priority="-250"/>
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>json</argument>
      </argument>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain">
      <argument type="collection">
        <argument type="service" id="doctrine.dbal.logger"/>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </argument>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" class="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand">
      <tag name="console.command" command="dbal:run-sql"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>dbal:run-sql</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain">
      <argument type="collection">
        <argument type="service" id="doctrine.dbal.logger"/>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </argument>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager">
      <argument type="service" id=".service_locator.bBRwv06"/>
      <argument type="collection">
        <argument>doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber</argument>
        <argument>doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber</argument>
        <argument>doctrine.orm.listeners.doctrine_token_provider_schema_subscriber</argument>
        <argument type="collection">
          <argument type="collection">
            <argument>loadClassMetadata</argument>
          </argument>
          <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="charset">utf8</argument>
        <argument key="url">%env(resolve:DATABASE_URL)%</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="serverVersion">mariadb-10.3.27</argument>
        <argument key="defaultTableOptions" type="collection">
          <argument key="charset">utf8</argument>
          <argument key="collate">utf8_unicode_ci</argument>
        </argument>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" class="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider">
      <argument type="service">
        <service class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
          <tag name="kernel.reset" method="reset"/>
          <argument type="service" id="service_container"/>
          <argument>%doctrine.connections%</argument>
          <argument>%doctrine.entity_managers%</argument>
          <argument>default</argument>
          <argument>default</argument>
        </service>
      </argument>
    </service>
    <service id=".1_ServiceLocator~4XGFuR2" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory">
      <argument type="service" id=".service_locator.19zX.pk"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener"/>
    <service id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\DoctrineDbalCacheAdapterSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\PdoCacheAdapterDoctrineSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.listeners.doctrine_token_provider_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\RememberMeTokenProviderDoctrineSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="tagged_iterator" tag="security.remember_me_handler"/>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy"/>
    <service id="doctrine.ulid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UlidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.uuid_generator" class="Symfony\Bridge\Doctrine\IdGenerator\UuidGenerator">
      <tag name="doctrine.id_generator"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration">
      <tag name="doctrine.orm.configuration"/>
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\CmsBundle\Entity</argument>
          <argument key="FOSOAuthServerBundle">FOS\OAuthServerBundle\Entity</argument>
          <argument key="CmsBundle">App\CmsBundle\Entity</argument>
          <argument key="TrinityApiBundle">App\Trinity\ApiBundle\Entity</argument>
          <argument key="TrinityBlogBundle">App\Trinity\BlogBundle\Entity</argument>
          <argument key="TrinityFormsBundle">App\Trinity\FormsBundle\Entity</argument>
          <argument key="TrinitySearchBundle">App\Trinity\SearchBundle\Entity</argument>
          <argument key="TrinitySliderBundle">App\Trinity\SliderBundle\Entity</argument>
          <argument key="TrinityNeutralBundle">App\Trinity\NeutralBundle\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCache">
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCache">
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCache">
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id=".doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\Bundle\DoctrineBundle\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore_number_aware"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
      <call method="addCustomNumericFunction">
        <argument>acos</argument>
        <argument>DoctrineExtensions\Query\Mysql\Acos</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>asin</argument>
        <argument>DoctrineExtensions\Query\Mysql\Asin</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>atan2</argument>
        <argument>DoctrineExtensions\Query\Mysql\Atan2</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>atan</argument>
        <argument>DoctrineExtensions\Query\Mysql\Atan</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>bit_count</argument>
        <argument>DoctrineExtensions\Query\Mysql\BitCount</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>bit_xor</argument>
        <argument>DoctrineExtensions\Query\Mysql\BitXor</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>ceil</argument>
        <argument>DoctrineExtensions\Query\Mysql\Ceil</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>cos</argument>
        <argument>DoctrineExtensions\Query\Mysql\Cos</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>cot</argument>
        <argument>DoctrineExtensions\Query\Mysql\Cot</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>degrees</argument>
        <argument>DoctrineExtensions\Query\Mysql\Degrees</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>exp</argument>
        <argument>DoctrineExtensions\Query\Mysql\Exp</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>floor</argument>
        <argument>DoctrineExtensions\Query\Mysql\Floor</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>log</argument>
        <argument>DoctrineExtensions\Query\Mysql\Log</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>log10</argument>
        <argument>DoctrineExtensions\Query\Mysql\Log10</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>log2</argument>
        <argument>DoctrineExtensions\Query\Mysql\Log2</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>pi</argument>
        <argument>DoctrineExtensions\Query\Mysql\Pi</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>power</argument>
        <argument>DoctrineExtensions\Query\Mysql\Power</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>quarter</argument>
        <argument>DoctrineExtensions\Query\Mysql\Quarter</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>radians</argument>
        <argument>DoctrineExtensions\Query\Mysql\Radians</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>rand</argument>
        <argument>DoctrineExtensions\Query\Mysql\Rand</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>round</argument>
        <argument>DoctrineExtensions\Query\Mysql\Round</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>stddev</argument>
        <argument>DoctrineExtensions\Query\Mysql\StdDev</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>sin</argument>
        <argument>DoctrineExtensions\Query\Mysql\Sin</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>std</argument>
        <argument>DoctrineExtensions\Query\Mysql\Std</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>tan</argument>
        <argument>DoctrineExtensions\Query\Mysql\Tan</argument>
      </call>
      <call method="addCustomNumericFunction">
        <argument>variance</argument>
        <argument>DoctrineExtensions\Query\Mysql\Variance</argument>
      </call>
      <call method="addCustomDatetimeFunction">
        <argument>date_format</argument>
        <argument>DoctrineExtensions\Query\Mysql\DateFormat</argument>
      </call>
      <call method="addCustomDatetimeFunction">
        <argument>now</argument>
        <argument>DoctrineExtensions\Query\Mysql\Now</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/CmsBundle/Entity</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/ApiBundle/Entity</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/BlogBundle/Entity</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/FormsBundle/Entity</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/SearchBundle/Entity</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/SliderBundle/Entity</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/src/Trinity/NeutralBundle/Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_xml_metadata_driver" class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver">
      <argument type="collection">
        <argument key="/var/www/vhosts/neutral.eco/httpdocs/vendor/friendsofsymfony/oauth-server-bundle/Resources/config/doctrine">FOS\OAuthServerBundle\Entity</argument>
      </argument>
      <call method="setGlobalBasename">
        <argument>mapping</argument>
      </call>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.migrations.dependency_factory" class="Doctrine\Migrations\DependencyFactory">
      <argument type="service" id="doctrine.migrations.configuration_loader"/>
      <argument type="service" id="doctrine.migrations.entity_manager_registry_loader"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <call method="setDefinition">
        <argument>Doctrine\Migrations\Version\MigrationFactory</argument>
        <argument type="service_closure" id="doctrine.migrations.container_aware_migrations_factory"/>
      </call>
      <factory class="Doctrine\Migrations\DependencyFactory" method="fromEntityManager"/>
    </service>
    <service id="doctrine.migrations.configuration_loader" class="Doctrine\Migrations\Configuration\Migration\ExistingConfiguration">
      <argument type="service" id="doctrine.migrations.configuration"/>
    </service>
    <service id="doctrine.migrations.connection_loader" class="Doctrine\Migrations\Configuration\Connection\ExistingConnection"/>
    <service id="doctrine.migrations.em_loader" class="Doctrine\Migrations\Configuration\EntityManager\ExistingEntityManager"/>
    <service id="doctrine.migrations.entity_manager_registry_loader" class="Doctrine\Migrations\Configuration\EntityManager\ManagerRegistryEntityManager">
      <argument type="service" id="doctrine"/>
      <factory class="Doctrine\Migrations\Configuration\EntityManager\ManagerRegistryEntityManager" method="withSimpleDefault"/>
    </service>
    <service id="doctrine.migrations.connection_registry_loader" class="Doctrine\Migrations\Configuration\Connection\ConnectionRegistryConnection">
      <argument type="service" id="doctrine"/>
      <factory class="Doctrine\Migrations\Configuration\Connection\ConnectionRegistryConnection" method="withSimpleDefault"/>
    </service>
    <service id="doctrine.migrations.configuration" class="Doctrine\Migrations\Configuration\Configuration">
      <call method="addMigrationsDirectory">
        <argument>DoctrineMigrations</argument>
        <argument>/var/www/vhosts/neutral.eco/httpdocs/migrations</argument>
      </call>
      <call method="setAllOrNothing">
        <argument>false</argument>
      </call>
      <call method="setCheckDatabasePlatform">
        <argument>true</argument>
      </call>
      <call method="setTransactional">
        <argument>true</argument>
      </call>
      <call method="setMetadataStorageConfiguration">
        <argument type="service" id="doctrine.migrations.storage.table_storage"/>
      </call>
    </service>
    <service id="doctrine.migrations.container_aware_migrations_factory" class="Doctrine\Bundle\MigrationsBundle\MigrationsFactory\ContainerAwareMigrationFactory">
      <argument type="service" id="doctrine.migrations.container_aware_migrations_factory.inner"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Migrations\Tools\Console\Command\DiffCommand">
      <tag name="console.command" command="doctrine:migrations:diff"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:diff</argument>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
    </service>
    <service id="doctrine_migrations.sync_metadata_command" class="Doctrine\Migrations\Tools\Console\Command\SyncMetadataCommand">
      <tag name="console.command" command="doctrine:migrations:sync-metadata-storage"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:sync-metadata-storage</argument>
      <call method="setName">
        <argument>doctrine:migrations:sync-metadata-storage</argument>
      </call>
    </service>
    <service id="doctrine_migrations.versions_command" class="Doctrine\Migrations\Tools\Console\Command\ListCommand">
      <tag name="console.command" command="doctrine:migrations:list"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:versions</argument>
      <call method="setName">
        <argument>doctrine:migrations:list</argument>
      </call>
    </service>
    <service id="doctrine_migrations.current_command" class="Doctrine\Migrations\Tools\Console\Command\CurrentCommand">
      <tag name="console.command" command="doctrine:migrations:current"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:current</argument>
      <call method="setName">
        <argument>doctrine:migrations:current</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Migrations\Tools\Console\Command\DumpSchemaCommand">
      <tag name="console.command" command="doctrine:migrations:dump-schema"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:dump-schema</argument>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Migrations\Tools\Console\Command\ExecuteCommand">
      <tag name="console.command" command="doctrine:migrations:execute"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:execute</argument>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Migrations\Tools\Console\Command\GenerateCommand">
      <tag name="console.command" command="doctrine:migrations:generate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:generate</argument>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Migrations\Tools\Console\Command\LatestCommand">
      <tag name="console.command" command="doctrine:migrations:latest"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:latest</argument>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Migrations\Tools\Console\Command\MigrateCommand">
      <tag name="console.command" command="doctrine:migrations:migrate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:migrate</argument>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Migrations\Tools\Console\Command\RollupCommand">
      <tag name="console.command" command="doctrine:migrations:rollup"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:rollup</argument>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Migrations\Tools\Console\Command\StatusCommand">
      <tag name="console.command" command="doctrine:migrations:status"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:status</argument>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Migrations\Tools\Console\Command\UpToDateCommand">
      <tag name="console.command" command="doctrine:migrations:up-to-date"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:up-to-date</argument>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Migrations\Tools\Console\Command\VersionCommand">
      <tag name="console.command" command="doctrine:migrations:version"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:version</argument>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
    </service>
    <service id="doctrine.migrations.storage.table_storage" class="Doctrine\Migrations\Metadata\Storage\TableMetadataStorageConfiguration"/>
    <service id="WhiteOctober\BreadcrumbsBundle\Model\Breadcrumbs" class="WhiteOctober\BreadcrumbsBundle\Model\Breadcrumbs">
      <tag name="kernel.reset" method="clear"/>
      <call method="setRouter">
        <argument type="service" id="router.default"/>
      </call>
    </service>
    <service id="white_october_breadcrumbs.helper" class="WhiteOctober\BreadcrumbsBundle\Templating\Helper\BreadcrumbsHelper" public="true">
      <argument type="service" id="twig"/>
      <argument type="service" id="WhiteOctober\BreadcrumbsBundle\Model\Breadcrumbs"/>
      <argument>%white_october_breadcrumbs.options%</argument>
    </service>
    <service id="white_october_breadcrumbs.twig" class="WhiteOctober\BreadcrumbsBundle\Twig\Extension\BreadcrumbsExtension" public="true">
      <tag name="twig.extension"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter">
      <argument>app</argument>
    </service>
    <service id="monolog.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="cocur_slugify" class="Cocur\Slugify\Slugify">
      <argument type="collection"/>
    </service>
    <service id="cocur_slugify.twig.slugify" class="Cocur\Slugify\Bridge\Twig\SlugifyExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="cocur_slugify"/>
    </service>
    <service id="translation.loader.db" class="App\CmsBundle\Routing\DBLoader" public="true">
      <tag name="translation.loader" alias="db"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="trinity.crontask_default" class="App\CmsBundle\Util\DefaultCommands">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="trinity.mailer" class="App\CmsBundle\Util\Mailer" public="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="mailer.mailer"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="trinity.form.type.cron_task" class="App\CmsBundle\Form\CronTaskType">
      <tag name="form.type"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="trinity.password.encoder" class="App\CmsBundle\Service\PasswordEncoder" public="true">
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="account.security_listener_failure" class="App\CmsBundle\EventListener\SecurityListener">
      <tag name="kernel.event_listener" event="security.authentication.failure" method="onAuthenticationFailure"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id=".session.do-not-use"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="account.security_listener" class="App\CmsBundle\EventListener\SecurityListener">
      <tag name="kernel.event_listener" event="security.interactive_login" method="onSecurityInteractiveLogin"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id=".session.do-not-use"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="routing.loader.db" class="App\CmsBundle\Routing\PageLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id=".session.do-not-use"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="admin_link" class="App\CmsBundle\Controller\LinkController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="admin_show" class="App\CmsBundle\Controller\LinkController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="trinity.auth_handler" class="App\CmsBundle\Security\AccessDeniedHandler">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id=".session.do-not-use"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="trinityapibundle_show" class="Trinity\ApiBundle\Controller\AdminController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="trinityapibundle_inflector" class="Trinity\ApiBundle\Controller\InflectController" public="true"/>
    <service id="Sentry\Options" class="Sentry\Options">
      <argument type="collection">
        <argument key="dsn">%env(SENTRY_DSN)%</argument>
      </argument>
      <call method="setEnvironment">
        <argument>live</argument>
      </call>
      <call method="setPrefixes">
        <argument type="collection">
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/phing/phing/classes</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/propel/propel1/runtime/lib</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor/propel/propel1/generator/lib</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs</argument>
          <argument>/usr/share/php</argument>
        </argument>
      </call>
      <call method="setRelease">
        <argument>dev-master@403e27f</argument>
      </call>
      <call method="setSampleRate">
        <argument>0.2</argument>
      </call>
      <call method="setTags">
        <argument type="collection"/>
      </call>
      <call method="setInAppExcludedPaths">
        <argument type="collection">
          <argument>/var/www/vhosts/neutral.eco/httpdocs/var/cache/liv_</argument>
          <argument>/var/www/vhosts/neutral.eco/httpdocs/vendor</argument>
        </argument>
      </call>
      <call method="setInAppIncludedPaths">
        <argument type="collection"/>
      </call>
      <call method="setClassSerializers">
        <argument type="collection"/>
      </call>
      <call method="setIntegrations">
        <argument type="service">
          <service class="callable">
            <argument type="collection">
              <argument type="service">
                <service class="Sentry\Integration\IgnoreErrorsIntegration">
                  <argument type="collection">
                    <argument key="ignore_exceptions" type="collection">
                      <argument>Symfony\Component\HttpKernel\Exception\NotFoundHttpException</argument>
                      <argument>Symfony\Component\Security\Core\Exception\AccessDeniedException</argument>
                    </argument>
                  </argument>
                </service>
              </argument>
            </argument>
            <factory class="Sentry\SentryBundle\DependencyInjection\IntegrationFilterFactory" method="create"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="Sentry\ClientBuilderInterface" class="Sentry\ClientBuilder">
      <argument type="service" id="Sentry\Options"/>
      <configurator class="Sentry\SentryBundle\DependencyInjection\ClientBuilderConfigurator" method="configure"/>
    </service>
    <service id="Sentry\ClientInterface" class="Sentry\Client">
      <factory service="Sentry\ClientBuilderInterface" method="getClient"/>
    </service>
    <service id="Sentry\State\HubInterface" class="Sentry\State\Hub">
      <call method="bindClient">
        <argument type="service" id="Sentry\ClientInterface"/>
      </call>
      <factory class="Sentry\SentryBundle\SentryBundle" method="getCurrentHub"/>
    </service>
    <service id="Sentry\SentryBundle\EventListener\ConsoleListener" class="Sentry\SentryBundle\EventListener\ConsoleListener">
      <tag name="kernel.event_listener" event="console.command" method="onConsoleCommand" priority="%sentry.listener_priorities.console%"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="Sentry\SentryBundle\EventListener\ErrorListener" class="Sentry\SentryBundle\EventListener\ErrorListener">
      <tag name="kernel.event_listener" event="console.error" method="onConsoleError" priority="%sentry.listener_priorities.console_error%"/>
      <tag name="kernel.event_listener" event="kernel.exception" method="onException" priority="%sentry.listener_priorities.request_error%"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
    </service>
    <service id="Sentry\SentryBundle\EventListener\RequestListener" class="Sentry\SentryBundle\EventListener\RequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="%sentry.listener_priorities.request%"/>
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController" priority="%sentry.listener_priorities.request%"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Sentry\State\HubInterface"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
    </service>
    <service id="Sentry\SentryBundle\EventListener\SubRequestListener" class="Sentry\SentryBundle\EventListener\SubRequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="%sentry.listener_priorities.sub_request%"/>
      <tag name="kernel.event_listener" event="kernel.finish_request" method="onKernelFinishRequest" priority="%sentry.listener_priorities.sub_request%"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="Sentry\SentryBundle\Command\SentryTestCommand" class="Sentry\SentryBundle\Command\SentryTestCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>sentry:test</argument>
      </call>
    </service>
    <service id="app.show_blog" class="App\Trinity\BlogBundle\Controller\BlogController">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="trinityblogbundle_show" class="App\Trinity\BlogBundle\Controller\BlogController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="trinityblogbundle_link" class="App\Trinity\BlogBundle\Controller\BlogController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="trinityformsbundle_show" class="App\Trinity\FormsBundle\Controller\FormsController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="trinityformsbundle_link" class="App\Trinity\FormsBundle\Controller\FormsController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="trinitysearchbundle_show" class="App\Trinity\SearchBundle\Controller\SearchController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="trinitysearchbundle_link" class="App\Trinity\SearchBundle\Controller\SearchController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="trinitysliderbundle_show" class="App\Trinity\SliderBundle\Controller\SliderController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="trinitysliderbundle_link" class="App\Trinity\SliderBundle\Controller\SliderController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="twig.missing_extension_suggestor" class="Twig\Extra\TwigExtraBundle\MissingExtensionSuggestor"/>
    <service id="twig.extension.intl" class="Twig\Extra\Intl\IntlExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.string" class="Twig\Extra\String\StringExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="scheb_two_factor.security.authentication.provider.decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator" abstract="true">
      <argument></argument>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="scheb_two_factor.security.authentication.provider" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\TwoFactorAuthenticationProvider" abstract="true">
      <argument></argument>
      <argument type="service" id="scheb_two_factor.provider_registry"/>
      <argument type="service" id="scheb_two_factor.default_backup_code_manager" on-invalid="null"/>
      <argument type="service" id="scheb_two_factor.provider_preparation_recorder"/>
    </service>
    <service id="scheb_two_factor.security.authentication.trust_resolver" class="Scheb\TwoFactorBundle\Security\Authentication\AuthenticationTrustResolver">
      <argument type="service" id="scheb_two_factor.security.authentication.trust_resolver.inner"/>
    </service>
    <service id="scheb_two_factor.security.access.authenticated_voter" class="Scheb\TwoFactorBundle\Security\Authorization\Voter\TwoFactorInProgressVoter">
      <tag name="security.voter" priority="249"/>
    </service>
    <service id="scheb_two_factor.security.access.access_decider" class="Scheb\TwoFactorBundle\Security\Authorization\TwoFactorAccessDecider">
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="scheb_two_factor.security.authentication.listener" class="Scheb\TwoFactorBundle\Security\Http\Firewall\TwoFactorListener" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="scheb_two_factor.default_trusted_device_manager" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="scheb_two_factor.default_token_factory"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="scheb_two_factor.security.rememberme_services_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\RememberMe\RememberMeServicesDecorator" abstract="true">
      <argument></argument>
    </service>
    <service id="scheb_two_factor.security.provider_preparation_listener" class="Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderPreparationListener" abstract="true">
      <argument type="service" id="scheb_two_factor.provider_registry"/>
      <argument type="service" id="scheb_two_factor.provider_preparation_recorder"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="scheb_two_factor.security.form_listener" class="Scheb\TwoFactorBundle\Security\TwoFactor\Event\TwoFactorFormListener" abstract="true">
      <argument></argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="scheb_two_factor.security.authentication_success_event_suppressor" class="Scheb\TwoFactorBundle\Security\TwoFactor\Event\AuthenticationSuccessEventSuppressor">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="scheb_two_factor.security.kernel_exception_listener" class="Scheb\TwoFactorBundle\Security\Http\Firewall\ExceptionListener" abstract="true">
      <argument></argument>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="scheb_two_factor.security.access_listener" class="Scheb\TwoFactorBundle\Security\Http\Firewall\TwoFactorAccessListener" abstract="true">
      <argument></argument>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="scheb_two_factor.security.access.access_decider"/>
    </service>
    <service id="scheb_two_factor.security.authentication.success_handler" class="Scheb\TwoFactorBundle\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="scheb_two_factor.security.authentication.failure_handler" class="Scheb\TwoFactorBundle\Security\Http\Authentication\DefaultAuthenticationFailureHandler" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="scheb_two_factor.security.authentication.authentication_required_handler" class="Scheb\TwoFactorBundle\Security\Http\Authentication\DefaultAuthenticationRequiredHandler" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="scheb_two_factor.null_csrf_token_manager" class="Scheb\TwoFactorBundle\Security\TwoFactor\Csrf\NullCsrfTokenManager"/>
    <service id="scheb_two_factor.security.firewall_config" class="Scheb\TwoFactorBundle\Security\TwoFactor\TwoFactorFirewallConfig" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="scheb_two_factor.security.request_data_reader"/>
    </service>
    <service id="scheb_two_factor.security.request_data_reader" class="Scheb\TwoFactorBundle\Security\Http\Utils\RequestDataReader"/>
    <service id="scheb_two_factor.security.authenticator" class="Scheb\TwoFactorBundle\Security\Http\Authenticator\TwoFactorAuthenticator" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="scheb_two_factor.security.listener.token_created" class="Scheb\TwoFactorBundle\Security\TwoFactor\Event\AuthenticationTokenListener" abstract="true">
      <argument></argument>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="scheb_two_factor.security.listener.check_two_factor_code" class="Scheb\TwoFactorBundle\Security\Http\EventListener\CheckTwoFactorCodeListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="scheb_two_factor.provider_preparation_recorder"/>
      <argument type="service" id="scheb_two_factor.provider_registry"/>
    </service>
    <service id="scheb_two_factor.security.listener.suppress_remember_me" class="Scheb\TwoFactorBundle\Security\Http\EventListener\SuppressRememberMeListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="scheb_two_factor.persister_factory.doctrine" class="Scheb\TwoFactorBundle\Model\Persister\DoctrinePersisterFactory">
      <argument type="service" id="doctrine" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="scheb_two_factor.persister.doctrine" class="Scheb\TwoFactorBundle\Model\Persister\DoctrinePersister" lazy="true">
      <factory service="scheb_two_factor.persister_factory.doctrine" method="getPersister"/>
    </service>
    <service id="scheb_two_factor.provider_registry" class="Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorProviderRegistry">
      <argument type="iterator">
        <argument key="totp" type="service" id="scheb_two_factor.security.totp.provider"/>
      </argument>
    </service>
    <service id="scheb_two_factor.default_token_factory" class="Scheb\TwoFactorBundle\Security\Authentication\Token\TwoFactorTokenFactory"/>
    <service id="scheb_two_factor.authentication_context_factory" class="Scheb\TwoFactorBundle\Security\TwoFactor\AuthenticationContextFactory">
      <argument>Scheb\TwoFactorBundle\Security\TwoFactor\AuthenticationContext</argument>
    </service>
    <service id="scheb_two_factor.condition_handler" class="Scheb\TwoFactorBundle\Security\TwoFactor\Handler\ConditionAuthenticationHandler" lazy="true">
      <argument type="service" id="scheb_two_factor.authenticated_token_handler"/>
      <argument type="service" id="scheb_two_factor.default_handler_condition"/>
    </service>
    <service id="scheb_two_factor.default_handler_condition" class="Scheb\TwoFactorBundle\Security\TwoFactor\Condition\DefaultTwoFactorCondition"/>
    <service id="scheb_two_factor.authenticated_token_handler" class="Scheb\TwoFactorBundle\Security\TwoFactor\Handler\AuthenticatedTokenHandler" lazy="true">
      <argument type="service" id="scheb_two_factor.ip_whitelist_handler"/>
      <argument>%scheb_two_factor.security_tokens%</argument>
    </service>
    <service id="scheb_two_factor.ip_whitelist_handler" class="Scheb\TwoFactorBundle\Security\TwoFactor\Handler\IpWhitelistHandler" lazy="true">
      <argument type="service" id="scheb_two_factor.trusted_device_handler"/>
      <argument type="service" id="scheb_two_factor.default_ip_whitelist_provider"/>
    </service>
    <service id="scheb_two_factor.default_ip_whitelist_provider" class="Scheb\TwoFactorBundle\Security\TwoFactor\IpWhitelist\DefaultIpWhitelistProvider">
      <argument type="collection"/>
    </service>
    <service id="scheb_two_factor.provider_handler" class="Scheb\TwoFactorBundle\Security\TwoFactor\Handler\TwoFactorProviderHandler" lazy="true">
      <argument type="service" id="scheb_two_factor.provider_registry"/>
      <argument type="service" id="scheb_two_factor.default_token_factory"/>
    </service>
    <service id="scheb_two_factor.firewall_context" class="Scheb\TwoFactorBundle\Security\TwoFactor\TwoFactorFirewallContext" public="true">
      <argument type="collection">
        <argument key="admin_secured_area" type="service" id="security.firewall_config.two_factor.admin_secured_area"/>
      </argument>
    </service>
    <service id="scheb_two_factor.provider_preparation_recorder" class="Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TokenPreparationRecorder">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="scheb_two_factor.form_controller" class="Scheb\TwoFactorBundle\Controller\FormController" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="scheb_two_factor.provider_registry"/>
      <argument type="service" id="scheb_two_factor.firewall_context"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="scheb_two_factor.default_trusted_device_manager" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="scheb_two_factor.security.form_renderer" class="Scheb\TwoFactorBundle\Security\TwoFactor\Provider\DefaultTwoFactorFormRenderer" lazy="true">
      <argument type="service" id="twig"/>
      <argument>@SchebTwoFactor/Authentication/form.html.twig</argument>
    </service>
    <service id="scheb_two_factor.security.totp_factory" class="Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpFactory" public="true">
      <argument>Easify</argument>
      <argument>Easify TOTP</argument>
      <argument type="collection"/>
    </service>
    <service id="scheb_two_factor.security.totp_authenticator" class="Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticator" public="true">
      <argument type="service" id="scheb_two_factor.security.totp_factory"/>
      <argument>1</argument>
    </service>
    <service id="scheb_two_factor.security.totp.default_form_renderer" class="Scheb\TwoFactorBundle\Security\TwoFactor\Provider\DefaultTwoFactorFormRenderer" lazy="true">
      <argument type="service" id="twig"/>
      <argument>@Cms/login/2fa.html.twig</argument>
    </service>
    <service id="scheb_two_factor.security.totp.provider" class="Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticatorTwoFactorProvider">
      <tag name="scheb_two_factor.provider" alias="totp"/>
      <argument type="service" id="scheb_two_factor.security.totp_authenticator"/>
      <argument type="service" id="scheb_two_factor.security.totp.default_form_renderer"/>
    </service>
    <service id="scheb_two_factor.trusted_jwt_encoder" class="Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\JwtTokenEncoder">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="scheb_two_factor.trusted_token_encoder" class="Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\TrustedDeviceTokenEncoder">
      <argument type="service" id="scheb_two_factor.trusted_jwt_encoder"/>
      <argument>5184000</argument>
    </service>
    <service id="scheb_two_factor.trusted_token_storage" class="Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\TrustedDeviceTokenStorage" lazy="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="scheb_two_factor.trusted_token_encoder"/>
      <argument>trusted_device</argument>
    </service>
    <service id="scheb_two_factor.trusted_device_handler" class="Scheb\TwoFactorBundle\Security\TwoFactor\Handler\TrustedDeviceHandler" lazy="true">
      <argument type="service" id="scheb_two_factor.provider_handler"/>
      <argument type="service" id="scheb_two_factor.default_trusted_device_manager"/>
      <argument>true</argument>
    </service>
    <service id="scheb_two_factor.trusted_cookie_response_listener" class="Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\TrustedCookieResponseListener" lazy="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="scheb_two_factor.trusted_token_storage"/>
      <argument>5184000</argument>
      <argument>trusted_device</argument>
      <argument>false</argument>
      <argument>lax</argument>
      <argument>/</argument>
      <argument>null</argument>
    </service>
    <service id="scheb_two_factor.security.listener.trusted_device" class="Scheb\TwoFactorBundle\Security\Http\EventListener\TrustedDeviceListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="scheb_two_factor.default_trusted_device_manager"/>
    </service>
    <service id="scheb_two_factor.default_trusted_device_manager" class="Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\TrustedDeviceManager">
      <argument type="service" id="scheb_two_factor.trusted_token_storage"/>
    </service>
    <service id="scheb_two_factor.null_trusted_device_manager" class="Scheb\TwoFactorBundle\Security\TwoFactor\Trusted\NullTrustedDeviceManager"/>
    <service id="scheb_two_factor.default_backup_code_manager" class="Scheb\TwoFactorBundle\Security\TwoFactor\Backup\BackupCodeManager">
      <argument type="service" id="scheb_two_factor.persister.doctrine"/>
    </service>
    <service id="scheb_two_factor.null_backup_code_manager" class="Scheb\TwoFactorBundle\Security\TwoFactor\Backup\NullBackupCodeManager"/>
    <service id="scheb_two_factor.security.listener.check_backup_code" class="Scheb\TwoFactorBundle\Security\Http\EventListener\CheckBackupCodeListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="scheb_two_factor.provider_preparation_recorder"/>
      <argument type="service" id="scheb_two_factor.default_backup_code_manager"/>
    </service>
    <service id="trinityneutralbundle_show" class="App\Trinity\NeutralBundle\Controller\NeutralController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="trinityneutralbundle_link" class="App\Trinity\NeutralBundle\Controller\NeutralController" public="true">
      <argument type="service" id="translator.default"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="trinity.mailer"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\ActivateBundleCommand" class="App\CmsBundle\Command\ActivateBundleCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\ActivateBundleCommand" class="App\CmsBundle\Command\ActivateBundleCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\BackupCommand" class="App\CmsBundle\Command\BackupCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\BackupCommand" class="App\CmsBundle\Command\BackupCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\BundleListCommand" class="App\CmsBundle\Command\BundleListCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\BundleListCommand" class="App\CmsBundle\Command\BundleListCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\CacheCommand" class="App\CmsBundle\Command\CacheCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\CacheCommand" class="App\CmsBundle\Command\CacheCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\ControlCommand" class="App\CmsBundle\Command\ControlCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\ControlCommand" class="App\CmsBundle\Command\ControlCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\CreateBundleCommand" class="App\CmsBundle\Command\CreateBundleCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\CreateBundleCommand" class="App\CmsBundle\Command\CreateBundleCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\CronTasksRunCommand" class="App\CmsBundle\Command\CronTasksRunCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\CronTasksRunCommand" class="App\CmsBundle\Command\CronTasksRunCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\FixTranslationsCommand" class="App\CmsBundle\Command\FixTranslationsCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\FixTranslationsCommand" class="App\CmsBundle\Command\FixTranslationsCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\InstallBundleCommand" class="App\CmsBundle\Command\InstallBundleCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\InstallBundleCommand" class="App\CmsBundle\Command\InstallBundleCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\LanguageCacheCommand" class="App\CmsBundle\Command\LanguageCacheCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\LanguageCacheCommand" class="App\CmsBundle\Command\LanguageCacheCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\LanguageResetCommand" class="App\CmsBundle\Command\LanguageResetCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\LanguageResetCommand" class="App\CmsBundle\Command\LanguageResetCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\MailtestCommand" class="App\CmsBundle\Command\MailtestCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\MailtestCommand" class="App\CmsBundle\Command\MailtestCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\MediaCreateFullCommand" class="App\CmsBundle\Command\MediaCreateFullCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\MediaCreateFullCommand" class="App\CmsBundle\Command\MediaCreateFullCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\MediaRegenThumbnailsCommand" class="App\CmsBundle\Command\MediaRegenThumbnailsCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\MediaRegenThumbnailsCommand" class="App\CmsBundle\Command\MediaRegenThumbnailsCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\MediaUsageCommand" class="App\CmsBundle\Command\MediaUsageCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\MediaUsageCommand" class="App\CmsBundle\Command\MediaUsageCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\MediadirCleanUpCommand" class="App\CmsBundle\Command\MediadirCleanUpCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\MediadirCleanUpCommand" class="App\CmsBundle\Command\MediadirCleanUpCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\MigrateCommand" class="App\CmsBundle\Command\MigrateCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\MigrateCommand" class="App\CmsBundle\Command\MigrateCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\MissingmediaCommand" class="App\CmsBundle\Command\MissingmediaCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\MissingmediaCommand" class="App\CmsBundle\Command\MissingmediaCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\MonitorCommand" class="App\CmsBundle\Command\MonitorCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\MonitorCommand" class="App\CmsBundle\Command\MonitorCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\OptimizeCommand" class="App\CmsBundle\Command\OptimizeCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\OptimizeCommand" class="App\CmsBundle\Command\OptimizeCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\ReportCommand" class="App\CmsBundle\Command\ReportCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\ReportCommand" class="App\CmsBundle\Command\ReportCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\RestoreCommand" class="App\CmsBundle\Command\RestoreCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\RestoreCommand" class="App\CmsBundle\Command\RestoreCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\ScheduleTask\CronTasksDefaultCommand" class="App\CmsBundle\Command\ScheduleTask\CronTasksDefaultCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\ScheduleTask\CronTasksDefaultCommand" class="App\CmsBundle\Command\ScheduleTask\CronTasksDefaultCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\ServerupdateCommand" class="App\CmsBundle\Command\ServerupdateCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\ServerupdateCommand" class="App\CmsBundle\Command\ServerupdateCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\StatsCommand" class="App\CmsBundle\Command\StatsCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\StatsCommand" class="App\CmsBundle\Command\StatsCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\UpdateCommand" class="App\CmsBundle\Command\UpdateCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\UpdateCommand" class="App\CmsBundle\Command\UpdateCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\UserCommand" class="App\CmsBundle\Command\UserCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\UserCommand" class="App\CmsBundle\Command\UserCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\CmsBundle\Command\WebpCommand" class="App\CmsBundle\Command\WebpCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Command\WebpCommand" class="App\CmsBundle\Command\WebpCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\ApiController" class="App\CmsBundle\Controller\ApiController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\ApiController" class="App\CmsBundle\Controller\ApiController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\ApiController" class="App\CmsBundle\Controller\ApiController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\CalendarController" class="App\CmsBundle\Controller\CalendarController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\CalendarController" class="App\CmsBundle\Controller\CalendarController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\CalendarController" class="App\CmsBundle\Controller\CalendarController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\CommandcontrolController" class="App\CmsBundle\Controller\CommandcontrolController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\CommandcontrolController" class="App\CmsBundle\Controller\CommandcontrolController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\CommandcontrolController" class="App\CmsBundle\Controller\CommandcontrolController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\CronTaskController" class="App\CmsBundle\Controller\CronTaskController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\CronTaskController" class="App\CmsBundle\Controller\CronTaskController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\CronTaskController" class="App\CmsBundle\Controller\CronTaskController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\DefaultController" class="App\CmsBundle\Controller\DefaultController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\DefaultController" class="App\CmsBundle\Controller\DefaultController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\DefaultController" class="App\CmsBundle\Controller\DefaultController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\ErrorController" class="App\CmsBundle\Controller\ErrorController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\ErrorController" class="App\CmsBundle\Controller\ErrorController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\ErrorController" class="App\CmsBundle\Controller\ErrorController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\IntegrationsController" class="App\CmsBundle\Controller\IntegrationsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\IntegrationsController" class="App\CmsBundle\Controller\IntegrationsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\IntegrationsController" class="App\CmsBundle\Controller\IntegrationsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\JsonController" class="App\CmsBundle\Controller\JsonController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\JsonController" class="App\CmsBundle\Controller\JsonController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\JsonController" class="App\CmsBundle\Controller\JsonController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\LinkController" class="App\CmsBundle\Controller\LinkController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\LinkController" class="App\CmsBundle\Controller\LinkController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\LinkController" class="App\CmsBundle\Controller\LinkController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\LoginController" class="App\CmsBundle\Controller\LoginController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\LoginController" class="App\CmsBundle\Controller\LoginController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\LoginController" class="App\CmsBundle\Controller\LoginController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\MailController" class="App\CmsBundle\Controller\MailController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\MailController" class="App\CmsBundle\Controller\MailController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\MailController" class="App\CmsBundle\Controller\MailController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\MaintenanceController" class="App\CmsBundle\Controller\MaintenanceController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\MaintenanceController" class="App\CmsBundle\Controller\MaintenanceController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\MaintenanceController" class="App\CmsBundle\Controller\MaintenanceController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\MediaController" class="App\CmsBundle\Controller\MediaController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\MediaController" class="App\CmsBundle\Controller\MediaController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\MediaController" class="App\CmsBundle\Controller\MediaController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\MetadataController" class="App\CmsBundle\Controller\MetadataController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\MetadataController" class="App\CmsBundle\Controller\MetadataController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\MetadataController" class="App\CmsBundle\Controller\MetadataController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\MonitorController" class="App\CmsBundle\Controller\MonitorController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\MonitorController" class="App\CmsBundle\Controller\MonitorController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\MonitorController" class="App\CmsBundle\Controller\MonitorController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\MultisiteController" class="App\CmsBundle\Controller\MultisiteController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\MultisiteController" class="App\CmsBundle\Controller\MultisiteController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\MultisiteController" class="App\CmsBundle\Controller\MultisiteController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\NavigationController" class="App\CmsBundle\Controller\NavigationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\NavigationController" class="App\CmsBundle\Controller\NavigationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\NavigationController" class="App\CmsBundle\Controller\NavigationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\PageController" class="App\CmsBundle\Controller\PageController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\PageController" class="App\CmsBundle\Controller\PageController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\PageController" class="App\CmsBundle\Controller\PageController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\RedirectsController" class="App\CmsBundle\Controller\RedirectsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\RedirectsController" class="App\CmsBundle\Controller\RedirectsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\RedirectsController" class="App\CmsBundle\Controller\RedirectsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\SettingsController" class="App\CmsBundle\Controller\SettingsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\SettingsController" class="App\CmsBundle\Controller\SettingsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\SettingsController" class="App\CmsBundle\Controller\SettingsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\SitemapController" class="App\CmsBundle\Controller\SitemapController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\SitemapController" class="App\CmsBundle\Controller\SitemapController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\SitemapController" class="App\CmsBundle\Controller\SitemapController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\StorageController" class="App\CmsBundle\Controller\StorageController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\StorageController" class="App\CmsBundle\Controller\StorageController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\StorageController" class="App\CmsBundle\Controller\StorageController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\SystemController" class="App\CmsBundle\Controller\SystemController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\SystemController" class="App\CmsBundle\Controller\SystemController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\SystemController" class="App\CmsBundle\Controller\SystemController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\TagController" class="App\CmsBundle\Controller\TagController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\TagController" class="App\CmsBundle\Controller\TagController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\TagController" class="App\CmsBundle\Controller\TagController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\TrashController" class="App\CmsBundle\Controller\TrashController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\TrashController" class="App\CmsBundle\Controller\TrashController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\TrashController" class="App\CmsBundle\Controller\TrashController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\UpdateController" class="App\CmsBundle\Controller\UpdateController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\UpdateController" class="App\CmsBundle\Controller\UpdateController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\UpdateController" class="App\CmsBundle\Controller\UpdateController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\CmsBundle\Controller\UsersController" class="App\CmsBundle\Controller\UsersController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\CmsBundle\Controller\UsersController" class="App\CmsBundle\Controller\UsersController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Controller\UsersController" class="App\CmsBundle\Controller\UsersController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\CmsBundle\Repository\UserRepository" class="App\CmsBundle\Repository\UserRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Repository\UserRepository" class="App\CmsBundle\Repository\UserRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\CmsBundle\Twig\Extension\Helpers" class="App\CmsBundle\Twig\Extension\Helpers" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Twig\Extension\Helpers" class="App\CmsBundle\Twig\Extension\Helpers" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\CmsBundle\Twig\Extension\PageInfo" class="App\CmsBundle\Twig\Extension\PageInfo" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Twig\Extension\PageInfo" class="App\CmsBundle\Twig\Extension\PageInfo" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\CmsBundle\Twig\Extension\PageNavigation" class="App\CmsBundle\Twig\Extension\PageNavigation" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Twig\Extension\PageNavigation" class="App\CmsBundle\Twig\Extension\PageNavigation" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\CmsBundle\Type\TrinityEntityType" class="App\CmsBundle\Type\TrinityEntityType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\CmsBundle\Type\TrinityEntityType" class="App\CmsBundle\Type\TrinityEntityType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Trinity\ApiBundle\Controller\AdminController" class="App\Trinity\ApiBundle\Controller\AdminController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Trinity\ApiBundle\Controller\AdminController" class="App\Trinity\ApiBundle\Controller\AdminController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\ApiBundle\Controller\AdminController" class="App\Trinity\ApiBundle\Controller\AdminController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Trinity\ApiBundle\Controller\DefaultController" class="App\Trinity\ApiBundle\Controller\DefaultController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Trinity\ApiBundle\Controller\DefaultController" class="App\Trinity\ApiBundle\Controller\DefaultController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\ApiBundle\Controller\DefaultController" class="App\Trinity\ApiBundle\Controller\DefaultController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Trinity\BlogBundle\Command\BlogMediaMigrationCommand" class="App\Trinity\BlogBundle\Command\BlogMediaMigrationCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\BlogBundle\Command\BlogMediaMigrationCommand" class="App\Trinity\BlogBundle\Command\BlogMediaMigrationCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Trinity\BlogBundle\Command\WpCommand" class="App\Trinity\BlogBundle\Command\WpCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\BlogBundle\Command\WpCommand" class="App\Trinity\BlogBundle\Command\WpCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Trinity\BlogBundle\Controller\BlogController" class="App\Trinity\BlogBundle\Controller\BlogController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Trinity\BlogBundle\Controller\BlogController" class="App\Trinity\BlogBundle\Controller\BlogController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\BlogBundle\Controller\BlogController" class="App\Trinity\BlogBundle\Controller\BlogController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Trinity\BlogBundle\Controller\EntryController" class="App\Trinity\BlogBundle\Controller\EntryController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Trinity\BlogBundle\Controller\EntryController" class="App\Trinity\BlogBundle\Controller\EntryController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\BlogBundle\Controller\EntryController" class="App\Trinity\BlogBundle\Controller\EntryController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Trinity\BlogBundle\Twig\Extension\Timeago" class="App\Trinity\BlogBundle\Twig\Extension\Timeago" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\BlogBundle\Twig\Extension\Timeago" class="App\Trinity\BlogBundle\Twig\Extension\Timeago" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Trinity\FormsBundle\Controller\FormsController" class="App\Trinity\FormsBundle\Controller\FormsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Trinity\FormsBundle\Controller\FormsController" class="App\Trinity\FormsBundle\Controller\FormsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\FormsBundle\Controller\FormsController" class="App\Trinity\FormsBundle\Controller\FormsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Trinity\NeutralBundle\Controller\ConfigController" class="App\Trinity\NeutralBundle\Controller\ConfigController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Trinity\NeutralBundle\Controller\ConfigController" class="App\Trinity\NeutralBundle\Controller\ConfigController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\NeutralBundle\Controller\ConfigController" class="App\Trinity\NeutralBundle\Controller\ConfigController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Trinity\NeutralBundle\Controller\NeutralController" class="App\Trinity\NeutralBundle\Controller\NeutralController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Trinity\NeutralBundle\Controller\NeutralController" class="App\Trinity\NeutralBundle\Controller\NeutralController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\NeutralBundle\Controller\NeutralController" class="App\Trinity\NeutralBundle\Controller\NeutralController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Trinity\NeutralBundle\Controller\ProjectsController" class="App\Trinity\NeutralBundle\Controller\ProjectsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Trinity\NeutralBundle\Controller\ProjectsController" class="App\Trinity\NeutralBundle\Controller\ProjectsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\NeutralBundle\Controller\ProjectsController" class="App\Trinity\NeutralBundle\Controller\ProjectsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Trinity\NeutralBundle\Controller\UsersController" class="App\Trinity\NeutralBundle\Controller\UsersController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Trinity\NeutralBundle\Controller\UsersController" class="App\Trinity\NeutralBundle\Controller\UsersController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\NeutralBundle\Controller\UsersController" class="App\Trinity\NeutralBundle\Controller\UsersController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Trinity\NeutralBundle\Form\ConfigType" class="App\Trinity\NeutralBundle\Form\ConfigType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\NeutralBundle\Form\ConfigType" class="App\Trinity\NeutralBundle\Form\ConfigType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Trinity\NeutralBundle\Repository\BuyInCreditsRepository" class="App\Trinity\NeutralBundle\Repository\BuyInCreditsRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\NeutralBundle\Repository\BuyInCreditsRepository" class="App\Trinity\NeutralBundle\Repository\BuyInCreditsRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Trinity\NeutralBundle\Repository\CommentRepository" class="App\Trinity\NeutralBundle\Repository\CommentRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\NeutralBundle\Repository\CommentRepository" class="App\Trinity\NeutralBundle\Repository\CommentRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Trinity\NeutralBundle\Repository\ConfigRepository" class="App\Trinity\NeutralBundle\Repository\ConfigRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\NeutralBundle\Repository\ConfigRepository" class="App\Trinity\NeutralBundle\Repository\ConfigRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Trinity\NeutralBundle\Repository\MailHistoryRepository" class="App\Trinity\NeutralBundle\Repository\MailHistoryRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\NeutralBundle\Repository\MailHistoryRepository" class="App\Trinity\NeutralBundle\Repository\MailHistoryRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Trinity\NeutralBundle\Repository\ProjectRepository" class="App\Trinity\NeutralBundle\Repository\ProjectRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\NeutralBundle\Repository\ProjectRepository" class="App\Trinity\NeutralBundle\Repository\ProjectRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Trinity\NeutralBundle\Repository\TransactionRepository" class="App\Trinity\NeutralBundle\Repository\TransactionRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\NeutralBundle\Repository\TransactionRepository" class="App\Trinity\NeutralBundle\Repository\TransactionRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Trinity\NeutralBundle\Repository\UserRepository" class="App\Trinity\NeutralBundle\Repository\UserRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\NeutralBundle\Repository\UserRepository" class="App\Trinity\NeutralBundle\Repository\UserRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Trinity\SearchBundle\Command\IndexerCommand" class="App\Trinity\SearchBundle\Command\IndexerCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\SearchBundle\Command\IndexerCommand" class="App\Trinity\SearchBundle\Command\IndexerCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Trinity\SearchBundle\Controller\SearchController" class="App\Trinity\SearchBundle\Controller\SearchController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Trinity\SearchBundle\Controller\SearchController" class="App\Trinity\SearchBundle\Controller\SearchController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\SearchBundle\Controller\SearchController" class="App\Trinity\SearchBundle\Controller\SearchController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Trinity\SliderBundle\Controller\EntryController" class="App\Trinity\SliderBundle\Controller\EntryController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Trinity\SliderBundle\Controller\EntryController" class="App\Trinity\SliderBundle\Controller\EntryController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\SliderBundle\Controller\EntryController" class="App\Trinity\SliderBundle\Controller\EntryController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Trinity\SliderBundle\Controller\SliderController" class="App\Trinity\SliderBundle\Controller\SliderController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Trinity\SliderBundle\Controller\SliderController" class="App\Trinity\SliderBundle\Controller\SliderController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Trinity\SliderBundle\Controller\SliderController" class="App\Trinity\SliderBundle\Controller\SliderController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.app.locale_listener" class="App\CmsBundle\EventListener\LocaleListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.app.locale_listener" class="App\CmsBundle\EventListener\LocaleListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.TrinityApiBundle_show" class="App\Trinity\ApiBundle\Controller\AdminController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.TrinityApiBundle_show" class="App\Trinity\ApiBundle\Controller\AdminController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.TrinityApiBundle_show" class="App\Trinity\ApiBundle\Controller\AdminController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.gSv9zYw" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service_closure" id="container.env_var_processor"/>
        <argument key="bool" type="service_closure" id="container.env_var_processor"/>
        <argument key="const" type="service_closure" id="container.env_var_processor"/>
        <argument key="csv" type="service_closure" id="container.env_var_processor"/>
        <argument key="default" type="service_closure" id="container.env_var_processor"/>
        <argument key="file" type="service_closure" id="container.env_var_processor"/>
        <argument key="float" type="service_closure" id="container.env_var_processor"/>
        <argument key="int" type="service_closure" id="container.env_var_processor"/>
        <argument key="json" type="service_closure" id="container.env_var_processor"/>
        <argument key="key" type="service_closure" id="container.env_var_processor"/>
        <argument key="not" type="service_closure" id="container.env_var_processor"/>
        <argument key="query_string" type="service_closure" id="container.env_var_processor"/>
        <argument key="require" type="service_closure" id="container.env_var_processor"/>
        <argument key="resolve" type="service_closure" id="container.env_var_processor"/>
        <argument key="string" type="service_closure" id="container.env_var_processor"/>
        <argument key="trim" type="service_closure" id="container.env_var_processor"/>
        <argument key="url" type="service_closure" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id=".service_locator.bRdave9" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="response" type="service_closure" id=".errored..service_locator.bRdave9.Symfony\Component\HttpFoundation\Response"/>
      </argument>
    </service>
    <service id=".service_locator.xUrKPVU" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="loader" type="service_closure" id=".errored..service_locator.xUrKPVU.Symfony\Component\Config\Loader\LoaderInterface"/>
      </argument>
    </service>
    <service id=".service_locator.foPrRcS" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="viewhandler" type="service_closure" id="fos_rest.view_handler.default"/>
      </argument>
    </service>
    <service id=".service_locator.t6i3vFk" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="em" type="service_closure" id="doctrine.orm.default_entity_manager"/>
      </argument>
    </service>
    <service id=".service_locator.f547vEI" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="containerInterface" type="service_closure" id="service_container"/>
        <argument key="exception" type="service_closure" id=".errored..service_locator.f547vEI.Symfony\Component\ErrorHandler\Exception\FlattenException"/>
        <argument key="mailer" type="service_closure" id="App\CmsBundle\Util\Mailer"/>
        <argument key="translator" type="service_closure" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.CoH5eTz" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service_closure" id=".errored..service_locator.CoH5eTz.Symfony\Component\HttpFoundation\Session\Session"/>
        <argument key="totpAuthenticator" type="service_closure" id="scheb_two_factor.security.totp_authenticator"/>
      </argument>
    </service>
    <service id=".service_locator.eNXvEIX" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.BLTw9in" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Page" type="service_closure" id="App\CmsBundle\Entity\Page"/>
      </argument>
    </service>
    <service id=".service_locator.FbmMItr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="totpAuthenticator" type="service_closure" id="scheb_two_factor.security.totp_authenticator"/>
      </argument>
    </service>
    <service id=".service_locator.xdg8koy" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\CmsBundle\Controller\ApiController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\CmsBundle\Controller\DefaultController::spotlightSearch" type="service_closure" id=".service_locator.t6i3vFk"/>
        <argument key="App\CmsBundle\Controller\ErrorController::show" type="service_closure" id=".service_locator.f547vEI"/>
        <argument key="App\CmsBundle\Controller\LoginController::setup2fa" type="service_closure" id=".service_locator.CoH5eTz"/>
        <argument key="App\CmsBundle\Controller\MailController::previewIncludeAction" type="service_closure" id=".service_locator.eNXvEIX"/>
        <argument key="App\CmsBundle\Controller\PageController::linkAction" type="service_closure" id=".service_locator.eNXvEIX"/>
        <argument key="App\CmsBundle\Controller\PageController::notify" type="service_closure" id=".service_locator.BLTw9in"/>
        <argument key="App\CmsBundle\Controller\UsersController::profileAction" type="service_closure" id=".service_locator.FbmMItr"/>
        <argument key="App\CmsBundle\Controller\UsersController::setup2fa" type="service_closure" id=".service_locator.CoH5eTz"/>
        <argument key="App\Trinity\ApiBundle\Controller\DefaultController::setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Trinity\BlogBundle\Controller\EntryController::editAction" type="service_closure" id=".service_locator.eNXvEIX"/>
        <argument key="App\Trinity\BlogBundle\Controller\EntryController::indexAction" type="service_closure" id=".service_locator.eNXvEIX"/>
        <argument key="App\Trinity\NeutralBundle\Controller\UsersController::profileAction" type="service_closure" id=".service_locator.FbmMItr"/>
        <argument key="App\Trinity\NeutralBundle\Controller\UsersController::setup2fa" type="service_closure" id=".service_locator.CoH5eTz"/>
        <argument key="kernel::loadRoutes" type="service_closure" id=".service_locator.xUrKPVU"/>
        <argument key="kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.xUrKPVU"/>
        <argument key="kernel::terminate" type="service_closure" id=".service_locator.bRdave9"/>
        <argument key="App\CmsBundle\Controller\ApiController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\CmsBundle\Controller\DefaultController:spotlightSearch" type="service_closure" id=".service_locator.t6i3vFk"/>
        <argument key="App\CmsBundle\Controller\ErrorController:show" type="service_closure" id=".service_locator.f547vEI"/>
        <argument key="App\CmsBundle\Controller\LoginController:setup2fa" type="service_closure" id=".service_locator.CoH5eTz"/>
        <argument key="App\CmsBundle\Controller\MailController:previewIncludeAction" type="service_closure" id=".service_locator.eNXvEIX"/>
        <argument key="App\CmsBundle\Controller\PageController:linkAction" type="service_closure" id=".service_locator.eNXvEIX"/>
        <argument key="App\CmsBundle\Controller\PageController:notify" type="service_closure" id=".service_locator.BLTw9in"/>
        <argument key="App\CmsBundle\Controller\UsersController:profileAction" type="service_closure" id=".service_locator.FbmMItr"/>
        <argument key="App\CmsBundle\Controller\UsersController:setup2fa" type="service_closure" id=".service_locator.CoH5eTz"/>
        <argument key="App\Trinity\ApiBundle\Controller\DefaultController:setViewHandler" type="service_closure" id=".service_locator.foPrRcS"/>
        <argument key="App\Trinity\BlogBundle\Controller\EntryController:editAction" type="service_closure" id=".service_locator.eNXvEIX"/>
        <argument key="App\Trinity\BlogBundle\Controller\EntryController:indexAction" type="service_closure" id=".service_locator.eNXvEIX"/>
        <argument key="App\Trinity\NeutralBundle\Controller\UsersController:profileAction" type="service_closure" id=".service_locator.FbmMItr"/>
        <argument key="App\Trinity\NeutralBundle\Controller\UsersController:setup2fa" type="service_closure" id=".service_locator.CoH5eTz"/>
        <argument key="kernel:loadRoutes" type="service_closure" id=".service_locator.xUrKPVU"/>
        <argument key="kernel:registerContainerConfiguration" type="service_closure" id=".service_locator.xUrKPVU"/>
        <argument key="kernel:terminate" type="service_closure" id=".service_locator.bRdave9"/>
      </argument>
    </service>
    <service id=".service_locator.l6ELYLY" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service_closure" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service_closure" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service_closure" id="validator.not_compromised_password"/>
        <argument key="doctrine.orm.validator.unique" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service_closure" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.O1JVEec" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="esi" type="service_closure" id="fragment.renderer.esi"/>
        <argument key="inline" type="service_closure" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.zPyf80C" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\CmsBundle\Form\CronTaskType" type="service_closure" id="trinity.form.type.cron_task"/>
        <argument key="App\CmsBundle\Type\TrinityEntityType" type="service_closure" id="App\CmsBundle\Type\TrinityEntityType"/>
        <argument key="App\Trinity\NeutralBundle\Form\ConfigType" type="service_closure" id="App\Trinity\NeutralBundle\Form\ConfigType"/>
        <argument key="FOS\OAuthServerBundle\Form\Type\AuthorizeFormType" type="service_closure" id="fos_oauth_server.authorize.form.type"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service_closure" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service_closure" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ColorType" type="service_closure" id="form.type.color"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service_closure" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service_closure" id="form.type.form"/>
      </argument>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.scheb_two_factor.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="scheb_two_factor.security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.role_hierarchy_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.listener.csrf_token_clearing" class="Symfony\Component\Security\Http\EventListener\CsrfTokenClearingLogoutListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="security.ldap_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id="fos_rest.request_matcher.2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/api</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478" class="Symfony\Component\HttpFoundation\RequestMatcher">
      <argument>^/</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="nelmio_api_doc.model_describers.form" class="Nelmio\ApiDocBundle\ModelDescriber\FormModelDescriber">
      <tag name="nelmio_api_doc.model_describer" priority="100"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="collection">
        <argument>json</argument>
      </argument>
    </service>
    <service id=".service_locator.bBRwv06" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service_closure" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
        <argument key="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber" type="service_closure" id="doctrine.orm.listeners.doctrine_dbal_cache_adapter_schema_subscriber"/>
        <argument key="doctrine.orm.listeners.doctrine_token_provider_schema_subscriber" type="service_closure" id="doctrine.orm.listeners.doctrine_token_provider_schema_subscriber"/>
        <argument key="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber" type="service_closure" id="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber"/>
      </argument>
    </service>
    <service id=".service_locator.19zX.pk" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\CmsBundle\Repository\UserRepository" type="service_closure" id="App\CmsBundle\Repository\UserRepository"/>
        <argument key="App\Trinity\NeutralBundle\Repository\BuyInCreditsRepository" type="service_closure" id="App\Trinity\NeutralBundle\Repository\BuyInCreditsRepository"/>
        <argument key="App\Trinity\NeutralBundle\Repository\CommentRepository" type="service_closure" id="App\Trinity\NeutralBundle\Repository\CommentRepository"/>
        <argument key="App\Trinity\NeutralBundle\Repository\ConfigRepository" type="service_closure" id="App\Trinity\NeutralBundle\Repository\ConfigRepository"/>
        <argument key="App\Trinity\NeutralBundle\Repository\MailHistoryRepository" type="service_closure" id="App\Trinity\NeutralBundle\Repository\MailHistoryRepository"/>
        <argument key="App\Trinity\NeutralBundle\Repository\ProjectRepository" type="service_closure" id="App\Trinity\NeutralBundle\Repository\ProjectRepository"/>
        <argument key="App\Trinity\NeutralBundle\Repository\TransactionRepository" type="service_closure" id="App\Trinity\NeutralBundle\Repository\TransactionRepository"/>
        <argument key="App\Trinity\NeutralBundle\Repository\UserRepository" type="service_closure" id="App\Trinity\NeutralBundle\Repository\UserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.KLVvNIq" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.ulid_generator" type="service_closure" id="doctrine.ulid_generator"/>
        <argument key="doctrine.uuid_generator" type="service_closure" id="doctrine.uuid_generator"/>
      </argument>
    </service>
    <service id=".doctrine.orm.default_metadata_driver" class="Doctrine\Bundle\DoctrineBundle\Mapping\MappingDriver">
      <argument type="service" id=".doctrine.orm.default_metadata_driver.inner"/>
      <argument type="service" id=".service_locator.KLVvNIq"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.http_client" class="Symfony\Bridge\Monolog\Logger">
      <argument>http_client</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.mailer" class="Symfony\Bridge\Monolog\Logger">
      <argument>mailer</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.lock" class="Symfony\Bridge\Monolog\Logger">
      <argument>lock</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.nelmio_api_doc" class="Symfony\Bridge\Monolog\Logger">
      <argument>nelmio_api_doc</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="security.authentication.provider.guard.api.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator">
      <argument type="service" id="security.authentication.provider.guard.api.two_factor_decorator.inner"/>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.provider.fos_oauth_server.api.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator">
      <argument type="service" id="security.authentication.provider.fos_oauth_server.api.two_factor_decorator.inner"/>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.provider.anonymous.api.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator">
      <argument type="service" id="security.authentication.provider.anonymous.api.two_factor_decorator.inner"/>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.provider.guard.admin_secured_area.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator">
      <argument type="service" id="security.authentication.provider.guard.admin_secured_area.two_factor_decorator.inner"/>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.provider.dao.admin_secured_area.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator">
      <argument type="service" id="security.authentication.provider.dao.admin_secured_area.two_factor_decorator.inner"/>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.provider.rememberme.admin_secured_area.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator">
      <argument type="service" id="security.authentication.provider.rememberme.admin_secured_area.two_factor_decorator.inner"/>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.provider.anonymous.admin_secured_area.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator">
      <argument type="service" id="security.authentication.provider.anonymous.admin_secured_area.two_factor_decorator.inner"/>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.provider.guard.user_secured_area.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator">
      <argument type="service" id="security.authentication.provider.guard.user_secured_area.two_factor_decorator.inner"/>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.provider.dao.user_secured_area.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator">
      <argument type="service" id="security.authentication.provider.dao.user_secured_area.two_factor_decorator.inner"/>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.provider.rememberme.user_secured_area.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator">
      <argument type="service" id="security.authentication.provider.rememberme.user_secured_area.two_factor_decorator.inner"/>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.provider.anonymous.user_secured_area.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator">
      <argument type="service" id="security.authentication.provider.anonymous.user_secured_area.two_factor_decorator.inner"/>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.provider.anonymous.main.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\Provider\AuthenticationProviderDecorator">
      <argument type="service" id="security.authentication.provider.anonymous.main.two_factor_decorator.inner"/>
      <argument type="service" id="scheb_two_factor.condition_handler"/>
      <argument type="service" id="scheb_two_factor.authentication_context_factory"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash.admin_secured_area.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\RememberMe\RememberMeServicesDecorator">
      <argument type="service" id="security.authentication.rememberme.services.simplehash.admin_secured_area.two_factor_decorator.inner"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash.user_secured_area.two_factor_decorator" class="Scheb\TwoFactorBundle\Security\Authentication\RememberMe\RememberMeServicesDecorator">
      <argument type="service" id="security.authentication.rememberme.services.simplehash.user_secured_area.two_factor_decorator.inner"/>
    </service>
    <service id=".service_locator.z8i6jCx" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service_closure" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service_closure" id="translation.loader.dat"/>
        <argument key="translation.loader.db" type="service_closure" id="translation.loader.db"/>
        <argument key="translation.loader.ini" type="service_closure" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service_closure" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service_closure" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service_closure" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service_closure" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service_closure" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service_closure" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service_closure" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service_closure" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.u9KuSDP" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service_closure" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="fos_rest.view_handler" type="service_closure" id="fos_rest.view_handler.default"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id=".session.deprecated" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.u9KuSDP.App\CmsBundle\Controller\ApiController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\ApiController"/>
      <argument>App\CmsBundle\Controller\ApiController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.u9KuSDP" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service_closure" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id=".session.deprecated" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\CalendarController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\CalendarController"/>
      <argument>App\CmsBundle\Controller\CalendarController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\CommandcontrolController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\CommandcontrolController"/>
      <argument>App\CmsBundle\Controller\CommandcontrolController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\CronTaskController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\CronTaskController"/>
      <argument>App\CmsBundle\Controller\CronTaskController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\DefaultController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\DefaultController"/>
      <argument>App\CmsBundle\Controller\DefaultController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\ErrorController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\ErrorController"/>
      <argument>App\CmsBundle\Controller\ErrorController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\IntegrationsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\IntegrationsController"/>
      <argument>App\CmsBundle\Controller\IntegrationsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\JsonController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\JsonController"/>
      <argument>App\CmsBundle\Controller\JsonController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\LinkController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\LinkController"/>
      <argument>App\CmsBundle\Controller\LinkController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\LoginController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\LoginController"/>
      <argument>App\CmsBundle\Controller\LoginController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\MailController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\MailController"/>
      <argument>App\CmsBundle\Controller\MailController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\MaintenanceController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\MaintenanceController"/>
      <argument>App\CmsBundle\Controller\MaintenanceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\MediaController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\MediaController"/>
      <argument>App\CmsBundle\Controller\MediaController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\MetadataController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\MetadataController"/>
      <argument>App\CmsBundle\Controller\MetadataController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\MonitorController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\MonitorController"/>
      <argument>App\CmsBundle\Controller\MonitorController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\MultisiteController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\MultisiteController"/>
      <argument>App\CmsBundle\Controller\MultisiteController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\NavigationController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\NavigationController"/>
      <argument>App\CmsBundle\Controller\NavigationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\PageController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\PageController"/>
      <argument>App\CmsBundle\Controller\PageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\RedirectsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\RedirectsController"/>
      <argument>App\CmsBundle\Controller\RedirectsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\SettingsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\SettingsController"/>
      <argument>App\CmsBundle\Controller\SettingsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\SitemapController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\SitemapController"/>
      <argument>App\CmsBundle\Controller\SitemapController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\StorageController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\StorageController"/>
      <argument>App\CmsBundle\Controller\StorageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\SystemController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\SystemController"/>
      <argument>App\CmsBundle\Controller\SystemController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\TagController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\TagController"/>
      <argument>App\CmsBundle\Controller\TagController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\TrashController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\TrashController"/>
      <argument>App\CmsBundle\Controller\TrashController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\UpdateController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\UpdateController"/>
      <argument>App\CmsBundle\Controller\UpdateController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\CmsBundle\Controller\UsersController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\CmsBundle\Controller\UsersController"/>
      <argument>App\CmsBundle\Controller\UsersController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Trinity\ApiBundle\Controller\AdminController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Trinity\ApiBundle\Controller\AdminController"/>
      <argument>App\Trinity\ApiBundle\Controller\AdminController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.u9KuSDP.App\Trinity\ApiBundle\Controller\DefaultController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Trinity\ApiBundle\Controller\DefaultController"/>
      <argument>App\Trinity\ApiBundle\Controller\DefaultController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.u9KuSDP" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Trinity\BlogBundle\Controller\BlogController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Trinity\BlogBundle\Controller\BlogController"/>
      <argument>App\Trinity\BlogBundle\Controller\BlogController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Trinity\BlogBundle\Controller\EntryController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Trinity\BlogBundle\Controller\EntryController"/>
      <argument>App\Trinity\BlogBundle\Controller\EntryController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Trinity\FormsBundle\Controller\FormsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Trinity\FormsBundle\Controller\FormsController"/>
      <argument>App\Trinity\FormsBundle\Controller\FormsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Trinity\NeutralBundle\Controller\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Trinity\NeutralBundle\Controller\ConfigController"/>
      <argument>App\Trinity\NeutralBundle\Controller\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Trinity\NeutralBundle\Controller\NeutralController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Trinity\NeutralBundle\Controller\NeutralController"/>
      <argument>App\Trinity\NeutralBundle\Controller\NeutralController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Trinity\NeutralBundle\Controller\ProjectsController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Trinity\NeutralBundle\Controller\ProjectsController"/>
      <argument>App\Trinity\NeutralBundle\Controller\ProjectsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Trinity\NeutralBundle\Controller\UsersController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Trinity\NeutralBundle\Controller\UsersController"/>
      <argument>App\Trinity\NeutralBundle\Controller\UsersController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Trinity\SearchBundle\Controller\SearchController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Trinity\SearchBundle\Controller\SearchController"/>
      <argument>App\Trinity\SearchBundle\Controller\SearchController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Trinity\SliderBundle\Controller\EntryController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Trinity\SliderBundle\Controller\EntryController"/>
      <argument>App\Trinity\SliderBundle\Controller\EntryController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.App\Trinity\SliderBundle\Controller\SliderController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="App\Trinity\SliderBundle\Controller\SliderController"/>
      <argument>App\Trinity\SliderBundle\Controller\SliderController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.mx0UMmY.TrinityApiBundle_show" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="TrinityApiBundle_show"/>
      <argument>TrinityApiBundle_show</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mx0UMmY" method="withContext"/>
    </service>
    <service id=".service_locator.wSgjnB6" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service_closure" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.wSgjnB6.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.wSgjnB6" method="withContext"/>
    </service>
    <service id=".service_locator.OSH1YoD" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service_closure" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.OSH1YoD.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.OSH1YoD" method="withContext"/>
    </service>
    <service id=".service_locator.oCg4uHe" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.oCg4uHe.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.oCg4uHe" method="withContext"/>
    </service>
    <service id=".service_locator.aNklfos" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.aNklfos.sensio_framework_extra.view.listener" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="sensio_framework_extra.view.listener"/>
      <argument>sensio_framework_extra.view.listener</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.aNklfos" method="withContext"/>
    </service>
    <service id=".service_locator.v.Wwsjy" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.v.Wwsjy.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.v.Wwsjy" method="withContext"/>
    </service>
    <service id=".service_locator.XXv1IfR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.9TcZ2i." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="event_dispatcher" type="service_closure" id="debug.event_dispatcher"/>
        <argument key="security.event_dispatcher.admin_secured_area" type="service_closure" id="security.event_dispatcher.admin_secured_area"/>
        <argument key="security.event_dispatcher.api" type="service_closure" id="security.event_dispatcher.api"/>
        <argument key="security.event_dispatcher.main" type="service_closure" id="security.event_dispatcher.main"/>
        <argument key="security.event_dispatcher.user_secured_area" type="service_closure" id="security.event_dispatcher.user_secured_area"/>
      </argument>
    </service>
    <service id=".service_locator.XWmhzGa" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.Kr.dDlB" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="env" type="service_closure" id="container.getenv"/>
      </argument>
    </service>
    <service id=".service_locator.ZOHvDA0" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service_closure" id=".session.do-not-use" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service_closure" id="monolog.logger" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack"/>
        <argument key="session" type="service_closure" id=".session.do-not-use" on-invalid="ignore"/>
        <argument key="session_factory" type="service_closure" id="session.factory" on-invalid="ignore"/>
        <argument key="session_storage" type="service_closure" id="session.storage.native" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.UkE3SaZ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="browser" type="service_closure" id="notifier.channel.browser"/>
        <argument key="chat" type="service_closure" id="notifier.channel.chat"/>
        <argument key="email" type="service_closure" id="notifier.channel.email"/>
        <argument key="push" type="service_closure" id="notifier.channel.push"/>
        <argument key="sms" type="service_closure" id="notifier.channel.sms"/>
      </argument>
    </service>
    <service id=".service_locator.LcVn9Hr" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="request_stack" type="service_closure" id="request_stack"/>
      </argument>
    </service>
    <service id=".service_locator.nLgZj7R" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.scheb_two_factor.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.role_hierarchy_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\Strategy\AffirmativeStrategy">
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="doctrine.migrations.container_aware_migrations_factory.inner" class="Doctrine\Migrations\Version\MigrationFactory">
      <factory service="doctrine.migrations.dependency_factory" method="getMigrationFactory"/>
    </service>
    <service id="scheb_two_factor.security.authentication.trust_resolver.inner" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver"/>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">
      <argument type="service" id=".service_locator.xdg8koy"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver">
      <argument type="service" id=".service_locator.xdg8koy"/>
    </service>
    <service id=".doctrine.orm.default_metadata_driver.inner" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\CmsBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Trinity\ApiBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Trinity\BlogBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Trinity\FormsBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Trinity\SearchBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Trinity\SliderBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Trinity\NeutralBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>FOS\OAuthServerBundle\Entity</argument>
      </call>
    </service>
    <service id="security.authentication.provider.guard.api.two_factor_decorator.inner" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider">
      <argument type="iterator">
        <argument type="service" id="App\CmsBundle\Security\AppUserAuthenticator"/>
      </argument>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument>api</argument>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.user_password_hasher"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.fos_oauth_server.api.two_factor_decorator.inner" class="FOS\OAuthServerBundle\Security\Authentication\Provider\OAuthProvider">
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="fos_oauth_server.server"/>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.authentication.provider.anonymous.api.two_factor_decorator.inner" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider">
      <argument>%container.build_hash%</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.guard.admin_secured_area.two_factor_decorator.inner" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider">
      <argument type="iterator">
        <argument type="service" id="App\CmsBundle\Security\AppUserAuthenticator"/>
      </argument>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument>admin_secured_area</argument>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.user_password_hasher"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.dao.admin_secured_area.two_factor_decorator.inner" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider">
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>admin_secured_area</argument>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument>true</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.rememberme.admin_secured_area.two_factor_decorator.inner" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider">
      <argument type="service" id="security.user_checker"/>
      <argument>%env(APP_SECRET)%</argument>
      <argument>admin_secured_area</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.anonymous.admin_secured_area.two_factor_decorator.inner" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider">
      <argument>%container.build_hash%</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.guard.user_secured_area.two_factor_decorator.inner" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider">
      <argument type="iterator">
        <argument type="service" id="App\CmsBundle\Security\AppUserAuthenticator"/>
      </argument>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument>user_secured_area</argument>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.user_password_hasher"/>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.dao.user_secured_area.two_factor_decorator.inner" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider">
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>user_secured_area</argument>
      <argument type="service" id="security.password_hasher_factory"/>
      <argument>true</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.rememberme.user_secured_area.two_factor_decorator.inner" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider">
      <argument type="service" id="security.user_checker"/>
      <argument>%env(APP_SECRET)%</argument>
      <argument>user_secured_area</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.anonymous.user_secured_area.two_factor_decorator.inner" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider">
      <argument>%container.build_hash%</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.provider.anonymous.main.two_factor_decorator.inner" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider">
      <argument>%container.build_hash%</argument>
      <deprecated package="symfony/security-bundle" version="5.3">The "%service_id%" service is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.authentication.rememberme.services.simplehash.admin_secured_area.two_factor_decorator.inner" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices">
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      </argument>
      <argument>%env(APP_SECRET)%</argument>
      <argument>admin_secured_area</argument>
      <argument type="collection">
        <argument key="lifetime">604800</argument>
        <argument key="path">/</argument>
        <argument key="domain">null</argument>
        <argument key="name">REMEMBERME</argument>
        <argument key="secure">null</argument>
        <argument key="httponly">true</argument>
        <argument key="samesite">lax</argument>
        <argument key="always_remember_me">false</argument>
        <argument key="remember_me_parameter">_remember_me</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash.user_secured_area.two_factor_decorator.inner" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices">
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      </argument>
      <argument>%env(APP_SECRET)%</argument>
      <argument>user_secured_area</argument>
      <argument type="collection">
        <argument key="lifetime">604800</argument>
        <argument key="path">/</argument>
        <argument key="domain">null</argument>
        <argument key="name">REMEMBERME</argument>
        <argument key="secure">null</argument>
        <argument key="httponly">true</argument>
        <argument key="samesite">lax</argument>
        <argument key="always_remember_me">false</argument>
        <argument key="remember_me_parameter">_remember_me</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id=".errored..service_locator.bRdave9.Symfony\Component\HttpFoundation\Response" class="Symfony\Component\HttpFoundation\Response"/>
    <service id=".errored..service_locator.xUrKPVU.Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface"/>
    <service id=".errored..service_locator.f547vEI.Symfony\Component\ErrorHandler\Exception\FlattenException" class="Symfony\Component\ErrorHandler\Exception\FlattenException"/>
    <service id=".errored..service_locator.CoH5eTz.Symfony\Component\HttpFoundation\Session\Session" class="Symfony\Component\HttpFoundation\Session\Session"/>
    <service id=".console.command.about.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>about</argument>
      <argument type="collection"/>
      <argument>Display information about the current project</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.about"/>
    </service>
    <service id=".console.command.assets_install.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>assets:install</argument>
      <argument type="collection"/>
      <argument>Install bundle's web assets under a public directory</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.assets_install"/>
    </service>
    <service id=".console.command.cache_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:clear</argument>
      <argument type="collection"/>
      <argument>Clear the cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_clear"/>
    </service>
    <service id=".console.command.cache_pool_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:clear</argument>
      <argument type="collection"/>
      <argument>Clear cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_clear"/>
    </service>
    <service id=".console.command.cache_pool_prune.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:prune</argument>
      <argument type="collection"/>
      <argument>Prune cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_prune"/>
    </service>
    <service id=".console.command.cache_pool_delete.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:delete</argument>
      <argument type="collection"/>
      <argument>Delete an item from a cache pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_delete"/>
    </service>
    <service id=".console.command.cache_pool_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:list</argument>
      <argument type="collection"/>
      <argument>List available cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_list"/>
    </service>
    <service id=".console.command.cache_warmup.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:warmup</argument>
      <argument type="collection"/>
      <argument>Warm up an empty cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_warmup"/>
    </service>
    <service id=".console.command.config_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:config</argument>
      <argument type="collection"/>
      <argument>Dump the current configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_debug"/>
    </service>
    <service id=".console.command.config_dump_reference.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>config:dump-reference</argument>
      <argument type="collection"/>
      <argument>Dump the default configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_dump_reference"/>
    </service>
    <service id=".console.command.container_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:container</argument>
      <argument type="collection"/>
      <argument>Display current services for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_debug"/>
    </service>
    <service id=".console.command.container_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:container</argument>
      <argument type="collection"/>
      <argument>Ensure that arguments injected into services match type declarations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_lint"/>
    </service>
    <service id=".console.command.debug_autowiring.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:autowiring</argument>
      <argument type="collection"/>
      <argument>List classes/interfaces you can use for autowiring</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.debug_autowiring"/>
    </service>
    <service id=".console.command.dotenv_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:dotenv</argument>
      <argument type="collection"/>
      <argument>Lists all dotenv files with variables and values</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.dotenv_debug"/>
    </service>
    <service id=".console.command.event_dispatcher_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:event-dispatcher</argument>
      <argument type="collection"/>
      <argument>Display configured listeners for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.event_dispatcher_debug"/>
    </service>
    <service id=".console.command.router_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:router</argument>
      <argument type="collection"/>
      <argument>Display current routes for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_debug"/>
    </service>
    <service id=".console.command.router_match.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>router:match</argument>
      <argument type="collection"/>
      <argument>Help debug routes by simulating a path info match</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_match"/>
    </service>
    <service id=".console.command.translation_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:translation</argument>
      <argument type="collection"/>
      <argument>Display translation messages information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_debug"/>
    </service>
    <service id=".console.command.translation_extract.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:extract</argument>
      <argument type="collection">
        <argument>translation:update</argument>
      </argument>
      <argument>Extract missing translations keys from code to translation files.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_extract"/>
    </service>
    <service id=".console.command.validator_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:validator</argument>
      <argument type="collection"/>
      <argument>Display validation constraints for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.validator_debug"/>
    </service>
    <service id=".console.command.translation_pull.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:pull</argument>
      <argument type="collection"/>
      <argument>Pull translations from a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_pull"/>
    </service>
    <service id=".console.command.translation_push.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:push</argument>
      <argument type="collection"/>
      <argument>Push translations to a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_push"/>
    </service>
    <service id=".console.command.xliff_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:xliff</argument>
      <argument type="collection"/>
      <argument>Lint an XLIFF file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.xliff_lint"/>
    </service>
    <service id=".console.command.yaml_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:yaml</argument>
      <argument type="collection"/>
      <argument>Lint a YAML file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.yaml_lint"/>
    </service>
    <service id=".console.command.form_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:form</argument>
      <argument type="collection"/>
      <argument>Display form type information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.form_debug"/>
    </service>
    <service id=".console.command.secrets_set.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:set</argument>
      <argument type="collection"/>
      <argument>Set a secret in the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_set"/>
    </service>
    <service id=".console.command.secrets_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:remove</argument>
      <argument type="collection"/>
      <argument>Remove a secret from the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_remove"/>
    </service>
    <service id=".console.command.secrets_generate_key.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:generate-keys</argument>
      <argument type="collection"/>
      <argument>Generate new encryption keys</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_generate_key"/>
    </service>
    <service id=".console.command.secrets_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:list</argument>
      <argument type="collection"/>
      <argument>List all secrets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_list"/>
    </service>
    <service id=".console.command.secrets_decrypt_to_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:decrypt-to-local</argument>
      <argument type="collection"/>
      <argument>Decrypt all secrets and stores them in the local vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_decrypt_to_local"/>
    </service>
    <service id=".console.command.secrets_encrypt_from_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:encrypt-from-local</argument>
      <argument type="collection"/>
      <argument>Encrypt all local secrets to the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_encrypt_from_local"/>
    </service>
    <service id=".security.command.debug_firewall.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:firewall</argument>
      <argument type="collection"/>
      <argument>Display information about your security firewall(s)</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.debug_firewall"/>
    </service>
    <service id=".security.command.user_password_encoder.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>security:encode-password</argument>
      <argument type="collection"/>
      <argument>Encode a password</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.user_password_encoder"/>
    </service>
    <service id=".security.command.user_password_hash.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>security:hash-password</argument>
      <argument type="collection"/>
      <argument>Hash a user password</argument>
      <argument>false</argument>
      <argument type="service_closure" id="security.command.user_password_hash"/>
    </service>
    <service id=".twig.command.debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:twig</argument>
      <argument type="collection"/>
      <argument>Show a list of twig functions, filters, globals and tests</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.debug"/>
    </service>
    <service id=".twig.command.lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:twig</argument>
      <argument type="collection"/>
      <argument>Lint a Twig template and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.lint"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.7v7NOCI"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:dotenv">console.command.dotenv_debug</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:extract">console.command.translation_extract</argument>
        <argument key="translation:update">console.command.translation_extract</argument>
        <argument key="debug:validator">console.command.validator_debug</argument>
        <argument key="translation:pull">console.command.translation_pull</argument>
        <argument key="translation:push">console.command.translation_push</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="debug:firewall">security.command.debug_firewall</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="security:hash-password">security.command.user_password_hash</argument>
        <argument key="fos:oauth-server:clean">fos_oauth_server.clean_command</argument>
        <argument key="fos:oauth-server:create-client">fos_oauth_server.create_client_command</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="nelmio:apidoc:dump">nelmio_api_doc.command.dump</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="dbal:run-sql">Doctrine\DBAL\Tools\Console\Command\RunSqlCommand</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:sync-metadata-storage">doctrine_migrations.sync_metadata_command</argument>
        <argument key="doctrine:migrations:list">doctrine_migrations.versions_command</argument>
        <argument key="doctrine:migrations:current">doctrine_migrations.current_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="sentry:test">Sentry\SentryBundle\Command\SentryTestCommand</argument>
      </argument>
    </service>
    <service id=".service_locator.7v7NOCI" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service_closure" id=".console.command.about.lazy"/>
        <argument key="console.command.assets_install" type="service_closure" id=".console.command.assets_install.lazy"/>
        <argument key="console.command.cache_clear" type="service_closure" id=".console.command.cache_clear.lazy"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id=".console.command.cache_pool_clear.lazy"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id=".console.command.cache_pool_prune.lazy"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id=".console.command.cache_pool_delete.lazy"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id=".console.command.cache_pool_list.lazy"/>
        <argument key="console.command.cache_warmup" type="service_closure" id=".console.command.cache_warmup.lazy"/>
        <argument key="console.command.config_debug" type="service_closure" id=".console.command.config_debug.lazy"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id=".console.command.config_dump_reference.lazy"/>
        <argument key="console.command.container_debug" type="service_closure" id=".console.command.container_debug.lazy"/>
        <argument key="console.command.container_lint" type="service_closure" id=".console.command.container_lint.lazy"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id=".console.command.debug_autowiring.lazy"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id=".console.command.dotenv_debug.lazy"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id=".console.command.event_dispatcher_debug.lazy"/>
        <argument key="console.command.router_debug" type="service_closure" id=".console.command.router_debug.lazy"/>
        <argument key="console.command.router_match" type="service_closure" id=".console.command.router_match.lazy"/>
        <argument key="console.command.translation_debug" type="service_closure" id=".console.command.translation_debug.lazy"/>
        <argument key="console.command.translation_extract" type="service_closure" id=".console.command.translation_extract.lazy"/>
        <argument key="console.command.validator_debug" type="service_closure" id=".console.command.validator_debug.lazy"/>
        <argument key="console.command.translation_pull" type="service_closure" id=".console.command.translation_pull.lazy"/>
        <argument key="console.command.translation_push" type="service_closure" id=".console.command.translation_push.lazy"/>
        <argument key="console.command.xliff_lint" type="service_closure" id=".console.command.xliff_lint.lazy"/>
        <argument key="console.command.yaml_lint" type="service_closure" id=".console.command.yaml_lint.lazy"/>
        <argument key="console.command.form_debug" type="service_closure" id=".console.command.form_debug.lazy"/>
        <argument key="console.command.secrets_set" type="service_closure" id=".console.command.secrets_set.lazy"/>
        <argument key="console.command.secrets_remove" type="service_closure" id=".console.command.secrets_remove.lazy"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id=".console.command.secrets_generate_key.lazy"/>
        <argument key="console.command.secrets_list" type="service_closure" id=".console.command.secrets_list.lazy"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id=".console.command.secrets_decrypt_to_local.lazy"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id=".console.command.secrets_encrypt_from_local.lazy"/>
        <argument key="security.command.debug_firewall" type="service_closure" id=".security.command.debug_firewall.lazy"/>
        <argument key="security.command.user_password_encoder" type="service_closure" id=".security.command.user_password_encoder.lazy"/>
        <argument key="security.command.user_password_hash" type="service_closure" id=".security.command.user_password_hash.lazy"/>
        <argument key="fos_oauth_server.clean_command" type="service_closure" id="fos_oauth_server.clean_command"/>
        <argument key="fos_oauth_server.create_client_command" type="service_closure" id="fos_oauth_server.create_client_command"/>
        <argument key="twig.command.debug" type="service_closure" id=".twig.command.debug.lazy"/>
        <argument key="twig.command.lint" type="service_closure" id=".twig.command.lint.lazy"/>
        <argument key="nelmio_api_doc.command.dump" type="service_closure" id="nelmio_api_doc.command.dump"/>
        <argument key="doctrine.database_create_command" type="service_closure" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service_closure" id="doctrine.database_drop_command"/>
        <argument key="doctrine.query_sql_command" type="service_closure" id="doctrine.query_sql_command"/>
        <argument key="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" type="service_closure" id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand"/>
        <argument key="doctrine.database_import_command" type="service_closure" id="doctrine.database_import_command"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service_closure" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service_closure" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service_closure" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service_closure" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.mapping_convert_command" type="service_closure" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.schema_create_command" type="service_closure" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service_closure" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service_closure" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service_closure" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.mapping_info_command" type="service_closure" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.clear_query_region_command" type="service_closure" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.query_dql_command" type="service_closure" id="doctrine.query_dql_command"/>
        <argument key="doctrine.schema_update_command" type="service_closure" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service_closure" id="doctrine.schema_validate_command"/>
        <argument key="doctrine.mapping_import_command" type="service_closure" id="doctrine.mapping_import_command"/>
        <argument key="doctrine_migrations.diff_command" type="service_closure" id="doctrine_migrations.diff_command"/>
        <argument key="doctrine_migrations.sync_metadata_command" type="service_closure" id="doctrine_migrations.sync_metadata_command"/>
        <argument key="doctrine_migrations.versions_command" type="service_closure" id="doctrine_migrations.versions_command"/>
        <argument key="doctrine_migrations.current_command" type="service_closure" id="doctrine_migrations.current_command"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service_closure" id="doctrine_migrations.dump_schema_command"/>
        <argument key="doctrine_migrations.execute_command" type="service_closure" id="doctrine_migrations.execute_command"/>
        <argument key="doctrine_migrations.generate_command" type="service_closure" id="doctrine_migrations.generate_command"/>
        <argument key="doctrine_migrations.latest_command" type="service_closure" id="doctrine_migrations.latest_command"/>
        <argument key="doctrine_migrations.migrate_command" type="service_closure" id="doctrine_migrations.migrate_command"/>
        <argument key="doctrine_migrations.rollup_command" type="service_closure" id="doctrine_migrations.rollup_command"/>
        <argument key="doctrine_migrations.status_command" type="service_closure" id="doctrine_migrations.status_command"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service_closure" id="doctrine_migrations.up_to_date_command"/>
        <argument key="doctrine_migrations.version_command" type="service_closure" id="doctrine_migrations.version_command"/>
        <argument key="Sentry\SentryBundle\Command\SentryTestCommand" type="service_closure" id="Sentry\SentryBundle\Command\SentryTestCommand"/>
      </argument>
    </service>
    <service id=".service_locator.pTeli0u" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service_closure" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service_closure" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Bridge\Twig\Extension\SerializerRuntime" type="service_closure" id="twig.runtime.serializer"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service_closure" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container">
      <deprecated package="symfony/dependency-injection" version="5.1">The "%alias_id%" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container"/>
    <service id="App\CmsBundle\Entity\PageInterface" alias="App\CmsBundle\Entity\Page"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack"/>
    <service id="Symfony\Component\HttpKernel\HttpCache\StoreInterface" alias="http_cache.store"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator"/>
    <service id="Symfony\Component\HttpKernel\UriSigner" alias="uri_signer"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger"/>
    <service id="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" alias="fragment.uri_generator"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app">
      <deprecated package="symfony/framework-bundle" version="5.4">The "%alias_id%" alias is deprecated, use "Psr\Cache\CacheItemPoolInterface" instead.</deprecated>
    </service>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.default"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages"/>
    <service id="Symfony\Contracts\HttpClient\HttpClientInterface" alias="http_client"/>
    <service id="Psr\Http\Client\ClientInterface" alias="psr18.http_client"/>
    <service id="mailer" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\MailerInterface" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\Transport\TransportInterface" alias="mailer.default_transport"/>
    <service id="mailer.logger_message_listener" alias="mailer.message_logger_listener">
      <deprecated package="symfony/framework-bundle" version="5.2">The "%alias_id%" alias is deprecated, use "mailer.message_logger_listener" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer"/>
    <service id="translator" alias="translator.default" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer"/>
    <service id="serializer.property_accessor" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object"/>
    <service id="Symfony\Component\Serializer\Normalizer\PropertyNormalizer" alias="serializer.normalizer.property"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="lock.default.store" alias=".lock.default.store.TTEh_gT">
      <deprecated package="symfony/framework-bundle" version="5.2">The "%alias_id%" alias is deprecated, use "lock.default.factory" instead.</deprecated>
    </service>
    <service id="lock.store" alias=".lock.default.store.TTEh_gT">
      <deprecated package="symfony/framework-bundle" version="5.2">The "%alias_id%" alias is deprecated, use "lock.factory" instead.</deprecated>
    </service>
    <service id="lock.factory" alias="lock.default.factory"/>
    <service id="lock" alias="lock.default">
      <deprecated package="symfony/framework-bundle" version="5.2">The "%alias_id%" alias is deprecated, use "lock.factory" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Lock\PersistingStoreInterface" alias=".lock.default.store.TTEh_gT">
      <deprecated package="symfony/framework-bundle" version="5.2">The "%alias_id%" alias is deprecated, use "Symfony\Component\Lock\LockFactory" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Lock\LockFactory" alias="lock.default.factory"/>
    <service id="Symfony\Component\Lock\LockInterface" alias="lock.default">
      <deprecated package="symfony/framework-bundle" version="5.2">The "%alias_id%" alias is deprecated, use "Symfony\Component\Lock\LockFactory" instead.</deprecated>
    </service>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX"/>
    <service id="cache.default_doctrine_dbal_provider" alias="doctrine.dbal.default_connection"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias=".session.do-not-use">
      <deprecated package="symfony/framework-bundle" version="5.3">The "%alias_id%" and "SessionInterface" aliases are deprecated, use "$requestStack-&gt;getSession()" instead.</deprecated>
    </service>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native"/>
    <service id="SessionHandlerInterface" alias="session.handler.native_file"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file">
      <deprecated package="symfony/framework-bundle" version="5.3">The "%alias_id%" alias is deprecated, use "session.storage.factory.mock_file" instead.</deprecated>
    </service>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="session.storage.factory" alias="session.storage.factory.service"/>
    <service id="session.handler" alias="session.handler.native_file"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory"/>
    <service id="form.property_accessor" alias="property_accessor"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator"/>
    <service id="Symfony\Component\Notifier\NotifierInterface" alias="notifier"/>
    <service id="Symfony\Component\Notifier\ChatterInterface" alias="chatter"/>
    <service id="Symfony\Component\Notifier\TexterInterface" alias="texter"/>
    <service id="Symfony\Component\Mime\MimeTypesInterface" alias="mime_types"/>
    <service id="Symfony\Component\Mime\MimeTypeGuesserInterface" alias="mime_types"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic">
      <deprecated package="symfony/security-bundle" version="5.3">The "%alias_id%" service is deprecated, use "security.password_hasher_factory" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true">
      <deprecated package="symfony/security-bundle" version="5.3">The "%alias_id%" service is deprecated, use "security.password_hasher"" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall"/>
    <service id="Symfony\Component\Security\Http\FirewallMapInterface" alias="security.firewall.map"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" alias="security.password_hasher_factory"/>
    <service id="security.password_hasher" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" alias="security.user_password_hasher"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager">
      <deprecated package="symfony/security-bundle" version="5.3">The "%alias_id%" alias is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler">
      <deprecated package="symfony/security-bundle" version="5.3">The "%alias_id%" alias is deprecated, use the new authenticator system instead.</deprecated>
    </service>
    <service id="security.firewall" alias="debug.security.firewall"/>
    <service id="security.authentication.session_strategy.api" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.api" alias="security.user_checker"/>
    <service id="security.authentication.session_strategy.admin_secured_area" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.admin_secured_area" alias="security.user_checker"/>
    <service id="security.authentication.session_strategy.user_secured_area" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.user_secured_area" alias="security.user_checker"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="security.user_checker"/>
    <service id="security.firewall.context_locator" alias=".service_locator.gArUn4e"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker"/>
    <service id="FOS\OAuthServerBundle\Model\ClientManagerInterface" alias="fos_oauth_server.client_manager.default"/>
    <service id="FOS\OAuthServerBundle\Model\AccessTokenManagerInterface" alias="fos_oauth_server.access_token_manager.default"/>
    <service id="FOS\OAuthServerBundle\Model\RefreshTokenManagerInterface" alias="fos_oauth_server.refresh_token_manager.default"/>
    <service id="FOS\OAuthServerBundle\Model\AuthCodeManagerInterface" alias="fos_oauth_server.auth_code_manager.default"/>
    <service id="fos_oauth_server.controller.token" alias="FOS\OAuthServerBundle\Controller\TokenController" public="true"/>
    <service id="fos_oauth_server.storage" alias="fos_oauth_server.storage.default"/>
    <service id="fos_oauth_server.client_manager" alias="fos_oauth_server.client_manager.default"/>
    <service id="fos_oauth_server.access_token_manager" alias="fos_oauth_server.access_token_manager.default"/>
    <service id="fos_oauth_server.refresh_token_manager" alias="fos_oauth_server.refresh_token_manager.default"/>
    <service id="fos_oauth_server.auth_code_manager" alias="fos_oauth_server.auth_code_manager.default"/>
    <service id="fos_oauth_server.user_provider" alias="app_user_provider"/>
    <service id="fos_oauth_server.authorize.form.handler" alias="fos_oauth_server.authorize.form.handler.default"/>
    <service id="FOS\RestBundle\View\ViewHandlerInterface" alias="fos_rest.view_handler.default"/>
    <service id="FOS\RestBundle\Request\ParamFetcherInterface" alias="fos_rest.request.param_fetcher"/>
    <service id="fos_rest.view_handler" alias="fos_rest.view_handler.default" public="true"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default"/>
    <service id="Twig_Environment" alias="twig"/>
    <service id="Twig\Environment" alias="twig"/>
    <service id="nelmio_api_doc.controller.swagger" alias="nelmio_api_doc.controller.swagger_json" public="true"/>
    <service id="nelmio_api_doc.generator" alias="nelmio_api_doc.generator.default" public="true"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="Doctrine\DBAL\Connection $defaultConnection" alias="doctrine.dbal.default_connection"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="cache.doctrine.orm.default.metadata"/>
    <service id="doctrine.orm.default_result_cache" alias="cache.doctrine.orm.default.result"/>
    <service id="doctrine.orm.default_query_cache" alias="cache.doctrine.orm.default.query"/>
    <service id="Doctrine\ORM\EntityManagerInterface $defaultEntityManager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager"/>
    <service id="doctrine.migrations.metadata_storage" alias="doctrine.migrations.storage.table_storage"/>
    <service id="white_october_breadcrumbs" alias="WhiteOctober\BreadcrumbsBundle\Model\Breadcrumbs" public="true"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger"/>
    <service id="slugify" alias="cocur_slugify"/>
    <service id="Cocur\Slugify\SlugifyInterface" alias="cocur_slugify"/>
    <service id="Sentry\FlushableClientInterface" alias="Sentry\ClientInterface"/>
    <service id="scheb_two_factor.csrf_token_manager" alias="security.csrf.token_manager"/>
    <service id="Scheb\TwoFactorBundle\Model\PersisterInterface" alias="scheb_two_factor.persister.doctrine" public="true"/>
    <service id="scheb_two_factor.first_two_factor_handler" alias="scheb_two_factor.condition_handler"/>
    <service id="scheb_two_factor.handler_condition" alias="scheb_two_factor.default_handler_condition"/>
    <service id="Scheb\TwoFactorBundle\Security\TwoFactor\TwoFactorFirewallContext" alias="scheb_two_factor.firewall_context" public="true"/>
    <service id="Scheb\TwoFactorBundle\Security\TwoFactor\Provider\TwoFactorFormRendererInterface" alias="scheb_two_factor.security.form_renderer" public="true"/>
    <service id="scheb_two_factor.security.totp.form_renderer" alias="scheb_two_factor.security.totp.default_form_renderer"/>
    <service id="Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticatorInterface" alias="scheb_two_factor.security.totp_authenticator" public="true"/>
    <service id="Scheb\TwoFactorBundle\Security\TwoFactor\Provider\Totp\TotpAuthenticator" alias="scheb_two_factor.security.totp_authenticator" public="true"/>
    <service id="scheb_two_factor.persister" alias="scheb_two_factor.persister.doctrine"/>
    <service id="scheb_two_factor.ip_whitelist_provider" alias="scheb_two_factor.default_ip_whitelist_provider"/>
    <service id="scheb_two_factor.token_factory" alias="scheb_two_factor.default_token_factory"/>
    <service id="scheb_two_factor.trusted_device_manager" alias="scheb_two_factor.default_trusted_device_manager"/>
    <service id="scheb_two_factor.backup_code_manager" alias="scheb_two_factor.default_backup_code_manager"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.gSv9zYw" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.xdg8koy"/>
    <service id="session" alias=".session.do-not-use" public="true">
      <deprecated package="symfony/framework-bundle" version="5.3">The "%alias_id%" service and "SessionInterface" alias are deprecated, use "$requestStack-&gt;getSession()" instead.</deprecated>
    </service>
    <service id="fos_rest.serializer" alias="fos_rest.serializer.symfony"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="doctrine.id_generator_locator" alias=".service_locator.KLVvNIq"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $httpClientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $mailerLogger" alias="monolog.logger.mailer"/>
    <service id="Psr\Log\LoggerInterface $translationLogger" alias="monolog.logger.translation"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $lockLogger" alias="monolog.logger.lock"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $nelmioApiDocLogger" alias="monolog.logger.nelmio_api_doc"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id=".service_locator.rbIJLYH" alias=".service_locator.gArUn4e"/>
    <service id=".service_locator.9L433w3" alias="nelmio_api_doc.generator_locator"/>
    <service id=".service_locator.0GV1BZZ" alias=".service_locator.gSv9zYw"/>
    <service id=".service_locator.u3WJhf7" alias=".service_locator.f547vEI"/>
    <service id=".service_locator.OOsYuTi" alias=".service_locator.CoH5eTz"/>
    <service id=".service_locator.CNL3Szu" alias=".service_locator.xdg8koy"/>
    <service id=".service_locator.wKF4yn1" alias=".service_locator.l6ELYLY"/>
    <service id=".service_locator.ZG9yxjj" alias=".service_locator.O1JVEec"/>
    <service id=".service_locator.FZUMhE0" alias=".service_locator.zPyf80C"/>
    <service id=".service_locator.4hi2aOY" alias=".service_locator.bBRwv06"/>
    <service id=".service_locator.6llF7Cj" alias=".service_locator.z8i6jCx"/>
    <service id=".service_locator.ai831Oa" alias=".service_locator.u9KuSDP"/>
    <service id=".service_locator.0ghLsew" alias=".service_locator.mx0UMmY"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver"/>
    <service id="argument_resolver" alias="debug.argument_resolver"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html"/>
    <service id="doctrine.migrations.migrations_factory" alias="doctrine.migrations.container_aware_migrations_factory"/>
    <service id="security.authentication.trust_resolver" alias="scheb_two_factor.security.authentication.trust_resolver"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller"/>
    <service id="doctrine.orm.default_metadata_driver" alias=".doctrine.orm.default_metadata_driver"/>
    <service id="security.authentication.provider.guard.api" alias="security.authentication.provider.guard.api.two_factor_decorator"/>
    <service id="security.authentication.provider.fos_oauth_server.api" alias="security.authentication.provider.fos_oauth_server.api.two_factor_decorator"/>
    <service id="security.authentication.provider.anonymous.api" alias="security.authentication.provider.anonymous.api.two_factor_decorator"/>
    <service id="security.authentication.provider.guard.admin_secured_area" alias="security.authentication.provider.guard.admin_secured_area.two_factor_decorator"/>
    <service id="security.authentication.provider.dao.admin_secured_area" alias="security.authentication.provider.dao.admin_secured_area.two_factor_decorator"/>
    <service id="security.authentication.provider.rememberme.admin_secured_area" alias="security.authentication.provider.rememberme.admin_secured_area.two_factor_decorator"/>
    <service id="security.authentication.provider.anonymous.admin_secured_area" alias="security.authentication.provider.anonymous.admin_secured_area.two_factor_decorator"/>
    <service id="security.authentication.provider.guard.user_secured_area" alias="security.authentication.provider.guard.user_secured_area.two_factor_decorator"/>
    <service id="security.authentication.provider.dao.user_secured_area" alias="security.authentication.provider.dao.user_secured_area.two_factor_decorator"/>
    <service id="security.authentication.provider.rememberme.user_secured_area" alias="security.authentication.provider.rememberme.user_secured_area.two_factor_decorator"/>
    <service id="security.authentication.provider.anonymous.user_secured_area" alias="security.authentication.provider.anonymous.user_secured_area.two_factor_decorator"/>
    <service id="security.authentication.provider.anonymous.main" alias="security.authentication.provider.anonymous.main.two_factor_decorator"/>
    <service id="security.authentication.rememberme.services.simplehash.admin_secured_area" alias="security.authentication.rememberme.services.simplehash.admin_secured_area.two_factor_decorator"/>
    <service id="security.authentication.rememberme.services.simplehash.user_secured_area" alias="security.authentication.rememberme.services.simplehash.user_secured_area.two_factor_decorator"/>
    <service id=".service_locator.FatRZu2" alias=".service_locator.bRdave9"/>
    <service id=".service_locator.uo5c0SP" alias=".service_locator.xUrKPVU"/>
    <service id=".service_locator.NYeE_LH" alias=".service_locator.foPrRcS"/>
    <service id=".service_locator.hCumxIO" alias=".service_locator.t6i3vFk"/>
    <service id=".service_locator.UdfjXHb" alias=".service_locator.f547vEI"/>
    <service id=".service_locator.T3iNldA" alias=".service_locator.CoH5eTz"/>
    <service id=".service_locator.tlQjEFS" alias=".service_locator.eNXvEIX"/>
    <service id=".service_locator.sE2zTgm" alias=".service_locator.BLTw9in"/>
    <service id=".service_locator.uXZUgQr" alias=".service_locator.FbmMItr"/>
    <service id=".service_locator.f2TyySU" alias=".service_locator.u9KuSDP"/>
    <service id=".service_locator.JmHnXRx" alias=".service_locator.mx0UMmY"/>
    <service id=".service_locator.7ZXGYAP" alias=".service_locator.9TcZ2i."/>
    <service id=".service_locator.bT.2lOh" alias=".service_locator.ZOHvDA0"/>
    <service id=".service_locator.pFwChgS" alias=".service_locator.UkE3SaZ"/>
    <service id=".service_locator.aa1PbBb" alias=".service_locator.nLgZj7R"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\ActivateBundleCommand" alias="App\CmsBundle\Command\ActivateBundleCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\BackupCommand" alias="App\CmsBundle\Command\BackupCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\BundleListCommand" alias="App\CmsBundle\Command\BundleListCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\CacheCommand" alias="App\CmsBundle\Command\CacheCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\ControlCommand" alias="App\CmsBundle\Command\ControlCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\CreateBundleCommand" alias="App\CmsBundle\Command\CreateBundleCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\CronTasksRunCommand" alias="App\CmsBundle\Command\CronTasksRunCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\FixTranslationsCommand" alias="App\CmsBundle\Command\FixTranslationsCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\InstallBundleCommand" alias="App\CmsBundle\Command\InstallBundleCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\LanguageCacheCommand" alias="App\CmsBundle\Command\LanguageCacheCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\LanguageResetCommand" alias="App\CmsBundle\Command\LanguageResetCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\MailtestCommand" alias="App\CmsBundle\Command\MailtestCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\MediaCreateFullCommand" alias="App\CmsBundle\Command\MediaCreateFullCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\MediaRegenThumbnailsCommand" alias="App\CmsBundle\Command\MediaRegenThumbnailsCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\MediaUsageCommand" alias="App\CmsBundle\Command\MediaUsageCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\MediadirCleanUpCommand" alias="App\CmsBundle\Command\MediadirCleanUpCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\MigrateCommand" alias="App\CmsBundle\Command\MigrateCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\MissingmediaCommand" alias="App\CmsBundle\Command\MissingmediaCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\MonitorCommand" alias="App\CmsBundle\Command\MonitorCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\OptimizeCommand" alias="App\CmsBundle\Command\OptimizeCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\ReportCommand" alias="App\CmsBundle\Command\ReportCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\RestoreCommand" alias="App\CmsBundle\Command\RestoreCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\ScheduleTask\CronTasksDefaultCommand" alias="App\CmsBundle\Command\ScheduleTask\CronTasksDefaultCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\ServerupdateCommand" alias="App\CmsBundle\Command\ServerupdateCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\StatsCommand" alias="App\CmsBundle\Command\StatsCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\UpdateCommand" alias="App\CmsBundle\Command\UpdateCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\UserCommand" alias="App\CmsBundle\Command\UserCommand" public="true"/>
    <service id="console.command.public_alias.App\CmsBundle\Command\WebpCommand" alias="App\CmsBundle\Command\WebpCommand" public="true"/>
    <service id="console.command.public_alias.App\Trinity\BlogBundle\Command\BlogMediaMigrationCommand" alias="App\Trinity\BlogBundle\Command\BlogMediaMigrationCommand" public="true"/>
    <service id="console.command.public_alias.App\Trinity\BlogBundle\Command\WpCommand" alias="App\Trinity\BlogBundle\Command\WpCommand" public="true"/>
    <service id="console.command.public_alias.App\Trinity\SearchBundle\Command\IndexerCommand" alias="App\Trinity\SearchBundle\Command\IndexerCommand" public="true"/>
  </services>
</container>
