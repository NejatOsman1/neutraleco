<?php

namespace Proxies\__CG__\App\CmsBundle\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PageBlockWrapper extends \App\CmsBundle\Entity\PageBlockWrapper implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'id', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'internal_id', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'template_key', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'pos', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'page', 'blocks', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'enabled', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'label', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'intro', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'css_class', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'bg_color', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'css_id', 'clone_type', 'em', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'grid_size', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'anchor', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'select_class', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'select_text_color', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'padding_top', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'padding_right', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'padding_bottom', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'padding_left'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'id', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'internal_id', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'template_key', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'pos', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'page', 'blocks', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'enabled', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'label', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'intro', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'css_class', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'bg_color', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'css_id', 'clone_type', 'em', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'grid_size', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'anchor', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'select_class', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'select_text_color', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'padding_top', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'padding_right', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'padding_bottom', '' . "\0" . 'App\\CmsBundle\\Entity\\PageBlockWrapper' . "\0" . 'padding_left'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PageBlockWrapper $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setInternalId($internalId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInternalId', [$internalId]);

        return parent::setInternalId($internalId);
    }

    /**
     * {@inheritDoc}
     */
    public function getInternalId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInternalId', []);

        return parent::getInternalId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPos($pos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPos', [$pos]);

        return parent::setPos($pos);
    }

    /**
     * {@inheritDoc}
     */
    public function getPos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPos', []);

        return parent::getPos();
    }

    /**
     * {@inheritDoc}
     */
    public function setPage(\App\CmsBundle\Entity\Page $page = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPage', [$page]);

        return parent::setPage($page);
    }

    /**
     * {@inheritDoc}
     */
    public function getPage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPage', []);

        return parent::getPage();
    }

    /**
     * {@inheritDoc}
     */
    public function addBlock(\App\CmsBundle\Entity\PageBlock $block)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBlock', [$block]);

        return parent::addBlock($block);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBlock(\App\CmsBundle\Entity\PageBlock $block)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBlock', [$block]);

        return parent::removeBlock($block);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlocks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlocks', []);

        return parent::getBlocks();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemplateKey($templateKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemplateKey', [$templateKey]);

        return parent::setTemplateKey($templateKey);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplateKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemplateKey', []);

        return parent::getTemplateKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$enabled]);

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', []);

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabel', [$label]);

        return parent::setLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', []);

        return parent::getLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntro($intro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntro', [$intro]);

        return parent::setIntro($intro);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntro()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntro', []);

        return parent::getIntro();
    }

    /**
     * {@inheritDoc}
     */
    public function setCssClass($cssClass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCssClass', [$cssClass]);

        return parent::setCssClass($cssClass);
    }

    /**
     * {@inheritDoc}
     */
    public function getCssClass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCssClass', []);

        return parent::getCssClass();
    }

    /**
     * {@inheritDoc}
     */
    public function setCssId($cssId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCssId', [$cssId]);

        return parent::setCssId($cssId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCssId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCssId', []);

        return parent::getCssId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGridSize($gridSize)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGridSize', [$gridSize]);

        return parent::setGridSize($gridSize);
    }

    /**
     * {@inheritDoc}
     */
    public function getGridSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGridSize', []);

        return parent::getGridSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnchor($anchor = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnchor', [$anchor]);

        return parent::setAnchor($anchor);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnchor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnchor', []);

        return parent::getAnchor();
    }

    /**
     * {@inheritDoc}
     */
    public function setBgColor($bgColor = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBgColor', [$bgColor]);

        return parent::setBgColor($bgColor);
    }

    /**
     * {@inheritDoc}
     */
    public function getBgColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBgColor', []);

        return parent::getBgColor();
    }

    /**
     * {@inheritDoc}
     */
    public function getSelectClass(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSelectClass', []);

        return parent::getSelectClass();
    }

    /**
     * {@inheritDoc}
     */
    public function setSelectClass(?string $select_class): \App\CmsBundle\Entity\PageBlockWrapper
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSelectClass', [$select_class]);

        return parent::setSelectClass($select_class);
    }

    /**
     * {@inheritDoc}
     */
    public function getSelectTextColor(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSelectTextColor', []);

        return parent::getSelectTextColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setSelectTextColor(?string $select_text_color): \App\CmsBundle\Entity\PageBlockWrapper
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSelectTextColor', [$select_text_color]);

        return parent::setSelectTextColor($select_text_color);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaddingTop(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaddingTop', []);

        return parent::getPaddingTop();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaddingTop(?int $padding_top): \App\CmsBundle\Entity\PageBlockWrapper
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaddingTop', [$padding_top]);

        return parent::setPaddingTop($padding_top);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaddingRight(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaddingRight', []);

        return parent::getPaddingRight();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaddingRight(?int $padding_right): \App\CmsBundle\Entity\PageBlockWrapper
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaddingRight', [$padding_right]);

        return parent::setPaddingRight($padding_right);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaddingBottom(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaddingBottom', []);

        return parent::getPaddingBottom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaddingBottom(?int $padding_bottom): \App\CmsBundle\Entity\PageBlockWrapper
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaddingBottom', [$padding_bottom]);

        return parent::setPaddingBottom($padding_bottom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaddingLeft(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaddingLeft', []);

        return parent::getPaddingLeft();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaddingLeft(?int $padding_left): \App\CmsBundle\Entity\PageBlockWrapper
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaddingLeft', [$padding_left]);

        return parent::setPaddingLeft($padding_left);
    }

    /**
     * {@inheritDoc}
     */
    public function classList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'classList', []);

        return parent::classList();
    }

    /**
     * {@inheritDoc}
     */
    public function styleList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'styleList', []);

        return parent::styleList();
    }

}
