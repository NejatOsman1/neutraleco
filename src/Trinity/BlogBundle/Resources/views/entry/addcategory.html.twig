{% extends '@Cms/base.html.twig' %}
{% trans_default_domain 'cms' %}

{% block pagetitle %}{{ 'Nieuws'|trans }}{% endblock %}

{% block body %}
    {% if saved %}
        <div class="card">
            <div class="card-content text-center">
                <i class="fa fa-3x fa-check-circle"></i>
                <h3 class="mt-3">{{'De categorie is succesvol toegevoegd'|trans}}</h3>
            </div>
        </div>

        <script>setTimeout(function(){ window.location = '{{path('admin_mod_blog_entry', {'id': blog.id})}}'; }, 1000);</script>
    {% else %}
    <div class="card">
        <div class="card-content">
            <div class="card-title"><h6>Categorie</h6></div>
            {{ form_start(form) }}
            <input type="hidden" class="image-input" id="image-input" name="image-input" value="{% if category.image is defined and category.image is not empty %}{{ category.image.id }}{% endif %}">

            {{ form_row(form.category, {'label': 'Titel' | trans }) }}
            {{ form_row(form.intro, {'label': 'Introtekst' | trans }) }}

            <div class="form-label">Afbeelding uploaden</div>

            <a class="right btn btn-gray  mb-3" onclick="{#mediaField = '{{Metatag.metatag.id}}';#}addMediaTest(this, 'extra1');">Selecteer een afbeelding</a>

            <div style="display:none;" id="dropzone"><span class="message"></span></div>

            <div id="image-field" class="image-field">
                {% if category.image is defined and category.image is not empty %}
                    <div class="img-thumb">
                      <img src="/uploads/images/{{category.image.path}}" alt="">
                      <div class="btns">
                        <a data-type="extra1" data-uri="/admin/projects/media/delete/category/{{category.id}}" onclick="deleteMedia(this);" class="btn btn-icon red"><i class="far fa-trash-alt"></i></a>
                      </div>
                    </div>
                {% endif %}
            </div>
        </div>
    </div>

    <div class="btn-bar">
        <div class="left">
        </div>
        <div class="right">
            <a href="#" class="btn btn-flat" onClick="history.back()"><i class="fa fa-arrow-left"></i> {{ 'Terug' | trans }}</a>
            <button type="submit"  class="btn"><i class="material-icons left">save</i>{{ 'Opslaan' | trans }}</button>
        </div>
    </div>

    {{ form_end(form) }}

    <form method="post" enctype="multipart/form-data">
        <input type="hidden" id="mediadirid" name="mediadirid" value="{{Mediadir.id}}" />
        <input type="hidden" name="manual_upload" value="1" />
        <input type="file" name="media[]" id="upload_button" />
        <button type="submit">{{'Uploaden'|trans}}</button>
    </form>

    <script src="{{ asset('bundles/cms/ckeditor/ckeditor.js') }}"></script>
    <script type="text/javascript" src="{{asset('bundles/cms/js/jquery.filedrop.js')}}"></script>
    <script type="text/javascript">

        function deleteMedia(el){
            var uri = $(el).data('uri');
            cpop.confirm('Weet u zeker dat u dit bestand wilt verwijderen?', function(){
                $(el).closest('.img-thumb').remove();

                if($('.img-thumb').length == 0){
                    $('#preview-card').hide();
                }

                $('.image-input').val('');

                cpop.close();
            });
        }

        var totalUploadSize = 0;
        var fileDrop;
        var dropped = 0;

        var allowedDocTypes = ['text/plain', 'text/richtext', 'application/msword', 'application/excel', 'application/vnd.ms-excel', 'application/x-excel', 'application/x-msexcel', 'application/pdf', 'application/mspowerpoint', 'application/powerpoint', 'application/vnd.ms-powerpoint', 'application/x-mspowerpoint', 'application/x-iwork-keynote-sffkey', 'application/x-iwork-numbers-sffnumbers', 'application/vnd.apple.keynote', 'application/vnd.apple.pages', 'application/vnd.apple.numbers', 'text/html', 'text/css', 'text/php', 'text/asp', 'text/x-c', 'text/x-script.csh', 'text/x-script.elisp', 'text/x-setext', 'text/webviewhtml', 'text/x-java-source', 'text/x-pascal', 'text/pascal', 'text/x-script.perl', 'text/x-script.perl-module', 'text/x-script.phyton', 'text/x-asm', 'text/sgml', 'text/x-sgml', 'text/x-script.sh', 'text/x-server-parsed-html', 'text/uri-list', 'text/x-uuencode', 'video/msvideo', 'video/avi', 'video/x-msvideo', 'video/mpeg', 'video/mp4', 'video/quicktime', 'audio/basic', 'audio/x-midi', 'audio/mpeg', 'audio/vorbis', 'audio/ogg', 'audio/x-pn-realaudio', 'audio/vnd.rn-realaudio', 'audio/wav', 'audio/x-wav', 'application/x-rar-compressed', 'application/octet-stream', 'application/zip', 'application/csv', 'text/csv'];
        var allowedMediaTypes = ['image/bmp', 'image/gif', 'image/jpeg', 'image/png', 'image/svg+xml', 'image/tiff'];

        var allowedTypes = $.merge( $.merge([], allowedMediaTypes), allowedDocTypes)

        $().ready(function(){
            var msg_idle = '{{"Sleep hier bestanden naar toe of klik hier om deze toe te voegen."|trans}}';
            var msg_hover = '{{"Laat los om toe te voegen."|trans}}';
            var msg_uploading = '{{"Bezig met uploaden..."|trans}}';
            var msg_done_idle = '{{"Uploaden voltooid!"|trans}}';

            fileDrop = $('#dropzone').filedrop({
                fallback_id: 'upload_button',   // an identifier of a standard file input element, becomes the target of "click" events on the dropzone
                url: '{{ path('admin_mod_blog_cat_handler', {'id': category.id, 'type': 'category'}) }}',              // upload handler, handles each file separately, can also be a function taking the file and returning a url
                paramname: 'media',          // POST parameter name used on serverside to reference file, can also be a function taking the filename and returning the paramname
                withCredentials: true,          // make a cross-origin request with cookies
                /*headers: {          // Send additional request headers
                    'header': 'value'
                },*/
                error: function(err, file) {
                    switch(err) {
                        case 'BrowserNotSupported':
                            alert('browser does not support HTML5 drag and drop')
                            break;
                        case 'TooManyFiles':
                            // user uploaded more than 'maxfiles'
                            break;
                        case 'FileTooLarge':
                            cpop.loadHtml('Bestand is te groot. Maximaal toegestaan:<br />Media bestanden: {{ maxMediaFileSize }} KB<br />Alle overige bestanden: {{maxFileSize}} MB');
                            // program encountered a file whose size is greater than 'maxfilesize'
                            // FileTooLarge also has access to the file which was too large
                            // use file.name to reference the filename of the culprit file
                            break;
                        case 'FileTypeNotAllowed':
                            cpop.loadHtml('Bestandstype \'' + file.type + '\' is niet toegestaan.<br/><br/><strong>Toegestane bestanden:</strong><ul><li>' + allowedTypes.join('</li><li>') + '</li></ul>');
                            // The file type is not in the specified list 'allowedfiletypes'
                            break;
                        case 'FileExtensionNotAllowed':
                            // The file extension is not in the specified list 'allowedfileextensions'
                            break;
                        default:
                            break;
                    }
                },
                allowedfiletypes: allowedTypes,   // filetypes allowed by Content-Type.  Empty array means no restrictions
                allowedmediafiletypes: allowedMediaTypes,
                allowedfileextensions: [], // file extensions allowed. Empty array means no restrictions
                maxfiles: 10,
                maxfilesize: {{maxFileSize}},    // max file size in MBs
                maxmediafilesize: {{maxMediaFileSize}}, // max images file size in KB's
                dragOver: function() {
                    // console.info('Entering dropzone');
                    // user dragging files over #dropzone
                    $('#dropzone').addClass('hover').find('.message').html(msg_hover);
                },
                dragLeave: function() {
                    // console.info('Leaving dropzone');
                    $('#dropzone').removeClass('hover').find('.message').html(msg_idle)
                },
                docOver: function() {
                    // user dragging files anywhere inside the browser document window
                },
                docLeave: function() {
                    // user dragging files out of the browser document window
                },
                drop: function() {
                    // user drops file
                    // console.info('File dropped');
                    $('#modal .modal-content .files').html('');
                    $('.file-upload-totals').find('div.progress-bar').removeClass('finished');
                    $('.file-upload-totals').find('div.progress').css('width', '0%');
                    $('#shade,#modal').addClass('show');
                    totalUploadSize = 0;
                    dropped = 0;
                    $('.cancel-btn').show();
                },
                uploadStarted: function(i, file, len){
                    // console.info('Start upload.');
                    $($('.file-upload-preview').get(i)).find('i.fa').attr('class', 'fa fa-fw fa-upload');
                    // a file began uploading
                    // i = index => 0, 1, 2, 3, 4 etc
                    // file is the actual file of the index
                    // len = total files user dropped
                },
                uploadFinished: function(i, file, response, time) {
                    //$('#preview-card').show();
                    // console.info('Start finished.', file);
                    //$($('.file-upload-preview').get(i)).find('i.fa').attr('class', 'fa fa-fw fa-check');
                    //$($('.file-upload-preview').get(i)).find('div.progress-bar').addClass('finished');
                    // response is the data you got back from server in JSON format.
                    var imgUrl = '/uploads/images/' + response.path;
                        /*$('#preview').append($('<div class="img-thumb" style="margin:0 5px 5px 0;width:130px;float: left;border:solid 1px #ddd;border-radius:5px;height:100px;display:inline-block;background:url(' + imgUrl + ') no-repeat;background-size:contain;background-position:center;">\
                                <input type="hidden" name="media_sort[]" value="' + response[0].id + '">\
                            </div>'));*/
                        $('.image-field').empty();
                        $('.image-input').val(response.id);
                        /*$('.image-field').append($('<div class="img-thumb" style="margin:0 5px 5px 0;width:130px;float: left;border:solid 1px #ddd;border-radius:5px;height:100px;display:inline-block;background:url(' + filepath + ') no-repeat;background-size:contain;background-position:center;">\
                            <input type="hidden" name="media_sort[]" value="' + mediaid + '">\
                            <a style="cursor:pointer;" data-uri="nope" onclick="deleteMedia(this);"><i class="material-icons red-text text-lighten-2">clear</i></a>\
                            </div>'));*/
                        $('.image-field').append($('<div class="img-thumb">\
                            <img src="' + imgUrl + '" alt="">\
                            <div class="btns">\
                            <a data-type="extra1" data-uri="nope" onclick="deleteMedia(this);" class="btn btn-icon red"><i class="far fa-trash-alt"></i></a>\
                            </div>\
                        </div>'));
                },
                progressUpdated: function(i, file, progress) {
                    // console.info('File progress:', progress, file);
                    $($('.file-upload-preview').get(i)).find('div.progress').css('width', progress + '%');
                    // this function is used for large files and updates intermittently
                    // progress is the integer value of file being uploaded percentage to completion
                },
                globalProgressUpdated: function(progress) {
                    // console.info('Global progress:', progress);
                    $('.file-upload-totals').find('div.progress').css('width', progress + '%');
                    // progress for all the files uploaded on the current instance (percentage)
                    // ex: $('#progress div').width(progress+"%");
                },
                speedUpdated: function(i, file, speed) {
                    // console.info('Speed changed:', speed, file);
                    // $('.file-upload-totals').find('span.size').html(humanFileSize(totalUploadSize, 1));
                    // speed in kb/s
                },
                rename: function(name) {
                    // console.info('Rename:', name);
                    // name in string format
                    // must return alternate name as string
                },
                beforeEach: function(file) {
                    // console.info('Before file', file);
                    var date = new Date(file.lastModified);
                    var months = ['jan.','feb.','mar.','apr.','may.','jun.','jul.','aug.','sep.','oct.','nov.','dec.'];
                    var year = date.getFullYear();
                    var month = months[date.getMonth()];
                    var day = date.getDate();
                    var hour = date.getHours();
                    var min = date.getMinutes();
                    var sec = date.getSeconds();
                    var fileInfo = $('<div class="file-upload-preview"> \
                        <span class="label"><i class="fa fa-fw fa-clock-o"></i>' + file.name + '</span> \
                        <div class="right"> \
                            <span class="modified">' + day + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec + '</span> \
                            <span class="size">' + humanFileSize(file.size, 1) + '</span> \
                            <span class="progress">0 %</span> \
                            <a href="#" class="delete"></a> \
                        </div> \
                        <div class="progress-bar"><div class="progress" style="width:0%;"></div></div> \
                    </div>');
                    $('#modal .modal-content .files').append(fileInfo);
                    totalUploadSize += file.size;
                    $('.file-upload-totals').find('span.size').html(humanFileSize(totalUploadSize, 1));
                    dropped++;
                    // file is a file object
                    // return false to cancel upload
                },
                beforeSend: function(file, i, done) {
                    if(dropped <= 0){
                        $('.totals').hide();
                    }
                    // console.info('Before send', file);
                    // file is a file object
                    // i is the file index
                    // call done() to start the upload
                    done(); // Start upload
                    $('#dropzone').removeClass('hover').find('.message').html(msg_uploading)
                },
                afterAll: function() {
                    console.log('after all');
                    // console.info('After all');
                    // runs after all files have been uploaded or otherwise dealt with
                    $('.file-upload-totals').find('div.progress-bar').addClass('finished');
                    $('#dropzone').removeClass('hover').find('.message').html(msg_done_idle)

                    // window.location = window.location.href;
                    $('#shade,#modal').removeClass('show');
                    $( ".sortable" ).sortable();
                }
            }).find('.message').html(msg_idle);
        });

        function closeModal(){
            $('#shade,#modal').removeClass('show');
        }

        var callerEl = null;
        function addMedia(el){
            callerEl = $(el);
            cpop.large().loadAjax('{{path('admin_media', {parentid: 0, type: 'all', inline: 1, composer: 1})}}');
            return false;
        }

        function addMediaTest(el, type){
            callerEl = $(el);
            cpop.large().loadAjax('{{path('admin_media', {parentid: 0, type: 'all', inline: 1, composer: 1})}}');
            return false;
        }

        function clickedPopupMedia(mediaid, filepath, label, width){
            $('.image-field').empty();
            $('.image-input').val(mediaid);
            /*$('.image-field').append($('<div class="img-thumb" style="margin:0 5px 5px 0;width:130px;float: left;border:solid 1px #ddd;border-radius:5px;height:100px;display:inline-block;background:url(' + filepath + ') no-repeat;background-size:contain;background-position:center;">\
                <input type="hidden" name="media_sort[]" value="' + mediaid + '">\
                <a style="cursor:pointer;" data-uri="nope" onclick="deleteMedia(this);"><i class="material-icons red-text text-lighten-2">clear</i></a>\
                </div>'));*/
            $('.image-field').append($('<div class="img-thumb">\
                <img src="' + filepath + '" alt="">\
                <div class="btns">\
                <a data-type="extra1" data-uri="nope" onclick="deleteMedia(this);" class="btn btn-icon red"><i class="far fa-trash-alt"></i></a>\
                </div>\
            </div>'));
        }

        function deleteImage(id){
            $('#meta-field-' + id).val('');
            $('#meta-image-' + id).html('');
            $('#meta-imageselect-' + id).show();
        }

        function humanFileSize(size, dec = 2) {
            var i = Math.floor( Math.log(size) / Math.log(1024) );
            return ( size / Math.pow(1024, i) ).toFixed(dec) * 1 + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];
        };
        </script>
{% endif %}
{% endblock %}
